{
    "toxicology": {
        "atom": {
            "atom_id": "the unique id of atoms",
            "molecule_id": "identifying the molecule to which the atom belongs (commonsense evidence:; TRXXX_i represents ith atom of molecule TRXXX)",
            "element": "the element of the toxicology  ( cl: chlorine;  c: carbon;  h: hydrogen;  o: oxygen;  s: sulfur;  n: nitrogen;  p: phosphorus;  na: sodium;  br: bromine;  f: fluorine;  i: iodine;  sn: Tin;  pb: lead;  te: tellurium;  ca: Calcium)"
        },
        "bond": {
            "bond_id": "unique id representing bonds (TRxxx_A1_A2:; TRXXX refers to which molecule; A1 and A2 refers to which atom)",
            "molecule_id": "identifying the molecule in which the bond appears",
            "bond_type": "type of the bond (commonsense evidence:; -: single bond; '=': double bond; '#': triple bond)"
        },
        "connected": {
            "atom_id": "id of the first atom",
            "atom_id2": "id of the second atom",
            "bond_id": "bond id representing bond between two atoms"
        },
        "molecule": {
            "molecule_id": "unique id of molecule (\"+\" --> this molecule / compound is carcinogenic; '-' this molecule is not / compound carcinogenic)",
            "label": "whether this molecule is carcinogenic or not"
        }
    },
    "student_club": {
        "event": {
            "event_id": "A unique identifier for the event",
            "event_name": "event name",
            "event_date": "The date the event took place or is scheduled to take place (e.g. 2020-03-10T12:00:00)",
            "type": "The kind of event, such as game, social, election",
            "notes": "A free text field for any notes about the event",
            "location": "Address where the event was held or is to be held or the name of such a location",
            "status": "One of three values indicating if the event is in planning, is opened, or is closed (Open/ Closed/ Planning)"
        },
        "major": {
            "major_id": "A unique identifier for each major",
            "major_name": "major name",
            "department": "The name of the department that offers the major",
            "college": "The name college that houses the department that offers the major"
        },
        "zip_code": {
            "zip_code": "The ZIP code itself. A five-digit number identifying a US post office.",
            "type": "The kind of ZIP code (commonsense evidence: ; � Standard: the normal codes with which most people are familiar ; � PO Box: zip codes have post office boxes ; � Unique: zip codes that are assigned to individual organizations.)",
            "city": "The city to which the ZIP pertains",
            "county": "The county to which the ZIP pertains",
            "state": "The name of the state to which the ZIP pertains",
            "short_state": "The abbreviation of the state to which the ZIP pertains"
        },
        "attendance": {
            "link_to_event": "The unique identifier of the event which was attended (References the Event table)",
            "link_to_member": "The unique identifier of the member who attended the event (References the Member table)"
        },
        "budget": {
            "budget_id": "A unique identifier for the budget entry",
            "category": "The area for which the amount is budgeted, such as, advertisement, food, parking",
            "spent": "The total amount spent in the budgeted category for an event. (the unit is dollar. This is summarized from the Expense table)",
            "remaining": "A value calculated as the amount budgeted minus the amount spent (the unit is dollar ; commonsense evidence: If the remaining < 0, it means that the cost has exceeded the budget.)",
            "amount": "The amount budgeted for the specified category and event (the unit is dollar ; commonsense evidence:; some computation like: amount = spent + remaining )",
            "event_status": "the status of the event (Closed / Open/ Planning ; commonsense evidence: ;  Closed: It means that the event is closed. The spent and the remaining won't change anymore.;  Open: It means that the event is already opened. The spent and the remaining will change with new expenses.;  Planning: The event is not started yet but is planning. The spent and the remaining won't change at this stage. )",
            "link_to_event": "The unique identifier of the event to which the budget line applies. (References the Event table)"
        },
        "expense": {
            "expense_id": "unique id of income",
            "expense_description": "A textual description of what the money was spend for",
            "expense_date": "The date the expense was incurred (e.g. YYYY-MM-DD)",
            "cost": "The dollar amount of the expense (the unit is dollar)",
            "approved": "A true or false value indicating if the expense was approved (true/ false)",
            "link_to_member": "The member who incurred the expense",
            "link_to_budget": "The unique identifier of the record in the Budget table that indicates the expected total expenditure for a given category and event.  (References the Budget table)"
        },
        "income": {
            "income_id": "A unique identifier for each record of income",
            "date_received": "the date that the fund received",
            "amount": "amount of funds (the unit is dollar)",
            "source": "A value indicating where the funds come from such as dues, or the annual university allocation",
            "notes": "A free-text value giving any needed details about the receipt of funds",
            "link_to_member": "link to member"
        },
        "member": {
            "member_id": "unique id of member",
            "first_name": "member's first name",
            "last_name": "member's last name (commonsense evidence: ; full name is first_name + last_name. e.g. A member's first name is Angela and last name is Sanders. Thus, his/her full name is Angela Sanders.)",
            "email": "member's email",
            "position": "The position the member holds in the club",
            "t_shirt_size": "The size of tee shirt that member wants when shirts are ordered (commonsense evidence: usually the student ordered t-shirt with lager size has bigger body shape )",
            "phone": "The best telephone at which to contact the member",
            "zip": "the zip code of the member's hometown",
            "link_to_major": "The unique identifier of the major of the member. References the Major table"
        }
    },
    "superhero": {
        "alignment": {
            "id": "the unique identifier of the alignment",
            "alignment": "the alignment of the superhero (commonsense evidence:; Alignment refers to a character's moral and ethical stance and can be used to describe the overall attitude or behavior of a superhero. Some common alignments for superheroes include:; Good: These superheroes are typically kind, selfless, and dedicated to protecting others and upholding justice. Examples of good alignments include Superman, Wonder Woman, and Spider-Man.; Neutral: These superheroes may not always prioritize the greater good, but they are not necessarily evil either. They may act in their own self-interest or make decisions based on their own moral code. Examples of neutral alignments include the Hulk and Deadpool.; \tBad: These superheroes are typically selfish, manipulative, and willing to harm others in pursuit of their own goals. Examples of evil alignments include Lex Luthor and the Joker.)"
        },
        "attribute": {
            "id": "the unique identifier of the attribute",
            "attribute_name": "the attribute (commonsense evidence:; A superhero's attribute is a characteristic or quality that defines who they are and what they are capable of. This could be a physical trait, such as superhuman strength or the ability to fly, or a personal trait, such as extraordinary intelligence or exceptional bravery. )"
        },
        "colour": {
            "id": "the unique identifier of the color",
            "colour": "the color of the superhero's skin/eye/hair/etc"
        },
        "gender": {
            "id": "the unique identifier of the gender",
            "gender": "the gender of the superhero"
        },
        "publisher": {
            "id": "the unique identifier of the publisher",
            "publisher_name": "the name of the publisher"
        },
        "race": {
            "id": "the unique identifier of the race",
            "race": "the race of the superhero (commonsense evidence:; In the context of superheroes, a superhero's race would refer to the particular group of people that the superhero belongs to base on these physical characteristics)"
        },
        "superhero": {
            "id": "the unique identifier of the superhero",
            "superhero_name": "the name of the superhero",
            "full_name": "the full name of the superhero (commonsense evidence:; The full name of a person typically consists of their given name, also known as their first name or personal name, and their surname, also known as their last name or family name. For example, if someone's given name is \"John\" and their surname is \"Smith,\" their full name would be \"John Smith.\")",
            "gender_id": "the id of the superhero's gender",
            "eye_colour_id": "the id of the superhero's eye color",
            "hair_colour_id": "the id of the superhero's hair color",
            "skin_colour_id": "the id of the superhero's skin color",
            "race_id": "the id of the superhero's race",
            "publisher_id": "the id of the publisher",
            "alignment_id": "the id of the superhero's alignment",
            "height_cm": "the height of the superhero (commonsense evidence:; The unit of height is centimeter. If the height_cm is NULL or 0, it means the height of the superhero is missing. )",
            "weight_kg": "the weight of the superhero (commonsense evidence:; The unit of weight is kilogram. If the weight_kg is NULL or 0, it means the weight of the superhero is missing.)"
        },
        "hero_attribute": {
            "hero_id": "the id of the hero; Maps to superhero(id)",
            "attribute_id": "the id of the attribute; Maps to attribute(id)",
            "attribute_value": "the attribute value (commonsense evidence:; If a superhero has a higher attribute value on a particular attribute, it means that they are more skilled or powerful in that area compared to other superheroes. For example, if a superhero has a higher attribute value for strength, they may be able to lift heavier objects or deliver more powerful punches than other superheroes.)"
        },
        "superpower": {
            "id": "the unique identifier of the superpower",
            "power_name": "the superpower name"
        },
        "hero_power": {
            "hero_id": "the id of the hero; Maps to superhero(id)",
            "power_id": "the id of the power; Maps to superpower(id) (commonsense evidence:; In general, a superhero's attributes provide the foundation for their abilities and help to define who they are, while their powers are the specific abilities that they use to fight crime and protect others.)"
        }
    },
    "debit_card_specializing": {
        "customers": {
            "customerid": "identification of the customer",
            "segment": "client segment",
            "currency": "Currency"
        },
        "gasstations": {
            "gasstationid": "Gas Station ID",
            "chainid": "Chain ID",
            "country": "",
            "segment": "chain segment"
        },
        "products": {
            "productid": "Product ID",
            "description": "Description"
        },
        "transactions_1k": {
            "transactionid": "Transaction ID",
            "date": "Date",
            "time": "Time",
            "customerid": "Customer ID",
            "cardid": "Card ID",
            "gasstationid": "Gas Station ID",
            "productid": "Product ID",
            "amount": "Amount",
            "price": "Price (commonsense evidence:; ; total price = Amount x Price)"
        },
        "yearmonth": {
            "customerid": "Customer ID",
            "date": "Date",
            "consumption": "consumption"
        }
    },
    "financial": {
        "account": {
            "account_id": "the id of the account",
            "district_id": "location of branch",
            "frequency": "frequency of the acount",
            "date": "the creation date of the account (in the form YYMMDD)"
        },
        "card": {
            "card_id": "id number of credit card",
            "disp_id": "disposition id",
            "type": "type of credit card (\"junior\": junior class of credit card; ; \"classic\": standard class of credit card; ; \"gold\": high-level credit card)",
            "issued": "the date when the credit card issued  (in the form YYMMDD)"
        },
        "client": {
            "client_id": "the unique number",
            "gender": " (F：female ; M：male )",
            "birth_date": "birth date",
            "district_id": "location of branch"
        },
        "disp": {
            "disp_id": "unique number of identifying this row of record",
            "client_id": "id number of client",
            "account_id": "id number of account",
            "type": "type of disposition (\"OWNER\" : \"USER\" : \"DISPONENT\"; commonsense evidence:; the account can only have the right to issue permanent orders or apply for loans)"
        },
        "district": {
            "district_id": "location of branch",
            "a2": "district_name",
            "a3": "region",
            "a4": "",
            "a5": "municipality < district < region",
            "a6": "municipality < district < region",
            "a7": "municipality < district < region",
            "a8": "municipality < district < region",
            "a9": " (not useful)",
            "a10": "ratio of urban inhabitants",
            "a11": "average salary",
            "a12": "unemployment rate 1995",
            "a13": "unemployment rate 1996",
            "a14": "no. of entrepreneurs per 1000 inhabitants",
            "a15": "no. of committed crimes 1995",
            "a16": "no. of committed crimes 1996"
        },
        "loan": {
            "loan_id": "the id number identifying the loan data",
            "account_id": "the id number identifying the account",
            "date": "the date when the loan is approved",
            "amount": "approved amount (unit：US dollar)",
            "duration": "loan duration (unit：month)",
            "payments": "monthly payments (unit：month)",
            "status": "repayment status ('A' stands for contract finished, no problems;; 'B' stands for contract finished, loan not paid;; 'C' stands for running contract, OK so far;; 'D' stands for running contract, client in debt)"
        },
        "order": {
            "order_id": "identifying the unique order",
            "account_id": "id number of account",
            "bank_to": "bank of the recipient",
            "account_to": "account of the recipient (each bank has unique two-letter code)",
            "amount": "debited amount",
            "k_symbol": "purpose of the payment (\"POJISTNE\" stands for insurance payment; \"SIPO\" stands for household payment; \"LEASING\" stands for leasing; \"UVER\" stands for loan payment)"
        },
        "trans": {
            "trans_id": "transaction id",
            "account_id": "",
            "date": "date of transaction",
            "type": "+/- transaction (\"PRIJEM\" stands for credit; \"VYDAJ\" stands for withdrawal)",
            "operation": "mode of transaction (\"VYBER KARTOU\": credit card withdrawal; \"VKLAD\": credit in cash; \"PREVOD Z UCTU\" :collection from another bank; \"VYBER\": withdrawal in cash; \"PREVOD NA UCET\": remittance to another bank)",
            "amount": "amount of money (Unit：USD)",
            "balance": "balance after transaction (Unit：USD)",
            "k_symbol": " (\"POJISTNE\": stands for insurrance payment; \"SLUZBY\": stands for payment for statement; \"UROK\": stands for interest credited; \"SANKC. UROK\": sanction interest if negative balance; \"SIPO\": stands for household; \"DUCHOD\": stands for old-age pension; \"UVER\": stands for loan payment)",
            "bank": " (each bank has unique two-letter code)",
            "account": ""
        }
    },
    "card_games": {
        "cards": {
            "id": "",
            "artist": "The name of the artist that illustrated the card art.",
            "asciiname": "The ASCII(opens new window) (Basic/128) code formatted card name with no special unicode characters.",
            "availability": "A list of the card's available printing types. (\"arena\", \"dreamcast\", \"mtgo\", \"paper\", \"shandalar\")",
            "bordercolor": "The color of the card border. (\"black\", \"borderless\", \"gold\", \"silver\", \"white\")",
            "cardkingdomfoilid": "card Kingdom Foil Id (commonsense evidence:; cardKingdomFoilId, when paired with cardKingdomId that is not Null, is incredibly powerful. )",
            "cardkingdomid": "card Kingdom Id (A list of all the colors in the color indicator)",
            "coloridentity": "A list of all the colors found in manaCost, colorIndicator, and text",
            "colorindicator": "A list of all the colors in the color indicator (The symbol prefixed to a card's types).",
            "colors": "A list of all the colors in manaCost and colorIndicator.  (Some cards may not have values, such as cards with \"Devoid\" in its text.)",
            "convertedmanacost": "The converted mana cost of the card. Use the manaValue property. (if value is higher, it means that this card cost more converted mana )",
            "dueldeck": "The indicator for which duel deck the card is in.",
            "edhrecrank": "The card rank on EDHRec",
            "faceconvertedmanacost": "The converted mana cost or mana value for the face for either half or part of the card.  (if value is higher, it means that this card cost more converted mana for the face)",
            "facename": "The name on the face of the card.",
            "flavorname": "The promotional card name printed above the true card name on special cards that has no game function. (The promotional card name printed above the true card name on special cards that has no game function.)",
            "flavortext": "The italicized text found below the rules text that has no game function. (The italicized text found below the rules text that has no game function.)",
            "frameeffects": "The visual frame effects. (\"colorshifted\", \"companion\", \"compasslanddfc\", \"devoid\", \"draft\", \"etched\", \"extendedart\", \"fullart\", \"inverted\", \"legendary\", \"lesson\", \"miracle\", \"mooneldrazidfc\", \"nyxtouched\", \"originpwdfc\", \"showcase\", \"snow\", \"sunmoondfc\", \"textless\", \"tombstone\", \"waxingandwaningmoondfc\")",
            "frameversion": "The version of the card frame style. (\"1993\", \"1997\", \"2003\", \"2015\", \"future\")",
            "hand": "The starting maximum hand size total modifier.  (A + or - character precedes an integer. ; commonsense evidence:; positive maximum hand size: +1, +2, ....; negative maximum hand size: -1, ....; neural maximum hand size: 0....)",
            "hasalternativedecklimit": "If the card allows a value other than 4 copies in a deck. (0: disallow 1: allow)",
            "hascontentwarning": "If the card marked by Wizards of the Coast (opens new window) for having sensitive content. See this official article (opens new window) for more information. (0: doesn't have 1: has sensitve content or Wizards of the Coast; commonsense evidence:; Cards with this property may have missing or degraded properties and values. )",
            "hasfoil": "If the card can be found in foil (0: cannot be found 1: can be found)",
            "hasnonfoil": "If the card can be found in non-foil (0: cannot be found 1: can be found)",
            "isalternative": "If the card is an alternate variation to an original printing (0: is not 1: is)",
            "isfullart": "If the card has full artwork. (0: doesn't have, 1: has full artwork)",
            "isonlineonly": "If the card is only available in online game variations. (0: is not 1: is)",
            "isoversized": "If the card is oversized. (0: is not 1: is)",
            "ispromo": "If the card is a promotional printing. (0: is not 1: is)",
            "isreprint": "If the card has been reprinted. (0: has not 1: has not been)",
            "isreserved": "If the card is on the Magic: The Gathering Reserved List (opens new window) (If the card is on the Magic, it will appear in The Gathering Reserved List)",
            "isstarter": "If the card is found in a starter deck such as Planeswalker/Brawl decks. (0: is not 1: is)",
            "isstoryspotlight": "If the card is a Story Spotlight card. (0: is not 1: is)",
            "istextless": "If the card does not have a text box. (commonsense evidence:; 0: has a text box;; 1: doesn't have a text box;)",
            "istimeshifted": "If the card is time shifted (commonsense evidence:; If the card is \"timeshifted\", a feature of certain sets where a card will have a different frameVersion.)",
            "keywords": "A list of keywords found on the card.",
            "layout": "The type of card layout. For a token card, this will be \"token\"",
            "leadershipskills": "A list of formats the card is legal to be a commander in",
            "life": "The starting life total modifier. A plus or minus character precedes an integer.",
            "loyalty": "The starting loyalty value of the card. (Used only on cards with \"Planeswalker\" in its types. empty means unkown)",
            "manacost": "The mana cost of the card wrapped in brackets for each value. (commonsense evidence:; manaCost is unconverted mana cost)",
            "mcmid": " (NOT USEFUL)",
            "mcmmetaid": " (NOT USEFUL)",
            "mtgarenaid": " (NOT USEFUL)",
            "mtgjsonv4id": " (NOT USEFUL)",
            "mtgofoilid": " (NOT USEFUL)",
            "mtgoid": " (NOT USEFUL)",
            "multiverseid": " (NOT USEFUL)",
            "name": "The name of the card. (Cards with multiple faces, like \"Split\" and \"Meld\" cards are given a delimiter.)",
            "number": "The number of the card",
            "originalreleasedate": "original Release Date (The original release date in ISO 8601(opens new window) format for a promotional card printed outside of a cycle window, such as Secret Lair Drop promotions.)",
            "originaltext": "original Text (The text on the card as originally printed.)",
            "originaltype": "original Type (The type of the card as originally printed. Includes any supertypes and subtypes.)",
            "otherfaceids": "other Face Ids (A list of card UUID's to this card's counterparts, such as transformed or melded faces.)",
            "power": "The power of the card. (commonsense evidence:; ∞ means infinite power; null or * refers to unknown power)",
            "printings": "A list of set printing codes the card was printed in, formatted in uppercase.",
            "promotypes": "A list of promotional types for a card. (\"arenaleague\", \"boosterfun\", \"boxtopper\", \"brawldeck\", \"bundle\", \"buyabox\", \"convention\", \"datestamped\", \"draculaseries\", \"draftweekend\", \"duels\", \"event\", \"fnm\", \"gameday\", \"gateway\", \"giftbox\", \"gilded\", \"godzillaseries\", \"instore\", \"intropack\", \"jpwalker\", \"judgegift\", \"league\", \"mediainsert\", \"neonink\", \"openhouse\", \"planeswalkerstamped\", \"playerrewards\", \"playpromo\", \"premiereshop\", \"prerelease\", \"promopack\", \"release\", \"setpromo\", \"stamped\", \"textured\", \"themepack\", \"thick\", \"tourney\", \"wizardsplaynetwork\")",
            "purchaseurls": "Links that navigate to websites where the card can be purchased.",
            "rarity": "The card printing rarity.",
            "scryfallid": " (NOT USEFUL)",
            "scryfallillustrationid": " (NOT USEFUL)",
            "scryfalloracleid": " (NOT USEFUL)",
            "setcode": "The set printing code that the card is from.",
            "side": "The identifier of the card side.  (Used on cards with multiple faces on the same card.; commonsense evidence:; if this value is empty, then it means this card doesn't have multiple faces on the same card.)",
            "subtypes": "A list of card subtypes found after em-dash.",
            "supertypes": "A list of card supertypes found before em-dash. (commonsense evidence:; list of all types should be the union of subtypes and supertypes)",
            "tcgplayerproductid": "",
            "text": "The rules text of the card.",
            "toughness": "The toughness of the card.",
            "type": "The type of the card as visible, including any supertypes and subtypes. (\"Artifact\", \"Card\", \"Conspiracy\", \"Creature\", \"Dragon\", \"Dungeon\", \"Eaturecray\", \"Elemental\", \"Elite\", \"Emblem\", \"Enchantment\", \"Ever\", \"Goblin\", \"Hero\", \"Instant\", \"Jaguar\", \"Knights\", \"Land\", \"Phenomenon\", \"Plane\", \"Planeswalker\", \"Scariest\", \"Scheme\", \"See\", \"Sorcery\", \"Sticker\", \"Summon\", \"Token\", \"Tribal\", \"Vanguard\", \"Wolf\", \"You’ll\", \"instant\")",
            "types": "A list of all card types of the card, including Un‑sets and gameplay variants.",
            "uuid": "The universal unique identifier (v5) generated by MTGJSON. Each entry is unique. (NOT USEFUL)",
            "variations": "",
            "watermark": "The name of the watermark on the card."
        },
        "foreign_data": {
            "id": "unique id number identifying this row of data",
            "flavortext": "The foreign flavor text of the card.",
            "language": "The foreign language of card.",
            "multiverseid": "The foreign multiverse identifier of the card.",
            "name": "The foreign name of the card.",
            "text": "The foreign text ruling of the card.",
            "type": "The foreign type of the card. Includes any supertypes and subtypes.",
            "uuid": ""
        },
        "legalities": {
            "id": "unique id identifying this legality",
            "format": "format of play (each value refers to different rules to play)",
            "status": " (• legal; • banned; • restricted)",
            "uuid": ""
        },
        "sets": {
            "id": "unique id identifying this set",
            "basesetsize": "The number of cards in the set.",
            "block": "The block name the set was in.",
            "booster": "A breakdown of possibilities and weights of cards in a booster pack.",
            "code": "The set code for the set.",
            "isfoilonly": "If the set is only available in foil.",
            "isforeignonly": "If the set is available only outside the United States of America.",
            "isnonfoilonly": "If the set is only available in non-foil.",
            "isonlineonly": "If the set is only available in online game variations.",
            "ispartialpreview": "If the set is still in preview (spoiled). Preview sets do not have complete data.",
            "keyrunecode": "The matching Keyrune code for set image icons.",
            "mcmid": "The Magic Card Marketset identifier.",
            "mcmidextras": "The split Magic Card Market set identifier if a set is printed in two sets. This identifier represents the second set's identifier.",
            "mcmname": "",
            "mtgocode": "The set code for the set as it appears on Magic: The Gathering Online (commonsense evidence:; if the value is null or empty, then it doesn't appear on Magic: The Gathering Online)",
            "name": "The name of the set.",
            "parentcode": "The parent set code for set variations like promotions, guild kits, etc.",
            "releasedate": "The release date in ISO 8601 format for the set.",
            "tcgplayergroupid": "The group identifier of the set on TCGplayer",
            "totalsetsize": "The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications - however those cards are included in the set itself.",
            "type": "The expansion type of the set. (\"alchemy\", \"archenemy\", \"arsenal\", \"box\", \"commander\", \"core\", \"draft_innovation\", \"duel_deck\", \"expansion\", \"from_the_vault\", \"funny\", \"masterpiece\", \"masters\", \"memorabilia\", \"planechase\", \"premium_deck\", \"promo\", \"spellbook\", \"starter\", \"token\", \"treasure_chest\", \"vanguard\")"
        }
    },
    "codebase_community": {
        "badges": {
            "id": "the badge id",
            "userid": "the unique id of the user",
            "name": "the badge name the user obtained",
            "date": "the date that the user obtained the badge"
        },
        "comments": {
            "id": "the comment Id",
            "postid": "the unique id of the post",
            "score": "rating score (commonsense evidence:; The score is from 0 to 100. The score more than 60 refers that the comment is a positive comment. The score less than 60 refers that the comment is a negative comment. )",
            "text": "the detailed content of the comment",
            "creationdate": "the creation date of the comment",
            "userid": "the id of the user who post the comment",
            "userdisplayname": "user's display name"
        },
        "posthistory": {
            "id": "the post history id",
            "posthistorytypeid": "the id of the post history type",
            "postid": "the unique id of the post",
            "revisionguid": "the revision globally unique id of the post",
            "creationdate": "the creation date of the post",
            "userid": "the user who post the post",
            "text": "the detailed content of the post",
            "comment": "comments of the post",
            "userdisplayname": "user's display name"
        },
        "postlinks": {
            "id": "the post link id",
            "creationdate": "the creation date of the post link",
            "postid": "the post id",
            "relatedpostid": "the id of the related post",
            "linktypeid": "the id of the link type"
        },
        "posts": {
            "id": "the post id",
            "posttypeid": "the id of the post type",
            "acceptedanswerid": "the accepted answer id of the post ",
            "creaiondate": "the creation date of the post",
            "score": "the score of the post",
            "viewcount": "the view count of the post (commonsense evidence:; Higher view count means the post has higher popularity)",
            "body": "the body of the post",
            "owneruserid": "the id of the owner user",
            "lasactivitydate": "the last activity date",
            "title": "the title of the post",
            "tags": "the tag of the post",
            "answercount": "the total number of answers of the post",
            "commentcount": "the total number of comments of the post",
            "favoritecount": "the total number of favorites of the post (commonsense evidence:; more favorite count refers to more valuable posts. )",
            "lasteditoruserid": "the id of the last editor",
            "lasteditdate": "the last edit date",
            "communityowneddate": "the community owned date",
            "parentid": "the id of the parent post (commonsense evidence:; If the parent id is null, the post is the root post. Otherwise, the post is the child post of other post. )",
            "closeddate": "the closed date of the post (commonsense evidence:; if ClosedDate is null or empty, it means this post is not well-finished; if CloseDate is not null or empty, it means this post has well-finished.)",
            "ownerdisplayname": "the display name of the post owner",
            "lasteditordisplayname": "the display name of the last editor"
        },
        "tags": {
            "id": "the tag id",
            "tagname": "the name of the tag",
            "count": "the count of posts that contain this tag (more counts --> this tag is more popular)",
            "excerptpostid": "the excerpt post id of the tag",
            "wikipostid": "the wiki post id of the tag"
        },
        "users": {
            "id": "the user id",
            "reputation": "the user's reputation (commonsense evidence:; The user with higher reputation has more influence. )",
            "creationdate": "the creation date of the user account",
            "displayname": "the user's display name",
            "lastaccessdate": "the last access date of the user account",
            "websiteurl": "the website url of the user account",
            "location": "user's location",
            "aboutme": "the self introduction of the user",
            "views": "the number of views ",
            "upvotes": "the number of upvotes",
            "downvotes": "the number of downvotes",
            "accountid": "the unique id of the account",
            "age": "user's age ( teenager: 13-18;  adult: 19-65;  elder: > 65)",
            "profileimageurl": "the profile image url"
        },
        "votes": {
            "id": "the vote id",
            "postid": "the id of the post that is voted",
            "votetypeid": "the id of the vote type",
            "creationdate": "the creation date of the vote",
            "userid": "the id of the voter",
            "bountyamount": "the amount of bounty"
        }
    },
    "california_schools": {
        "frpm": {
            "cdscode": "CDSCode",
            "academic year": "Academic Year",
            "county code": "County Code",
            "district code": "District Code",
            "county name": "County Code ",
            "school name": "School Name ",
            "district type": "District Type",
            "educational option type": "Educational Option Type",
            "nslp provision status": "NSLP Provision Status",
            "charter school (y/n)": "Charter School (Y/N) (0: N;; 1: Y)",
            "charter school number": "Charter School Number",
            "charter funding type": "Charter Funding Type",
            "irc": " (Not useful)",
            "low grade": "Low Grade",
            "high grade": "High Grade",
            "enrollment (k-12)": "Enrollment (K-12) (commonsense evidence:; ; K-12: 1st grade - 12nd grade )",
            "free meal count (k-12)": "Free Meal Count (K-12) (commonsense evidence:; ; eligible free rate = Free Meal Count / Enrollment)",
            "percent (%) eligible free (k-12)": "",
            "frpm count (k-12)": "Free or Reduced Price Meal Count (K-12) (commonsense evidence:; ; eligible FRPM rate = FRPM / Enrollment)",
            "percent (%) eligible frpm (k-12)": "",
            "enrollment (ages 5-17)": "Enrollment (Ages 5-17)",
            "free meal count (ages 5-17)": "Free Meal Count (Ages 5-17) (commonsense evidence:; ; eligible free rate = Free Meal Count / Enrollment)",
            "frpm count (ages 5-17)": "",
            "percent (%) eligible frpm (ages 5-17)": "",
            "2013-14 calpads fall 1 certification status": "2013-14 CALPADS Fall 1 Certification Status"
        },
        "satscores": {
            "cds": "California Department Schools",
            "rtype": "rtype (unuseful)",
            "sname": "school name",
            "dname": "district segment",
            "cname": "county name",
            "enroll12": "enrollment (1st-12nd grade)",
            "numtsttakr": "Number of Test Takers in this school (number of test takers in each school)",
            "avgscrread": "average scores in Reading (average scores in Reading)",
            "avgscrmath": "average scores in Math (average scores in Math)",
            "avgscrwrite": "average scores in writing (average scores in writing)",
            "numge1500": "Number of Test Takers Whose Total SAT Scores Are Greater or Equal to 1500 (Number of Test Takers Whose Total SAT Scores Are Greater or Equal to 1500; ; commonsense evidence:; ; Excellence Rate = NumGE1500 / NumTstTakr)"
        },
        "schools": {
            "cdscode": "CDSCode",
            "ncesdist": "This field represents the 7-digit National Center for Educational Statistics (NCES) school district identification number. The first 2 digits identify the state and the last 5 digits identify the school district. Combined, they make a unique 7-digit ID for each school district.",
            "ncesschool": "This field represents the 5-digit NCES school identification number. The NCESSchool combined with the NCESDist form a unique 12-digit ID for each school.",
            "statustype": "This field identifies the status of the district.  (Definitions of the valid status types are listed below:; ·       Active: The district is in operation and providing instructional services.; ·       Closed: The district is not in operation and no longer providing instructional services.; ·       Merged: The district has combined with another district or districts.; ·       Pending: The district has not opened for operation and instructional services yet, but plans to open within the next 9–12 months.)",
            "county": "County name",
            "district": "District",
            "school": "School",
            "street": "Street",
            "streetabr": "The abbreviated street address of the school, district, or administrative authority’s physical location. (The abbreviated street address of the school, district, or administrative authority’s physical location. Note: Some records (primarily records of closed or retired schools) may not have data in this field.)",
            "city": "City",
            "zip": "Zip",
            "state": "State",
            "mailstreet": "MailStreet (The unabbreviated mailing address of the school, district, or administrative authority. Note: 1) Some entities (primarily closed or retired schools) may not have data in this field; 2) Many active entities have not provided a mailing street address. For your convenience we have filled the unpopulated MailStreet cells with Street data.)",
            "mailstrabr": " (the abbreviated mailing street address of the school, district, or administrative authority.Note: Many active entities have not provided a mailing street address. For your convenience we have filled the unpopulated MailStrAbr cells with StreetAbr data.)",
            "mailcity": " (The city associated with the mailing address of the school, district, or administrative authority. Note: Many entities have not provided a mailing address city. For your convenience we have filled the unpopulated MailCity cells with City data.)",
            "mailzip": " (The zip code associated with the mailing address of the school, district, or administrative authority. Note: Many entities have not provided a mailing address zip code. For your convenience we have filled the unpopulated MailZip cells with Zip data.)",
            "mailstate": " (The state within the mailing address. For your convenience we have filled the unpopulated MailState cells with State data.)",
            "phone": "Phone",
            "ext": "The phone number extension of the school, district, or administrative authority. (The phone number extension of the school, district, or administrative authority.)",
            "website": "The website address of the school, district, or administrative authority. (The website address of the school, district, or administrative authority.)",
            "opendate": "The date the school opened.",
            "closeddate": "The date the school closed.",
            "charter": "This field identifies a charter school.  (The field is coded as follows:; ; ·       1 = The school is a charter; ; ·       0 = The school is not a charter)",
            "charternum": "The charter school number, (4-digit number assigned to a charter school.)",
            "fundingtype": "Indicates the charter school funding type (Values are as follows:; ; ·       Not in CS (California School) funding model; ; ·       Locally funded; ; ·       Directly funded)",
            "doc": "District Ownership Code (The District Ownership Code (DOC) is the numeric code used to identify the category of the Administrative Authority.; •       00 - County Office of Education; •       02 – State Board of Education; •       03 – Statewide Benefit Charter; •       31 – State Special Schools; •       34 – Non-school Location*; •       52 – Elementary School District; •       54 – Unified School District; •       56 – High School District; •       98 – Regional Occupational Center/Program (ROC/P); commonsense evidence:; *Only the California Education Authority has been included in the non-school location category.)",
            "doctype": "The District Ownership Code Type is the text description of the DOC category. ((See text values in DOC field description above))",
            "soc": "The School Ownership Code is a numeric code used to identify the type of school. (•      08 - Preschool      ; •       09 – Special Education Schools (Public); •      11 – Youth Authority Facilities (CEA); •       13 – Opportunity Schools; •       14 – Juvenile Court Schools; •       15 – Other County or District Programs; •       31 – State Special Schools; •       60 – Elementary School (Public); •       61 – Elementary School in 1 School District (Public); •       62 – Intermediate/Middle Schools (Public); •       63 – Alternative Schools of Choice; •       64 – Junior High Schools (Public); •       65 – K-12 Schools (Public); •       66 – High Schools (Public); •       67 – High Schools in 1 School District (Public); •       68 – Continuation High Schools; •       69 – District Community Day Schools; •       70 – Adult Education Centers; •       98 – Regional Occupational Center/Program (ROC/P))",
            "soctype": "The School Ownership Code Type is the text description of the type of school. (The School Ownership Code Type is the text description of the type of school.)",
            "edopscode": "The Education Option Code is a short text description of the type of education offered. (; •      ALTSOC – Alternative School of Choice; •      COMM – County Community School; •       COMMDAY – Community Day School; •       CON – Continuation School; •       JUV – Juvenile Court School; •       OPP – Opportunity School; •       YTH – Youth Authority School; •       SSS – State Special School; •       SPEC – Special Education School; •       TRAD – Traditional; •       ROP – Regional Occupational Program; •       HOMHOS – Home and Hospital; •       SPECON – District Consortia Special Education School)",
            "edopsname": "Educational Option Name (The Educational Option Name is the long text description of the type of education being offered.)",
            "eilcode": "The Educational Instruction Level Code is a short text description of the institution's type relative to the grade range served. (•       A – Adult; •       ELEM – Elementary; •       ELEMHIGH – Elementary-High Combination; •       HS – High School; •       INTMIDJR – Intermediate/Middle/Junior High; •       PS – Preschool; •       UG – Ungraded)",
            "eilname": "The Educational Instruction Level Name is the long text description of the institution’s type relative to the grade range served. (The Educational Instruction Level Name is the long text description of the institution’s type relative to the grade range served.)",
            "gsoffered": "The grade span offered is the lowest grade and the highest grade offered or supported by the school, district, or administrative authority. This field might differ from the grade span served as reported in the most recent certified California Longitudinal Pupil Achievement (CALPADS) Fall 1 data collection. (For example XYZ School might display the following data:; ; GSoffered = P–Adult; ; GSserved = K–12)",
            "gsserved": "It is the lowest grade and the highest grade of student enrollment as reported in the most recent certified CALPADS Fall 1 data collection. Only K–12 enrollment is reported through CALPADS. This field may differ from the grade span offered. (commonsense evidence:; ; 1.     Only K–12 enrollment is reported through CALPADS; ; 2.     Note: Special programs at independent study, alternative education, and special education schools will often exceed the typical grade span for schools of that type)",
            "virtual": "This field identifies the type of virtual instruction offered by the school. Virtual instruction is instruction in which students and teachers are separated by time and/or location, and interaction occurs via computers and/or telecommunications technologies.  (The field is coded as follows:; ; ·       F = Exclusively Virtual – The school has no physical building where students meet with each other or with teachers, all instruction is virtual.; ; ·       V = Primarily Virtual – The school focuses on a systematic program of virtual instruction but includes some physical meetings among students or with teachers.; ; ·       C = Primarily Classroom – The school offers virtual courses but virtual instruction is not the primary means of instruction.; ; ·       N = Not Virtual – The school does not offer any virtual instruction.; ; ·       P = Partial Virtual – The school offers some, but not all, instruction through virtual instruction. Note: This value was retired and replaced with the Primarily Virtual and Primarily Classroom values beginning with the 2016–17 school year.)",
            "magnet": "This field identifies whether a school is a magnet school and/or provides a magnet program.  (The field is coded as follows:; ; ·       Y = Magnet - The school is a magnet school and/or offers a magnet program.; ; ·       N = Not Magnet - The school is not a magnet school and/or does not offer a magnet program.; ; commonsense evidence:; ; Note: Preschools and adult education centers do not contain a magnet school indicator.)",
            "latitude": "The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the equator measured north to south. (The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the equator measured north to south.)",
            "longitude": "The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the prime meridian (Greenwich, England) measured from west to east. (The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the prime meridian (Greenwich, England) measured from west to east.)",
            "admfname1": "administrator's first name (The superintendent’s or principal’s first name.; ; commonsense evidence:; ; Only active and pending districts and schools will display administrator information, if applicable.)",
            "admlname1": "administrator's last name (The superintendent’s or principal’s last name.; ; commonsense evidence:; Only active and pending districts and schools will display administrator information, if applicable.)",
            "admemail1": "administrator's email address (The superintendent’s or principal’s email address.; ; commonsense evidence:; ; Only active and pending districts and schools will display administrator information, if applicable.)",
            "admfname2": " (SAME as 1)",
            "admlname2": "",
            "admemail2": "",
            "admfname3": " (not useful)",
            "admlname3": " (not useful)",
            "admemail3": " (not useful)",
            "lastupdate": " (when is this record updated last time)"
        }
    },
    "thrombosis_prediction": {
        "examination": {
            "id": "identification of the patient",
            "examination date": "Examination Date",
            "acl igg": "anti-Cardiolipin antibody (IgG) concentration",
            "acl igm": "anti-Cardiolipin antibody (IgM) concentration",
            "ana": "anti-nucleus antibody concentration",
            "ana pattern": "pattern observed in the sheet of ANA examination",
            "acl iga": "anti-Cardiolipin antibody (IgA) concentration",
            "diagnosis": "disease names",
            "kct": "measure of degree of coagulation (+: positive; ; -: negative)",
            "rvvt": "measure of degree of coagulation (+: positive; ; -: negative)",
            "lac": "measure of degree of coagulation (+: positive; ; -: negative)",
            "symptoms": "other symptoms observed",
            "thrombosis": "degree of thrombosis (0: negative (no thrombosis); 1: positive (the most severe one); 2: positive (severe)3: positive (mild))"
        },
        "patient": {
            "id": "identification of the patient",
            "sex": "Sex (F: female; M: male)",
            "birthday": "Birthday",
            "description": "the first date when a patient data was recorded (null or empty: not recorded)",
            "first date": "the date when a patient came to the hospital",
            "admission": "patient was admitted to the hospital (+) or followed at the outpatient clinic (-) (patient was admitted to the hospital (+) or followed at the outpatient clinic (-))",
            "diagnosis": "disease names"
        },
        "laboratory": {
            "id": "identification of the patient",
            "date": "Date of the laboratory tests (YYMMDD)",
            "got": "AST glutamic oxaloacetic transaminase (Commonsense evidence:; ; Normal range: N < 60)",
            "gpt": "ALT glutamic pyruvic transaminase (Commonsense evidence:; ; Normal range: N < 60)",
            "ldh": "lactate dehydrogenase (Commonsense evidence:; ; Normal range: N < 500)",
            "alp": "alkaliphophatase (Commonsense evidence:; ; Normal range: N < 300)",
            "tp": "total protein (Commonsense evidence:; ; Normal range: 6.0 < N < 8.5)",
            "alb": "albumin (Commonsense evidence:; ; Normal range: 3.5 < N < 5.5)",
            "ua": "uric acid (Commonsense evidence:; ; Normal range: N > 8.0 (Male)N > 6.5 (Female))",
            "un": "urea nitrogen (Commonsense evidence:; ; Normal range: N < 30)",
            "cre": "creatinine (Commonsense evidence:; ; Normal range: N < 1.5)",
            "t-bil": "total bilirubin (Commonsense evidence:; ; Normal range: N < 2.0)",
            "t-cho": "total cholesterol (Commonsense evidence:; Normal range: N < 250)",
            "tg": "triglyceride (Commonsense evidence:; ; Normal range: N < 200)",
            "cpk": "creatinine phosphokinase (Commonsense evidence:; Normal range: N < 250)",
            "glu": "blood glucose (Commonsense evidence:; Normal range: N < 180)",
            "wbc": "White blood cell (Commonsense evidence:; Normal range: 3.5 < N < 9.0)",
            "rbc": "Red blood cell (Commonsense evidence:; ; Normal range: 3.5 < N < 6.0)",
            "hgb": "Hemoglobin (Commonsense evidence:; ; Normal range: 10 < N < 17)",
            "hct": "Hematoclit (Commonsense evidence:; Normal range: 29 < N < 52)",
            "plt": "platelet (Commonsense evidence:; ; Normal range: 100 < N < 400)",
            "pt": "prothrombin time (Commonsense evidence:; ; Normal range: N < 14)",
            "aptt": "activated partial prothrombin time (Commonsense evidence:; ; Normal range: N < 45)",
            "fg": "fibrinogen (Commonsense evidence:; ; Normal range: 150 < N < 450)",
            "pic": "",
            "tat": "",
            "tat2": "",
            "u-pro": "proteinuria (Commonsense evidence:; ; Normal range: 0 < N < 30)",
            "igg": "Ig G (Commonsense evidence:; ; Normal range: 900 < N < 2000)",
            "iga": "Ig A (Commonsense evidence:; ; Normal range: 80 < N < 500)",
            "igm": "Ig M (Commonsense evidence:; ; Normal range: 40 < N < 400)",
            "crp": "C-reactive protein (Commonsense evidence:; ; Normal range: N= -, +-, or N < 1.0)",
            "ra": "Rhuematoid Factor (Commonsense evidence:; ; Normal range: N= -, +-)",
            "rf": "RAHA (Commonsense evidence:; ; Normal range: N < 20)",
            "c3": "complement 3 (Commonsense evidence:; ; Normal range: N > 35)",
            "c4": "complement 4 (Commonsense evidence:; ; Normal range: N > 10)",
            "rnp": "anti-ribonuclear protein (Commonsense evidence:; ; Normal range: N= -, +-)",
            "sm": "anti-SM (Commonsense evidence:; ; Normal range: N= -, +-)",
            "sc170": "anti-scl70 (Commonsense evidence:; ; Normal range: N= -, +-)",
            "ssa": "anti-SSA (Commonsense evidence:; ; Normal range: N= -, +-)",
            "ssb": "anti-SSB (Commonsense evidence:; ; Normal range: N= -, +-)",
            "centromea": "anti-centromere (Commonsense evidence:; ; Normal range: N= -, +-)",
            "dna": "anti-DNA (Commonsense evidence:; ; Normal range: N < 8)",
            "dna-ii": "anti-DNA (Commonsense evidence:; ; Normal range: N < 8)"
        }
    },
    "formula_1": {
        "circuits": {
            "circuitid": "unique identification number of the circuit ",
            "circuitref": "circuit reference name "
        },
        "constructorresults": {
            "constructorresultsid": "constructor Results Id",
            "raceid": "race id",
            "constructorid": "constructor id",
            "points": "points",
            "status": "status"
        },
        "constructorstandings": {
            "points": "how many points acquired in each race "
        },
        "results": {
            "resultid": "the unique identification number identifying race result ",
            "raceid": "the identification number identifying the race "
        }
    },
    "european_football_2": {
        "player_attributes": {
            "id": "the unique id for players",
            "player_fifa_api_id": "the id of the player fifa api",
            "player_api_id": "the id of the player api",
            "date": "date (e.g. 2016-02-18 00:00:00)",
            "overall_rating": "the overall rating of the player (commonsense reasoning: ; The rating is between 0-100 which is calculated by FIFA.;  Higher overall rating means the player has a stronger overall strength.)",
            "potential": "potential of the player (commonsense reasoning: ; The potential score is between 0-100 which is calculated by FIFA.;  Higher potential score means that the player has more potential)",
            "preferred_foot": "the player's preferred foot when attacking (right/ left)",
            "attacking_work_rate": "the player's attacking work rate (commonsense reasoning: ;  high: implies that the player is going to be in all of your attack moves;  medium: implies that the player will select the attack actions he will join in;  low: remain in his position while the team attacks )",
            "defensive_work_rate": "the player's defensive work rate (commonsense reasoning: ;  high: remain in his position and defense while the team attacks ;  medium: implies that the player will select the defensive actions he will join in;  low: implies that the player is going to be in all of your attack moves instead of defensing)",
            "crossing": "the player's crossing score  (commonsense reasoning: ; Cross is a long pass into the opponent's goal towards the header of sixth-yard teammate.;  The crossing score is between 0-100 which measures the tendency/frequency of crosses in the box.;  Higher potential score means that the player performs better in crossing actions. )",
            "finishing": "the player's finishing rate (0-100 which is calculated by FIFA)",
            "heading_accuracy": "the player's heading accuracy (0-100 which is calculated by FIFA)",
            "short_passing": "the player's short passing score (0-100 which is calculated by FIFA)",
            "volleys": "the player's volley score (0-100 which is calculated by FIFA)",
            "dribbling": "the player's dribbling score (0-100 which is calculated by FIFA)",
            "curve": "the player's curve score (0-100 which is calculated by FIFA)",
            "free_kick_accuracy": "the player's free kick accuracy (0-100 which is calculated by FIFA)",
            "long_passing": "the player's long passing score (0-100 which is calculated by FIFA)",
            "ball_control": "the player's ball control score (0-100 which is calculated by FIFA)",
            "acceleration": "the player's acceleration score (0-100 which is calculated by FIFA)",
            "sprint_speed": "the player's sprint speed;  (0-100 which is calculated by FIFA)",
            "agility": "the player's agility (0-100 which is calculated by FIFA)",
            "reactions": "the player's reactions score (0-100 which is calculated by FIFA)",
            "balance": "the player's balance score (0-100 which is calculated by FIFA)",
            "shot_power": "the player's shot power (0-100 which is calculated by FIFA)",
            "jumping": "the player's jumping score (0-100 which is calculated by FIFA)",
            "stamina": "the player's stamina score (0-100 which is calculated by FIFA)",
            "strength": "the player's strength score (0-100 which is calculated by FIFA)",
            "long_shots": "the player's long shots score (0-100 which is calculated by FIFA)",
            "aggression": "the player's aggression score (0-100 which is calculated by FIFA)",
            "interceptions": "the player's interceptions score (0-100 which is calculated by FIFA)",
            "positioning": "the player's ; positioning score;  (0-100 which is calculated by FIFA)",
            "vision": "the player's vision score;  (0-100 which is calculated by FIFA)",
            "penalties": "the player's penalties score;  (0-100 which is calculated by FIFA)",
            "marking": "the player's markingscore (0-100 which is calculated by FIFA)",
            "standing_tackle": "the player's standing tackle score (0-100 which is calculated by FIFA)",
            "sliding_tackle": "the player's sliding tackle score (0-100 which is calculated by FIFA)",
            "gk_diving": "the player's goalkeep diving score (0-100 which is calculated by FIFA)",
            "gk_handling": "the player's goalkeep diving score (0-100 which is calculated by FIFA)",
            "gk_kicking": "the player's goalkeep kicking score (0-100 which is calculated by FIFA)",
            "gk_positioning": "the player's goalkeep positioning score (0-100 which is calculated by FIFA)",
            "gk_reflexes": "the player's goalkeep reflexes score (0-100 which is calculated by FIFA)"
        },
        "player": {
            "id": "the unique id for players",
            "player_api_id": "the id of the player api",
            "player_name": "player name",
            "player_fifa_api_id": "the id of the player fifa api",
            "birthday": "the player's birthday (e.g. 1992-02-29 00:00:00 ; commonsense reasoning: ; Player A is older than player B means that A's birthday is earlier than B's)",
            "height": "the player's height",
            "weight": "the player's weight"
        },
        "league": {
            "id": "the unique id for leagues",
            "country_id": "the unique id for countries",
            "name": "league name"
        },
        "country": {
            "id": "the unique id for countries",
            "name": "country name"
        },
        "team": {
            "id": "the unique id for teams",
            "team_api_id": "the id of the team api",
            "team_fifa_api_id": "the id of the team fifa api",
            "team_long_name": "the team's long name",
            "team_short_name": "the team's short name"
        },
        "team_attributes": {
            "id": "the unique id for teams",
            "team_fifa_api_id": "the id of the team fifa api",
            "team_api_id": "the id of the team api",
            "date": "Date (e.g. 2010-02-22 00:00:00)",
            "buildupplayspeed": "the speed in which attacks are put together  (the score which is between 1-00 to measure the team's attack speed)",
            "buildupplayspeedclass": "the speed class (commonsense reasoning: ;  Slow: 1-33;  Balanced: 34-66;  Fast: 66-100)",
            "buildupplaydribbling": "the tendency/ frequency of dribbling",
            "buildupplaydribblingclass": "the dribbling class (commonsense reasoning: ;  Little: 1-33;  Normal: 34-66;  Lots: 66-100)",
            "buildupplaypassing": "affects passing distance and support from teammates",
            "buildupplaypassingclass": "the passing class (commonsense reasoning: ;  Short: 1-33;  Mixed: 34-66;  Long: 66-100)",
            "buildupplaypositioningclass": "A team's freedom of movement in the 1st two thirds of the pitch (Organised / Free Form)",
            "chancecreationpassing": "Amount of risk in pass decision and run support",
            "chancecreationpassingclass": "the chance creation passing class (commonsense reasoning: ;  Safe: 1-33;  Normal: 34-66;  Risky: 66-100)",
            "chancecreationcrossing": "The tendency / frequency of crosses into the box",
            "chancecreationcrossingclass": "the chance creation crossing class (commonsense reasoning: ;  Little: 1-33;  Normal: 34-66;  Lots: 66-100)",
            "chancecreationshooting": "The tendency / frequency of shots taken",
            "chancecreationshootingclass": "the chance creation shooting class (commonsense reasoning: ;  Little: 1-33;  Normal: 34-66;  Lots: 66-100)",
            "chancecreationpositioningclass": "A teams freedom of movement in the final third of the pitch (Organised / Free Form)",
            "defencepressure": "Affects how high up the pitch the team will start pressuring",
            "defencepressureclass": "the defence pressure class (commonsense reasoning: ;  Deep: 1-33;  Medium: 34-66;  High: 66-100)",
            "defenceaggression": "Affect the teams approach to tackling the ball possessor",
            "defenceaggressionclass": "the defence aggression class (commonsense reasoning: ;  Contain: 1-33;  Press: 34-66;  Double: 66-100)",
            "defenceteamwidth": "Affects how much the team will shift to the ball side",
            "defenceteamwidthclass": "the defence team width class (commonsense reasoning: ;  Narrow: 1-33;  Normal: 34-66;  Wide: 66-100)",
            "defencedefenderlineclass": "Affects the shape and strategy of the defence (Cover/ Offside Trap)"
        },
        "match": {
            "id": "the unique id for matches",
            "country_id": "country id",
            "league_id": "league id",
            "season": "the season of the match",
            "stage": "the stage of the match",
            "date": "the date of the match (e.g. 2008-08-17 00:00:00)",
            "match_api_id": "the id of the match api",
            "home_team_api_id": "the id of the home team api",
            "away_team_api_id": "the id of the away team api",
            "home_team_goal": "the goal of the home team",
            "away_team_goal": "the goal of the away team",
            "home_player_x1": "",
            "home_player_x2": "",
            "home_player_x3": "",
            "home_player_x4": "",
            "home_player_x5": "",
            "home_player_x6": "",
            "home_player_x7": "",
            "home_player_x8": "",
            "home_player_x9": "",
            "home_player_x10": "",
            "home_player_x11": "",
            "away_player_x1": "",
            "away_player_x2": "",
            "away_player_x3": "",
            "away_player_x4": "",
            "away_player_x5": "",
            "away_player_x6": "",
            "away_player_x7": "",
            "away_player_x8": "",
            "away_player_x9": "",
            "away_player_x10": "",
            "away_player_x11": "",
            "home_player_y1": "",
            "home_player_y2": "",
            "home_player_y3": "",
            "home_player_y4": "",
            "home_player_y5": "",
            "home_player_y6": "",
            "home_player_y7": "",
            "home_player_y8": "",
            "home_player_y9": "",
            "home_player_y10": "",
            "home_player_y11": "",
            "away_player_y1": "",
            "away_player_y2": "",
            "away_player_y3": "",
            "away_player_y4": "",
            "away_player_y5": "",
            "away_player_y6": "",
            "away_player_y7": "",
            "away_player_y8": "",
            "away_player_y9": "",
            "away_player_y10": "",
            "away_player_y11": "",
            "home_player_1": "",
            "home_player_2": "",
            "home_player_3": "",
            "home_player_4": "",
            "home_player_5": "",
            "home_player_6": "",
            "home_player_7": "",
            "home_player_8": "",
            "home_player_9": "",
            "home_player_10": "",
            "home_player_11": "",
            "away_player_1": "",
            "away_player_2": "",
            "away_player_3": "",
            "away_player_4": "",
            "away_player_5": "",
            "away_player_6": "",
            "away_player_7": "",
            "away_player_8": "",
            "away_player_9": "",
            "away_player_10": "",
            "away_player_11": "",
            "goal": "the goal of the match",
            "shoton": "the shot on goal of the match (commonsense reasoning: ; A shot on goal is a shot that enters the goal or would have entered the goal if it had not been blocked by the goalkeeper or another defensive player.; )",
            "shotoff": "the shot off goal of the match, which is the opposite of shot on",
            "foulcommit": "the fouls occurred in the match",
            "card": "the cards given in the match",
            "cross": "Balls sent into the opposition team's area from a wide position in the match",
            "corner": "Ball goes out of play for a corner kick in the match",
            "possession": "The duration from a player taking over the ball in the match",
            "b365h": "",
            "b365d": "",
            "b365a": "",
            "bwh": "",
            "bwd": "",
            "bwa": "",
            "iwh": "",
            "iwd": "",
            "iwa": "",
            "lbh": "",
            "lbd": "",
            "lba": "",
            "psh": "",
            "psd": "",
            "psa": "",
            "whh": "",
            "whd": "",
            "wha": "",
            "sjh": "",
            "sjd": "",
            "sja": "",
            "vch": "",
            "vcd": "",
            "vca": "",
            "gbh": "",
            "gbd": "",
            "gba": "",
            "bsh": "",
            "bsd": "",
            "bsa": ""
        }
    }
}