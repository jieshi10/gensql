[
    {
        "name": "toxicology_ext",
        "tables": [
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "student_club_ext",
        "tables": [
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "student_club",
            "toxicology",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "superhero_ext",
        "tables": [
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "superhero",
            "toxicology",
            "student_club",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "debit_card_specializing_ext",
        "tables": [
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "debit_card_specializing",
            "toxicology",
            "student_club",
            "superhero",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "financial_ext",
        "tables": [
            {
                "name": "account",
                "sql": "CREATE TABLE account\n(\n    account_id  INTEGER default 0 not null\n        primary key,\n    district_id INTEGER default 0 not null,\n    frequency   TEXT   not null,\n    date        DATE          not null,\n    foreign key (district_id) references district (district_id)\n)"
            },
            {
                "name": "card",
                "sql": "CREATE TABLE card\n(\n    card_id INTEGER default 0 not null\n        primary key,\n    disp_id INTEGER           not null,\n    type    TEXT    not null,\n    issued  DATE          not null,\n    foreign key (disp_id) references disp (disp_id)\n)"
            },
            {
                "name": "client",
                "sql": "CREATE TABLE client\n(\n    client_id   INTEGER        not null\n        primary key,\n    gender      TEXT not null,\n    birth_date  DATE       not null,\n    district_id INTEGER        not null,\n    foreign key (district_id) references district (district_id)\n)"
            },
            {
                "name": "disp",
                "sql": "CREATE TABLE disp\n(\n    disp_id    INTEGER        not null\n        primary key,\n    client_id  INTEGER        not null,\n    account_id INTEGER        not null,\n    type      TEXT not null,\n    foreign key (account_id) references account (account_id),\n    foreign key (client_id) references client (client_id)\n)"
            },
            {
                "name": "district",
                "sql": "CREATE TABLE district\n(\n    district_id INTEGER default 0 not null\n        primary key,\n    A2          TEXT   not null,\n    A3          TEXT   not null,\n    A4          TEXT       not null,\n    A5          TEXT           not null,\n    A6          TEXT           not null,\n    A7          TEXT           not null,\n    A8          INTEGER        not null,\n    A9          INTEGER           not null,\n    A10         REAL not null,\n    A11         INTEGER           not null,\n    A12         REAL null,\n    A13         REAL not null,\n    A14         INTEGER           not null,\n    A15         INTEGER        null,\n    A16         INTEGER          not null\n)"
            },
            {
                "name": "loan",
                "sql": "CREATE TABLE loan\n(\n    loan_id    INTEGER default 0 not null\n        primary key,\n    account_id INTEGER           not null,\n    date       DATE          not null,\n    amount     INTEGER           not null,\n    duration   INTEGER           not null,\n    payments   REAL not null,\n    status     TEXT    not null,\n    foreign key (account_id) references account (account_id)\n)"
            },
            {
                "name": "order",
                "sql": "CREATE TABLE `order`\n(\n    order_id   INTEGER default 0 not null\n        primary key,\n    account_id INTEGER           not null,\n    bank_to    TEXT    not null,\n    account_to INTEGER           not null,\n    amount     REAL not null,\n    k_symbol   TEXT    not null,\n    foreign key (account_id) references account (account_id)\n)"
            },
            {
                "name": "trans",
                "sql": "CREATE TABLE trans\n(\n    trans_id   INTEGER default 0    not null\n        primary key,\n    account_id INTEGER default 0    not null,\n    date       DATE             not null,\n    type       TEXT       not null,\n    operation  TEXT      null,\n    amount     INTEGER              not null,\n    balance    INTEGER             not null,\n    k_symbol   TEXT      null,\n    bank       TEXT       null,\n    account    INTEGER          null,\n    foreign key (account_id) references account (account_id)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "circuits",
                "sql": "CREATE TABLE circuits\n(\n    circuitId  INTEGER\n        primary key autoincrement,\n    circuitRef TEXT default '' not null,\n    name       TEXT default '' not null,\n    location   TEXT,\n    country    TEXT,\n    lat        REAL,\n    lng        REAL,\n    alt        INTEGER,\n    url        TEXT default '' not null\n        unique\n)"
            },
            {
                "name": "constructors",
                "sql": "CREATE TABLE constructors\n(\n    constructorId  INTEGER\n        primary key autoincrement,\n    constructorRef TEXT default '' not null,\n    name           TEXT default '' not null\n        unique,\n    nationality    TEXT,\n    url            TEXT default '' not null\n)"
            },
            {
                "name": "drivers",
                "sql": "CREATE TABLE drivers\n(\n    driverId    INTEGER\n        primary key autoincrement,\n    driverRef   TEXT default '' not null,\n    number      INTEGER,\n    code        TEXT,\n    forename    TEXT default '' not null,\n    surname     TEXT default '' not null,\n    dob         DATE,\n    nationality TEXT,\n    url         TEXT default '' not null\n        unique\n)"
            },
            {
                "name": "seasons",
                "sql": "CREATE TABLE seasons\n(\n    year INTEGER default 0  not null\n        primary key,\n    url  TEXT    default '' not null\n        unique\n)"
            },
            {
                "name": "races",
                "sql": "CREATE TABLE races\n(\n    raceId    INTEGER\n        primary key autoincrement,\n    year      INTEGER default 0            not null,\n    round     INTEGER default 0            not null,\n    circuitId INTEGER default 0            not null,\n    name      TEXT    default ''           not null,\n    date      DATE    default '0000-00-00' not null,\n    time      TEXT,\n    url       TEXT unique,\n    foreign key (year) references seasons(year),\n    foreign key (circuitId) references circuits(circuitId)\n)"
            },
            {
                "name": "constructorResults",
                "sql": "CREATE TABLE constructorResults\n(\n    constructorResultsId INTEGER\n        primary key autoincrement,\n    raceId               INTEGER default 0 not null,\n    constructorId        INTEGER default 0 not null,\n    points               REAL,\n    status               TEXT,\n    foreign key (raceId) references races(raceId),\n    foreign key (constructorId) references constructors(constructorId)\n\n)"
            },
            {
                "name": "constructorStandings",
                "sql": "CREATE TABLE constructorStandings\n(\n    constructorStandingsId INTEGER\n        primary key autoincrement,\n    raceId                 INTEGER default 0 not null,\n    constructorId          INTEGER default 0 not null,\n    points                 REAL   default 0 not null,\n    position               INTEGER,\n    positionText           TEXT,\n    wins                   INTEGER default 0 not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (constructorId) references constructors(constructorId)\n)"
            },
            {
                "name": "driverStandings",
                "sql": "CREATE TABLE driverStandings\n(\n    driverStandingsId INTEGER\n        primary key autoincrement,\n    raceId            INTEGER default 0 not null,\n    driverId          INTEGER default 0 not null,\n    points            REAL   default 0 not null,\n    position          INTEGER,\n    positionText      TEXT,\n    wins              INTEGER default 0 not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)"
            },
            {
                "name": "lapTimes",
                "sql": "CREATE TABLE lapTimes\n(\n    raceId       INTEGER not null,\n    driverId     INTEGER not null,\n    lap          INTEGER not null,\n    position     INTEGER,\n    time         TEXT,\n    milliseconds INTEGER,\n    primary key (raceId, driverId, lap),\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)"
            },
            {
                "name": "pitStops",
                "sql": "CREATE TABLE pitStops\n(\n    raceId       INTEGER not null,\n    driverId     INTEGER not null,\n    stop         INTEGER not null,\n    lap          INTEGER not null,\n    time         TEXT    not null,\n    duration     TEXT,\n    milliseconds INTEGER,\n    primary key (raceId, driverId, stop),\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)"
            },
            {
                "name": "qualifying",
                "sql": "CREATE TABLE qualifying\n(\n    qualifyId     INTEGER\n        primary key autoincrement,\n    raceId        INTEGER default 0 not null,\n    driverId      INTEGER default 0 not null,\n    constructorId INTEGER default 0 not null,\n    number        INTEGER default 0 not null,\n    position      INTEGER,\n    q1            TEXT,\n    q2            TEXT,\n    q3            TEXT,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId),\n    foreign key (constructorId) references constructors(constructorId)\n)"
            },
            {
                "name": "status",
                "sql": "CREATE TABLE status\n(\n    statusId INTEGER\n        primary key autoincrement,\n    status   TEXT default '' not null\n)"
            },
            {
                "name": "results",
                "sql": "CREATE TABLE results\n(\n    resultId        INTEGER\n        primary key autoincrement,\n    raceId          INTEGER default 0  not null,\n    driverId        INTEGER default 0  not null,\n    constructorId   INTEGER default 0  not null,\n    number          INTEGER,\n    grid            INTEGER default 0  not null,\n    position        INTEGER,\n    positionText    TEXT    default '' not null,\n    positionOrder   INTEGER default 0  not null,\n    points          REAL   default 0  not null,\n    laps            INTEGER default 0  not null,\n    time            TEXT,\n    milliseconds    INTEGER,\n    fastestLap      INTEGER,\n    rank            INTEGER default 0,\n    fastestLapTime  TEXT,\n    fastestLapSpeed TEXT,\n    statusId        INTEGER default 0  not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId),\n    foreign key (constructorId) references constructors(constructorId),\n    foreign key (statusId) references status(statusId)\n)"
            },
            {
                "name": "Player_Attributes",
                "sql": "CREATE TABLE \"Player_Attributes\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_fifa_api_id`\tINTEGER,\n\t`player_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`overall_rating`\tINTEGER,\n\t`potential`\tINTEGER,\n\t`preferred_foot`\tTEXT,\n\t`attacking_work_rate`\tTEXT,\n\t`defensive_work_rate`\tTEXT,\n\t`crossing`\tINTEGER,\n\t`finishing`\tINTEGER,\n\t`heading_accuracy`\tINTEGER,\n\t`short_passing`\tINTEGER,\n\t`volleys`\tINTEGER,\n\t`dribbling`\tINTEGER,\n\t`curve`\tINTEGER,\n\t`free_kick_accuracy`\tINTEGER,\n\t`long_passing`\tINTEGER,\n\t`ball_control`\tINTEGER,\n\t`acceleration`\tINTEGER,\n\t`sprint_speed`\tINTEGER,\n\t`agility`\tINTEGER,\n\t`reactions`\tINTEGER,\n\t`balance`\tINTEGER,\n\t`shot_power`\tINTEGER,\n\t`jumping`\tINTEGER,\n\t`stamina`\tINTEGER,\n\t`strength`\tINTEGER,\n\t`long_shots`\tINTEGER,\n\t`aggression`\tINTEGER,\n\t`interceptions`\tINTEGER,\n\t`positioning`\tINTEGER,\n\t`vision`\tINTEGER,\n\t`penalties`\tINTEGER,\n\t`marking`\tINTEGER,\n\t`standing_tackle`\tINTEGER,\n\t`sliding_tackle`\tINTEGER,\n\t`gk_diving`\tINTEGER,\n\t`gk_handling`\tINTEGER,\n\t`gk_kicking`\tINTEGER,\n\t`gk_positioning`\tINTEGER,\n\t`gk_reflexes`\tINTEGER,\n\tFOREIGN KEY(`player_fifa_api_id`) REFERENCES `Player`(`player_fifa_api_id`),\n\tFOREIGN KEY(`player_api_id`) REFERENCES `Player`(`player_api_id`)\n)"
            },
            {
                "name": "Player",
                "sql": "CREATE TABLE `Player` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_api_id`\tINTEGER UNIQUE,\n\t`player_name`\tTEXT,\n\t`player_fifa_api_id`\tINTEGER UNIQUE,\n\t`birthday`\tTEXT,\n\t`height`\tINTEGER,\n\t`weight`\tINTEGER\n)"
            },
            {
                "name": "League",
                "sql": "CREATE TABLE `League` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`country_id`\tINTEGER,\n\t`name`\tTEXT UNIQUE,\n\tFOREIGN KEY(`country_id`) REFERENCES `country`(`id`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`name`\tTEXT UNIQUE\n)"
            },
            {
                "name": "Team",
                "sql": "CREATE TABLE \"Team\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_api_id`\tINTEGER UNIQUE,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_long_name`\tTEXT,\n\t`team_short_name`\tTEXT\n)"
            },
            {
                "name": "Team_Attributes",
                "sql": "CREATE TABLE `Team_Attributes` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`buildUpPlaySpeed`\tINTEGER,\n\t`buildUpPlaySpeedClass`\tTEXT,\n\t`buildUpPlayDribbling`\tINTEGER,\n\t`buildUpPlayDribblingClass`\tTEXT,\n\t`buildUpPlayPassing`\tINTEGER,\n\t`buildUpPlayPassingClass`\tTEXT,\n\t`buildUpPlayPositioningClass`\tTEXT,\n\t`chanceCreationPassing`\tINTEGER,\n\t`chanceCreationPassingClass`\tTEXT,\n\t`chanceCreationCrossing`\tINTEGER,\n\t`chanceCreationCrossingClass`\tTEXT,\n\t`chanceCreationShooting`\tINTEGER,\n\t`chanceCreationShootingClass`\tTEXT,\n\t`chanceCreationPositioningClass`\tTEXT,\n\t`defencePressure`\tINTEGER,\n\t`defencePressureClass`\tTEXT,\n\t`defenceAggression`\tINTEGER,\n\t`defenceAggressionClass`\tTEXT,\n\t`defenceTeamWidth`\tINTEGER,\n\t`defenceTeamWidthClass`\tTEXT,\n\t`defenceDefenderLineClass`\tTEXT,\n\tFOREIGN KEY(`team_fifa_api_id`) REFERENCES `Team`(`team_fifa_api_id`),\n\tFOREIGN KEY(`team_api_id`) REFERENCES `Team`(`team_api_id`)\n)"
            },
            {
                "name": "Match",
                "sql": "CREATE TABLE \"Match\"\n(\n    id               INTEGER\n        primary key autoincrement,\n    country_id       INTEGER\n        references Country,\n    league_id        INTEGER\n        references League,\n    season           TEXT,\n    stage            INTEGER,\n    date             TEXT,\n    match_api_id     INTEGER\n        unique,\n    home_team_api_id INTEGER\n        references Team (team_api_id),\n    away_team_api_id INTEGER\n        references Team (team_api_id),\n    home_team_goal   INTEGER,\n    away_team_goal   INTEGER,\n    home_player_X1   INTEGER,\n    home_player_X2   INTEGER,\n    home_player_X3   INTEGER,\n    home_player_X4   INTEGER,\n    home_player_X5   INTEGER,\n    home_player_X6   INTEGER,\n    home_player_X7   INTEGER,\n    home_player_X8   INTEGER,\n    home_player_X9   INTEGER,\n    home_player_X10  INTEGER,\n    home_player_X11  INTEGER,\n    away_player_X1   INTEGER,\n    away_player_X2   INTEGER,\n    away_player_X3   INTEGER,\n    away_player_X4   INTEGER,\n    away_player_X5   INTEGER,\n    away_player_X6   INTEGER,\n    away_player_X7   INTEGER,\n    away_player_X8   INTEGER,\n    away_player_X9   INTEGER,\n    away_player_X10  INTEGER,\n    away_player_X11  INTEGER,\n    home_player_Y1   INTEGER,\n    home_player_Y2   INTEGER,\n    home_player_Y3   INTEGER,\n    home_player_Y4   INTEGER,\n    home_player_Y5   INTEGER,\n    home_player_Y6   INTEGER,\n    home_player_Y7   INTEGER,\n    home_player_Y8   INTEGER,\n    home_player_Y9   INTEGER,\n    home_player_Y10  INTEGER,\n    home_player_Y11  INTEGER,\n    away_player_Y1   INTEGER,\n    away_player_Y2   INTEGER,\n    away_player_Y3   INTEGER,\n    away_player_Y4   INTEGER,\n    away_player_Y5   INTEGER,\n    away_player_Y6   INTEGER,\n    away_player_Y7   INTEGER,\n    away_player_Y8   INTEGER,\n    away_player_Y9   INTEGER,\n    away_player_Y10  INTEGER,\n    away_player_Y11  INTEGER,\n    home_player_1    INTEGER\n        references Player (player_api_id),\n    home_player_2    INTEGER\n        references Player (player_api_id),\n    home_player_3    INTEGER\n        references Player (player_api_id),\n    home_player_4    INTEGER\n        references Player (player_api_id),\n    home_player_5    INTEGER\n        references Player (player_api_id),\n    home_player_6    INTEGER\n        references Player (player_api_id),\n    home_player_7    INTEGER\n        references Player (player_api_id),\n    home_player_8    INTEGER\n        references Player (player_api_id),\n    home_player_9    INTEGER\n        references Player (player_api_id),\n    home_player_10   INTEGER\n        references Player (player_api_id),\n    home_player_11   INTEGER\n        references Player (player_api_id),\n    away_player_1    INTEGER\n        references Player (player_api_id),\n    away_player_2    INTEGER\n        references Player (player_api_id),\n    away_player_3    INTEGER\n        references Player (player_api_id),\n    away_player_4    INTEGER\n        references Player (player_api_id),\n    away_player_5    INTEGER\n        references Player (player_api_id),\n    away_player_6    INTEGER\n        references Player (player_api_id),\n    away_player_7    INTEGER\n        references Player (player_api_id),\n    away_player_8    INTEGER\n        references Player (player_api_id),\n    away_player_9    INTEGER\n        references Player (player_api_id),\n    away_player_10   INTEGER\n        references Player (player_api_id),\n    away_player_11   INTEGER\n        references Player (player_api_id),\n    goal             TEXT,\n    shoton           TEXT,\n    shotoff          TEXT,\n    foulcommit       TEXT,\n    card             TEXT,\n    \"cross\"          TEXT,\n    corner           TEXT,\n    possession       TEXT,\n    B365H            REAL,\n    B365D            REAL,\n    B365A            REAL,\n    BWH              REAL,\n    BWD              REAL,\n    BWA              REAL,\n    IWH              REAL,\n    IWD              REAL,\n    IWA              REAL,\n    LBH              REAL,\n    LBD              REAL,\n    LBA              REAL,\n    PSH              REAL,\n    PSD              REAL,\n    PSA              REAL,\n    WHH              REAL,\n    WHD              REAL,\n    WHA              REAL,\n    SJH              REAL,\n    SJD              REAL,\n    SJA              REAL,\n    VCH              REAL,\n    VCD              REAL,\n    VCA              REAL,\n    GBH              REAL,\n    GBD              REAL,\n    GBA              REAL,\n    BSH              REAL,\n    BSD              REAL,\n    BSA              REAL\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "all_prevalences",
                "sql": "CREATE TABLE all_prevalences\n(\n    ITEM                    TEXT\n            primary key,\n    \"POPULATION TYPE\"       TEXT,\n    OCCURRENCES             INTEGER,\n    \"POPULATION COUNT\"      INTEGER,\n    \"PREVALENCE RATE\"       REAL,\n    \"PREVALENCE PERCENTAGE\" REAL\n)"
            },
            {
                "name": "patients",
                "sql": "CREATE TABLE patients\n(\n    patient    TEXT\n            primary key,\n    birthdate  DATE,\n    deathdate  DATE,\n    ssn        TEXT,\n    drivers    TEXT,\n    passport   TEXT,\n    prefix     TEXT,\n    first      TEXT,\n    last       TEXT,\n    suffix     TEXT,\n    maiden     TEXT,\n    marital    TEXT,\n    race       TEXT,\n    ethnicity  TEXT,\n    gender     TEXT,\n    birthplace TEXT,\n    address    TEXT\n)"
            },
            {
                "name": "encounters",
                "sql": "CREATE TABLE encounters\n(\n    ID                TEXT\n            primary key,\n    DATE              DATE,\n    PATIENT           TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "allergies",
                "sql": "CREATE TABLE allergies\n(\n    START       TEXT,\n    STOP        TEXT,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "careplans",
                "sql": "CREATE TABLE careplans\n(\n    ID                TEXT,\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              REAL,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "conditions",
                "sql": "CREATE TABLE conditions\n(\n    START       DATE,\n    STOP        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient),\n    foreign key (DESCRIPTION) references all_prevalences(ITEM)\n)"
            },
            {
                "name": "immunizations",
                "sql": "CREATE TABLE immunizations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (DATE, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "medications",
                "sql": "CREATE TABLE medications\n(\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    primary key (START, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "observations",
                "sql": "CREATE TABLE observations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        TEXT,\n    DESCRIPTION TEXT,\n    VALUE       REAL,\n    UNITS       TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "procedures",
                "sql": "CREATE TABLE procedures\n(\n    DATE              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "claims",
                "sql": "CREATE TABLE \"claims\"\n(\n    ID             TEXT\n        primary key,\n    PATIENT        TEXT\n        references patients,\n    BILLABLEPERIOD DATE,\n    ORGANIZATION   TEXT,\n    ENCOUNTER      TEXT\n        references encounters,\n    DIAGNOSIS      TEXT,\n    TOTAL          INTEGER\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "Ingredient",
                "sql": "CREATE TABLE Ingredient\n(\n    ingredient_id INTEGER\n            primary key,\n    category      TEXT,\n    name          TEXT,\n    plural        TEXT\n)"
            },
            {
                "name": "Recipe",
                "sql": "CREATE TABLE Recipe\n(\n    recipe_id  INTEGER\n            primary key,\n    title      TEXT,\n    subtitle   TEXT,\n    servings   INTEGER,\n    yield_unit TEXT,\n    prep_min   INTEGER,\n    cook_min   INTEGER,\n    stnd_min   INTEGER,\n    source     TEXT,\n    intro      TEXT,\n    directions TEXT\n)"
            },
            {
                "name": "Nutrition",
                "sql": "CREATE TABLE Nutrition\n(\n    recipe_id     INTEGER\n            primary key,\n    protein       REAL,\n    carbo         REAL,\n    alcohol       REAL,\n    total_fat     REAL,\n    sat_fat       REAL,\n    cholestrl     REAL,\n    sodium        REAL,\n    iron          REAL,\n    vitamin_c     REAL,\n    vitamin_a     REAL,\n    fiber         REAL,\n    pcnt_cal_carb REAL,\n    pcnt_cal_fat  REAL,\n    pcnt_cal_prot REAL,\n    calories      REAL,\n    foreign key (recipe_id) references Recipe(recipe_id)\n)"
            },
            {
                "name": "Quantity",
                "sql": "CREATE TABLE Quantity\n(\n    quantity_id   INTEGER\n            primary key,\n    recipe_id     INTEGER,\n    ingredient_id INTEGER,\n    max_qty       REAL,\n    min_qty       REAL,\n    unit          TEXT,\n    preparation   TEXT,\n    optional      TEXT,\n    foreign key (recipe_id) references Recipe(recipe_id),\n    foreign key (ingredient_id) references Ingredient(ingredient_id),\n    foreign key (recipe_id) references Nutrition(recipe_id)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "langs",
                "sql": "CREATE TABLE langs(lid    INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lang   TEXT UNIQUE,\n                            locale TEXT UNIQUE,\n                            pages  INTEGER DEFAULT 0,  -- total pages in this language\n                            words  INTEGER DEFAULT 0)"
            },
            {
                "name": "pages",
                "sql": "CREATE TABLE pages(pid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                            page INTEGER DEFAULT NULL, -- wikipedia page id\n                            revision INTEGER DEFAULT NULL, -- wikipedia revision page id\n                            title TEXT,\n                            words INTEGER DEFAULT 0, -- number of different words in this page\n                            UNIQUE(lid,page,title))"
            },
            {
                "name": "words",
                "sql": "CREATE TABLE words(wid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            word        TEXT UNIQUE,\n                            occurrences INTEGER DEFAULT 0)"
            },
            {
                "name": "langs_words",
                "sql": "CREATE TABLE langs_words(lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER, -- repetitions of this word in this language\n                                        PRIMARY KEY(lid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "pages_words",
                "sql": "CREATE TABLE pages_words(pid INTEGER REFERENCES pages(pid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER DEFAULT 0, -- times this word appears into this page\n                                        PRIMARY KEY(pid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "biwords",
                "sql": "CREATE TABLE biwords(lid    INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w1st   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w2nd   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                occurrences INTEGER DEFAULT 0, -- times this pair appears in this language/page\n                                PRIMARY KEY(lid,w1st,w2nd))\n                                WITHOUT ROWID"
            },
            {
                "name": "Author",
                "sql": "CREATE TABLE \"Author\"\n(\n    Id          INTEGER\n        constraint Author_pk\n            primary key,\n    Name        TEXT,\n    Affiliation TEXT\n)"
            },
            {
                "name": "Conference",
                "sql": "CREATE TABLE \"Conference\"\n(\n    Id        INTEGER\n        constraint Conference_pk\n            primary key,\n    ShortName TEXT,\n    FullName  TEXT,\n    HomePage  TEXT\n)"
            },
            {
                "name": "Journal",
                "sql": "CREATE TABLE \"Journal\"\n(\n    Id        INTEGER\n        constraint Journal_pk\n            primary key,\n    ShortName TEXT,\n    FullName  TEXT,\n    HomePage  TEXT\n)"
            },
            {
                "name": "Paper",
                "sql": "CREATE TABLE Paper\n(\n    Id           INTEGER\n            primary key,\n    Title        TEXT,\n    Year         INTEGER,\n    ConferenceId INTEGER,\n    JournalId    INTEGER,\n    Keyword      TEXT,\n    foreign key (ConferenceId) references Conference(Id),\n    foreign key (JournalId) references Journal(Id)\n)"
            },
            {
                "name": "PaperAuthor",
                "sql": "CREATE TABLE PaperAuthor\n(\n    PaperId     INTEGER,\n    AuthorId    INTEGER,\n    Name        TEXT,\n    Affiliation TEXT,\n    foreign key (PaperId) references Paper(Id),\n    foreign key (AuthorId) references Author(Id)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "breweries",
                "sql": "CREATE TABLE breweries\n(\n    id    INTEGER          not null\n        primary key,\n    name  TEXT null,\n    city  TEXT null,\n    state TEXT null\n)"
            },
            {
                "name": "beers",
                "sql": "CREATE TABLE \"beers\"\n(\n    id         INTEGER not null\n        primary key,\n    brewery_id INTEGER not null\n        constraint beers_ibfk_1\n            references breweries,\n    abv        REAL,\n    ibu        REAL,\n    name       TEXT    not null,\n    style      TEXT,\n    ounces     REAL    not null\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "financial",
            "california_schools",
            "formula_1",
            "european_football_2",
            "mental_health_survey",
            "legislator",
            "synthea",
            "airline",
            "cookbook",
            "image_and_language",
            "college_completion",
            "restaurant",
            "language_corpus",
            "authors",
            "sales_in_weather",
            "craftbeer",
            "disney",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "card_games_ext",
        "tables": [
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "card_games",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "codebase_community_ext",
        "tables": [
            {
                "name": "badges",
                "sql": "CREATE TABLE badges\n(\n    Id     INTEGER          not null\n        primary key,\n    UserId INTEGER          null,\n    Name   TEXT null,\n    Date   DATETIME     null,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "comments",
                "sql": "CREATE TABLE comments\n(\n    Id              INTEGER          not null\n        primary key,\n    PostId          INTEGER          null,\n    Score           INTEGER          null,\n    Text            TEXT     null,\n    CreationDate    DATETIME     null,\n    UserId          INTEGER          null,\n    UserDisplayName TEXT null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "postHistory",
                "sql": "CREATE TABLE postHistory\n(\n    Id                INTEGER          not null UNIQUE\n        primary key,\n    PostHistoryTypeId INTEGER          null,\n    PostId            INTEGER          null,\n    RevisionGUID      TEXT null,\n    CreationDate      DATETIME     null,\n    UserId            INTEGER          null,\n    Text              TEXT     null,\n    Comment           TEXT         null,\n    UserDisplayName   TEXT null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "postLinks",
                "sql": "CREATE TABLE postLinks\n(\n    Id            INTEGER      not null\n        primary key,\n    CreationDate  DATETIME null,\n    PostId        INTEGER      null,\n    RelatedPostId INTEGER      null,\n    LinkTypeId    INTEGER      null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (RelatedPostId) references posts (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "posts",
                "sql": "CREATE TABLE posts\n(\n    Id                    INTEGER          not null UNIQUE\n        primary key,\n    PostTypeId            INTEGER          null,\n    AcceptedAnswerId      INTEGER          null,\n    CreaionDate           DATETIME     null,\n    Score                 INTEGER          null,\n    ViewCount             INTEGER          null,\n    Body                  TEXT     null,\n    OwnerUserId           INTEGER          null,\n    LasActivityDate       DATETIME     null,\n    Title                 TEXT null,\n    Tags                  TEXT null,\n    AnswerCount           INTEGER          null,\n    CommentCount          INTEGER          null,\n    FavoriteCount         INTEGER          null,\n    LastEditorUserId      INTEGER          null,\n    LastEditDate          DATETIME     null,\n    CommunityOwnedDate    DATETIME    null,\n    ParentId              INTEGER          null,\n    ClosedDate            DATETIME     null,\n    OwnerDisplayName      TEXT null,\n    LastEditorDisplayName TEXT null,\n        foreign key (LastEditorUserId) references users (Id)\n            on update cascade on delete cascade,\n        foreign key (OwnerUserId) references users (Id)\n            on update cascade on delete cascade,\n        foreign key (ParentId) references posts (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE tags\n(\n    Id            INTEGER          not null\n        primary key,\n    TagName       TEXT null,\n    Count         INTEGER          null,\n    ExcerptPostId INTEGER          null,\n    WikiPostId    INTEGER          null,\n    foreign key (ExcerptPostId) references posts (Id)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "users",
                "sql": "CREATE TABLE users\n(\n    Id              INTEGER          not null UNIQUE\n        primary key,\n    Reputation      INTEGER          null,\n    CreationDate    DATETIME     null,\n    DisplayName     TEXT null,\n    LastAccessDate  DATETIME     null,\n    WebsiteUrl      TEXT null,\n    Location        TEXT null,\n    AboutMe         TEXT     null,\n    Views           INTEGER          null,\n    UpVotes         INTEGER          null,\n    DownVotes       INTEGER          null,\n    AccountId       INTEGER          null,\n    Age             INTEGER          null,\n    ProfileImageUrl TEXT null\n)"
            },
            {
                "name": "votes",
                "sql": "CREATE TABLE votes\n(\n    Id           INTEGER  not null\n        primary key,\n    PostId       INTEGER  null,\n    VoteTypeId   INTEGER  null,\n    CreationDate DATE null,\n    UserId       INTEGER  null,\n    BountyAmount INTEGER  null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "codebase_community",
            "toxicology",
            "student_club",
            "superhero",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "app_store"
        ]
    },
    {
        "name": "california_schools_ext",
        "tables": [
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "california_schools",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "thrombosis_prediction_ext",
        "tables": [
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "thrombosis_prediction",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "formula_1_ext",
        "tables": [
            {
                "name": "circuits",
                "sql": "CREATE TABLE circuits\n(\n    circuitId  INTEGER\n        primary key autoincrement,\n    circuitRef TEXT default '' not null,\n    name       TEXT default '' not null,\n    location   TEXT,\n    country    TEXT,\n    lat        REAL,\n    lng        REAL,\n    alt        INTEGER,\n    url        TEXT default '' not null\n        unique\n)"
            },
            {
                "name": "constructors",
                "sql": "CREATE TABLE constructors\n(\n    constructorId  INTEGER\n        primary key autoincrement,\n    constructorRef TEXT default '' not null,\n    name           TEXT default '' not null\n        unique,\n    nationality    TEXT,\n    url            TEXT default '' not null\n)"
            },
            {
                "name": "drivers",
                "sql": "CREATE TABLE drivers\n(\n    driverId    INTEGER\n        primary key autoincrement,\n    driverRef   TEXT default '' not null,\n    number      INTEGER,\n    code        TEXT,\n    forename    TEXT default '' not null,\n    surname     TEXT default '' not null,\n    dob         DATE,\n    nationality TEXT,\n    url         TEXT default '' not null\n        unique\n)"
            },
            {
                "name": "seasons",
                "sql": "CREATE TABLE seasons\n(\n    year INTEGER default 0  not null\n        primary key,\n    url  TEXT    default '' not null\n        unique\n)"
            },
            {
                "name": "races",
                "sql": "CREATE TABLE races\n(\n    raceId    INTEGER\n        primary key autoincrement,\n    year      INTEGER default 0            not null,\n    round     INTEGER default 0            not null,\n    circuitId INTEGER default 0            not null,\n    name      TEXT    default ''           not null,\n    date      DATE    default '0000-00-00' not null,\n    time      TEXT,\n    url       TEXT unique,\n    foreign key (year) references seasons(year),\n    foreign key (circuitId) references circuits(circuitId)\n)"
            },
            {
                "name": "constructorResults",
                "sql": "CREATE TABLE constructorResults\n(\n    constructorResultsId INTEGER\n        primary key autoincrement,\n    raceId               INTEGER default 0 not null,\n    constructorId        INTEGER default 0 not null,\n    points               REAL,\n    status               TEXT,\n    foreign key (raceId) references races(raceId),\n    foreign key (constructorId) references constructors(constructorId)\n\n)"
            },
            {
                "name": "constructorStandings",
                "sql": "CREATE TABLE constructorStandings\n(\n    constructorStandingsId INTEGER\n        primary key autoincrement,\n    raceId                 INTEGER default 0 not null,\n    constructorId          INTEGER default 0 not null,\n    points                 REAL   default 0 not null,\n    position               INTEGER,\n    positionText           TEXT,\n    wins                   INTEGER default 0 not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (constructorId) references constructors(constructorId)\n)"
            },
            {
                "name": "driverStandings",
                "sql": "CREATE TABLE driverStandings\n(\n    driverStandingsId INTEGER\n        primary key autoincrement,\n    raceId            INTEGER default 0 not null,\n    driverId          INTEGER default 0 not null,\n    points            REAL   default 0 not null,\n    position          INTEGER,\n    positionText      TEXT,\n    wins              INTEGER default 0 not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)"
            },
            {
                "name": "lapTimes",
                "sql": "CREATE TABLE lapTimes\n(\n    raceId       INTEGER not null,\n    driverId     INTEGER not null,\n    lap          INTEGER not null,\n    position     INTEGER,\n    time         TEXT,\n    milliseconds INTEGER,\n    primary key (raceId, driverId, lap),\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)"
            },
            {
                "name": "pitStops",
                "sql": "CREATE TABLE pitStops\n(\n    raceId       INTEGER not null,\n    driverId     INTEGER not null,\n    stop         INTEGER not null,\n    lap          INTEGER not null,\n    time         TEXT    not null,\n    duration     TEXT,\n    milliseconds INTEGER,\n    primary key (raceId, driverId, stop),\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)"
            },
            {
                "name": "qualifying",
                "sql": "CREATE TABLE qualifying\n(\n    qualifyId     INTEGER\n        primary key autoincrement,\n    raceId        INTEGER default 0 not null,\n    driverId      INTEGER default 0 not null,\n    constructorId INTEGER default 0 not null,\n    number        INTEGER default 0 not null,\n    position      INTEGER,\n    q1            TEXT,\n    q2            TEXT,\n    q3            TEXT,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId),\n    foreign key (constructorId) references constructors(constructorId)\n)"
            },
            {
                "name": "status",
                "sql": "CREATE TABLE status\n(\n    statusId INTEGER\n        primary key autoincrement,\n    status   TEXT default '' not null\n)"
            },
            {
                "name": "results",
                "sql": "CREATE TABLE results\n(\n    resultId        INTEGER\n        primary key autoincrement,\n    raceId          INTEGER default 0  not null,\n    driverId        INTEGER default 0  not null,\n    constructorId   INTEGER default 0  not null,\n    number          INTEGER,\n    grid            INTEGER default 0  not null,\n    position        INTEGER,\n    positionText    TEXT    default '' not null,\n    positionOrder   INTEGER default 0  not null,\n    points          REAL   default 0  not null,\n    laps            INTEGER default 0  not null,\n    time            TEXT,\n    milliseconds    INTEGER,\n    fastestLap      INTEGER,\n    rank            INTEGER default 0,\n    fastestLapTime  TEXT,\n    fastestLapSpeed TEXT,\n    statusId        INTEGER default 0  not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId),\n    foreign key (constructorId) references constructors(constructorId),\n    foreign key (statusId) references status(statusId)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "langs",
                "sql": "CREATE TABLE langs(lid    INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lang   TEXT UNIQUE,\n                            locale TEXT UNIQUE,\n                            pages  INTEGER DEFAULT 0,  -- total pages in this language\n                            words  INTEGER DEFAULT 0)"
            },
            {
                "name": "pages",
                "sql": "CREATE TABLE pages(pid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                            page INTEGER DEFAULT NULL, -- wikipedia page id\n                            revision INTEGER DEFAULT NULL, -- wikipedia revision page id\n                            title TEXT,\n                            words INTEGER DEFAULT 0, -- number of different words in this page\n                            UNIQUE(lid,page,title))"
            },
            {
                "name": "words",
                "sql": "CREATE TABLE words(wid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            word        TEXT UNIQUE,\n                            occurrences INTEGER DEFAULT 0)"
            },
            {
                "name": "langs_words",
                "sql": "CREATE TABLE langs_words(lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER, -- repetitions of this word in this language\n                                        PRIMARY KEY(lid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "pages_words",
                "sql": "CREATE TABLE pages_words(pid INTEGER REFERENCES pages(pid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER DEFAULT 0, -- times this word appears into this page\n                                        PRIMARY KEY(pid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "biwords",
                "sql": "CREATE TABLE biwords(lid    INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w1st   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w2nd   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                occurrences INTEGER DEFAULT 0, -- times this pair appears in this language/page\n                                PRIMARY KEY(lid,w1st,w2nd))\n                                WITHOUT ROWID"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "breweries",
                "sql": "CREATE TABLE breweries\n(\n    id    INTEGER          not null\n        primary key,\n    name  TEXT null,\n    city  TEXT null,\n    state TEXT null\n)"
            },
            {
                "name": "beers",
                "sql": "CREATE TABLE \"beers\"\n(\n    id         INTEGER not null\n        primary key,\n    brewery_id INTEGER not null\n        constraint beers_ibfk_1\n            references breweries,\n    abv        REAL,\n    ibu        REAL,\n    name       TEXT    not null,\n    style      TEXT,\n    ounces     REAL    not null\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            },
            {
                "name": "people",
                "sql": "CREATE TABLE people\n(\n    \"Customer ID\"   TEXT,\n    \"Customer Name\" TEXT,\n    Segment         TEXT,\n    Country         TEXT,\n    City            TEXT,\n    State           TEXT,\n    \"Postal Code\"   INTEGER,\n    Region          TEXT,\n    primary key (\"Customer ID\", Region)\n)"
            },
            {
                "name": "product",
                "sql": "CREATE TABLE product\n(\n    \"Product ID\"   TEXT,\n    \"Product Name\" TEXT,\n    Category       TEXT,\n    \"Sub-Category\" TEXT,\n    Region         TEXT,\n    primary key (\"Product ID\", Region)\n)"
            },
            {
                "name": "central_superstore",
                "sql": "CREATE TABLE central_superstore\n(\n    \"Row ID\"      INTEGER\n            primary key,\n    \"Order ID\"    TEXT,\n    \"Order Date\"  DATE,\n    \"Ship Date\"   DATE,\n    \"Ship Mode\"   TEXT,\n    \"Customer ID\" TEXT,\n    Region        TEXT,\n    \"Product ID\"  TEXT,\n    Sales         REAL,\n    Quantity      INTEGER,\n    Discount      REAL,\n    Profit        REAL,\n    foreign key (\"Customer ID\", Region) references people(\"Customer ID\",Region),\n    foreign key (\"Product ID\", Region) references product(\"Product ID\",Region)\n)"
            },
            {
                "name": "east_superstore",
                "sql": "CREATE TABLE east_superstore\n(\n    \"Row ID\"      INTEGER\n            primary key,\n    \"Order ID\"    TEXT,\n    \"Order Date\"  DATE,\n    \"Ship Date\"   DATE,\n    \"Ship Mode\"   TEXT,\n    \"Customer ID\" TEXT,\n    Region        TEXT,\n    \"Product ID\"  TEXT,\n    Sales         REAL,\n    Quantity      INTEGER,\n    Discount      REAL,\n    Profit        REAL,\n    foreign key (\"Customer ID\", Region) references people(\"Customer ID\",Region),\n    foreign key (\"Product ID\", Region) references product(\"Product ID\",Region)\n)"
            },
            {
                "name": "south_superstore",
                "sql": "CREATE TABLE south_superstore\n(\n    \"Row ID\"      INTEGER\n            primary key,\n    \"Order ID\"    TEXT,\n    \"Order Date\"  DATE,\n    \"Ship Date\"   DATE,\n    \"Ship Mode\"   TEXT,\n    \"Customer ID\" TEXT,\n    Region        TEXT,\n    \"Product ID\"  TEXT,\n    Sales         REAL,\n    Quantity      INTEGER,\n    Discount      REAL,\n    Profit        REAL,\n    foreign key (\"Customer ID\", Region) references people(\"Customer ID\",Region),\n    foreign key (\"Product ID\", Region) references product(\"Product ID\",Region)\n)"
            },
            {
                "name": "west_superstore",
                "sql": "CREATE TABLE west_superstore\n(\n    \"Row ID\"      INTEGER\n            primary key,\n    \"Order ID\"    TEXT,\n    \"Order Date\"  DATE,\n    \"Ship Date\"   DATE,\n    \"Ship Mode\"   TEXT,\n    \"Customer ID\" TEXT,\n    Region        TEXT,\n    \"Product ID\"  TEXT,\n    Sales         REAL,\n    Quantity      INTEGER,\n    Discount      REAL,\n    Profit        REAL,\n    foreign key (\"Customer ID\", Region) references people(\"Customer ID\",Region),\n    foreign key (\"Product ID\", Region) references product(\"Product ID\",Region)\n)"
            }
        ],
        "original": [
            "formula_1",
            "toxicology",
            "student_club",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "language_corpus",
            "sales_in_weather",
            "craftbeer",
            "menu",
            "movie_platform",
            "superstore"
        ]
    },
    {
        "name": "european_football_2_ext",
        "tables": [
            {
                "name": "Player_Attributes",
                "sql": "CREATE TABLE \"Player_Attributes\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_fifa_api_id`\tINTEGER,\n\t`player_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`overall_rating`\tINTEGER,\n\t`potential`\tINTEGER,\n\t`preferred_foot`\tTEXT,\n\t`attacking_work_rate`\tTEXT,\n\t`defensive_work_rate`\tTEXT,\n\t`crossing`\tINTEGER,\n\t`finishing`\tINTEGER,\n\t`heading_accuracy`\tINTEGER,\n\t`short_passing`\tINTEGER,\n\t`volleys`\tINTEGER,\n\t`dribbling`\tINTEGER,\n\t`curve`\tINTEGER,\n\t`free_kick_accuracy`\tINTEGER,\n\t`long_passing`\tINTEGER,\n\t`ball_control`\tINTEGER,\n\t`acceleration`\tINTEGER,\n\t`sprint_speed`\tINTEGER,\n\t`agility`\tINTEGER,\n\t`reactions`\tINTEGER,\n\t`balance`\tINTEGER,\n\t`shot_power`\tINTEGER,\n\t`jumping`\tINTEGER,\n\t`stamina`\tINTEGER,\n\t`strength`\tINTEGER,\n\t`long_shots`\tINTEGER,\n\t`aggression`\tINTEGER,\n\t`interceptions`\tINTEGER,\n\t`positioning`\tINTEGER,\n\t`vision`\tINTEGER,\n\t`penalties`\tINTEGER,\n\t`marking`\tINTEGER,\n\t`standing_tackle`\tINTEGER,\n\t`sliding_tackle`\tINTEGER,\n\t`gk_diving`\tINTEGER,\n\t`gk_handling`\tINTEGER,\n\t`gk_kicking`\tINTEGER,\n\t`gk_positioning`\tINTEGER,\n\t`gk_reflexes`\tINTEGER,\n\tFOREIGN KEY(`player_fifa_api_id`) REFERENCES `Player`(`player_fifa_api_id`),\n\tFOREIGN KEY(`player_api_id`) REFERENCES `Player`(`player_api_id`)\n)"
            },
            {
                "name": "Player",
                "sql": "CREATE TABLE `Player` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_api_id`\tINTEGER UNIQUE,\n\t`player_name`\tTEXT,\n\t`player_fifa_api_id`\tINTEGER UNIQUE,\n\t`birthday`\tTEXT,\n\t`height`\tINTEGER,\n\t`weight`\tINTEGER\n)"
            },
            {
                "name": "League",
                "sql": "CREATE TABLE `League` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`country_id`\tINTEGER,\n\t`name`\tTEXT UNIQUE,\n\tFOREIGN KEY(`country_id`) REFERENCES `country`(`id`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`name`\tTEXT UNIQUE\n)"
            },
            {
                "name": "Team",
                "sql": "CREATE TABLE \"Team\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_api_id`\tINTEGER UNIQUE,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_long_name`\tTEXT,\n\t`team_short_name`\tTEXT\n)"
            },
            {
                "name": "Team_Attributes",
                "sql": "CREATE TABLE `Team_Attributes` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`buildUpPlaySpeed`\tINTEGER,\n\t`buildUpPlaySpeedClass`\tTEXT,\n\t`buildUpPlayDribbling`\tINTEGER,\n\t`buildUpPlayDribblingClass`\tTEXT,\n\t`buildUpPlayPassing`\tINTEGER,\n\t`buildUpPlayPassingClass`\tTEXT,\n\t`buildUpPlayPositioningClass`\tTEXT,\n\t`chanceCreationPassing`\tINTEGER,\n\t`chanceCreationPassingClass`\tTEXT,\n\t`chanceCreationCrossing`\tINTEGER,\n\t`chanceCreationCrossingClass`\tTEXT,\n\t`chanceCreationShooting`\tINTEGER,\n\t`chanceCreationShootingClass`\tTEXT,\n\t`chanceCreationPositioningClass`\tTEXT,\n\t`defencePressure`\tINTEGER,\n\t`defencePressureClass`\tTEXT,\n\t`defenceAggression`\tINTEGER,\n\t`defenceAggressionClass`\tTEXT,\n\t`defenceTeamWidth`\tINTEGER,\n\t`defenceTeamWidthClass`\tTEXT,\n\t`defenceDefenderLineClass`\tTEXT,\n\tFOREIGN KEY(`team_fifa_api_id`) REFERENCES `Team`(`team_fifa_api_id`),\n\tFOREIGN KEY(`team_api_id`) REFERENCES `Team`(`team_api_id`)\n)"
            },
            {
                "name": "Match",
                "sql": "CREATE TABLE \"Match\"\n(\n    id               INTEGER\n        primary key autoincrement,\n    country_id       INTEGER\n        references Country,\n    league_id        INTEGER\n        references League,\n    season           TEXT,\n    stage            INTEGER,\n    date             TEXT,\n    match_api_id     INTEGER\n        unique,\n    home_team_api_id INTEGER\n        references Team (team_api_id),\n    away_team_api_id INTEGER\n        references Team (team_api_id),\n    home_team_goal   INTEGER,\n    away_team_goal   INTEGER,\n    home_player_X1   INTEGER,\n    home_player_X2   INTEGER,\n    home_player_X3   INTEGER,\n    home_player_X4   INTEGER,\n    home_player_X5   INTEGER,\n    home_player_X6   INTEGER,\n    home_player_X7   INTEGER,\n    home_player_X8   INTEGER,\n    home_player_X9   INTEGER,\n    home_player_X10  INTEGER,\n    home_player_X11  INTEGER,\n    away_player_X1   INTEGER,\n    away_player_X2   INTEGER,\n    away_player_X3   INTEGER,\n    away_player_X4   INTEGER,\n    away_player_X5   INTEGER,\n    away_player_X6   INTEGER,\n    away_player_X7   INTEGER,\n    away_player_X8   INTEGER,\n    away_player_X9   INTEGER,\n    away_player_X10  INTEGER,\n    away_player_X11  INTEGER,\n    home_player_Y1   INTEGER,\n    home_player_Y2   INTEGER,\n    home_player_Y3   INTEGER,\n    home_player_Y4   INTEGER,\n    home_player_Y5   INTEGER,\n    home_player_Y6   INTEGER,\n    home_player_Y7   INTEGER,\n    home_player_Y8   INTEGER,\n    home_player_Y9   INTEGER,\n    home_player_Y10  INTEGER,\n    home_player_Y11  INTEGER,\n    away_player_Y1   INTEGER,\n    away_player_Y2   INTEGER,\n    away_player_Y3   INTEGER,\n    away_player_Y4   INTEGER,\n    away_player_Y5   INTEGER,\n    away_player_Y6   INTEGER,\n    away_player_Y7   INTEGER,\n    away_player_Y8   INTEGER,\n    away_player_Y9   INTEGER,\n    away_player_Y10  INTEGER,\n    away_player_Y11  INTEGER,\n    home_player_1    INTEGER\n        references Player (player_api_id),\n    home_player_2    INTEGER\n        references Player (player_api_id),\n    home_player_3    INTEGER\n        references Player (player_api_id),\n    home_player_4    INTEGER\n        references Player (player_api_id),\n    home_player_5    INTEGER\n        references Player (player_api_id),\n    home_player_6    INTEGER\n        references Player (player_api_id),\n    home_player_7    INTEGER\n        references Player (player_api_id),\n    home_player_8    INTEGER\n        references Player (player_api_id),\n    home_player_9    INTEGER\n        references Player (player_api_id),\n    home_player_10   INTEGER\n        references Player (player_api_id),\n    home_player_11   INTEGER\n        references Player (player_api_id),\n    away_player_1    INTEGER\n        references Player (player_api_id),\n    away_player_2    INTEGER\n        references Player (player_api_id),\n    away_player_3    INTEGER\n        references Player (player_api_id),\n    away_player_4    INTEGER\n        references Player (player_api_id),\n    away_player_5    INTEGER\n        references Player (player_api_id),\n    away_player_6    INTEGER\n        references Player (player_api_id),\n    away_player_7    INTEGER\n        references Player (player_api_id),\n    away_player_8    INTEGER\n        references Player (player_api_id),\n    away_player_9    INTEGER\n        references Player (player_api_id),\n    away_player_10   INTEGER\n        references Player (player_api_id),\n    away_player_11   INTEGER\n        references Player (player_api_id),\n    goal             TEXT,\n    shoton           TEXT,\n    shotoff          TEXT,\n    foulcommit       TEXT,\n    card             TEXT,\n    \"cross\"          TEXT,\n    corner           TEXT,\n    possession       TEXT,\n    B365H            REAL,\n    B365D            REAL,\n    B365A            REAL,\n    BWH              REAL,\n    BWD              REAL,\n    BWA              REAL,\n    IWH              REAL,\n    IWD              REAL,\n    IWA              REAL,\n    LBH              REAL,\n    LBD              REAL,\n    LBA              REAL,\n    PSH              REAL,\n    PSD              REAL,\n    PSA              REAL,\n    WHH              REAL,\n    WHD              REAL,\n    WHA              REAL,\n    SJH              REAL,\n    SJD              REAL,\n    SJA              REAL,\n    VCH              REAL,\n    VCD              REAL,\n    VCA              REAL,\n    GBH              REAL,\n    GBD              REAL,\n    GBA              REAL,\n    BSH              REAL,\n    BSD              REAL,\n    BSA              REAL\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "Author",
                "sql": "CREATE TABLE \"Author\"\n(\n    Id          INTEGER\n        constraint Author_pk\n            primary key,\n    Name        TEXT,\n    Affiliation TEXT\n)"
            },
            {
                "name": "Conference",
                "sql": "CREATE TABLE \"Conference\"\n(\n    Id        INTEGER\n        constraint Conference_pk\n            primary key,\n    ShortName TEXT,\n    FullName  TEXT,\n    HomePage  TEXT\n)"
            },
            {
                "name": "Journal",
                "sql": "CREATE TABLE \"Journal\"\n(\n    Id        INTEGER\n        constraint Journal_pk\n            primary key,\n    ShortName TEXT,\n    FullName  TEXT,\n    HomePage  TEXT\n)"
            },
            {
                "name": "Paper",
                "sql": "CREATE TABLE Paper\n(\n    Id           INTEGER\n            primary key,\n    Title        TEXT,\n    Year         INTEGER,\n    ConferenceId INTEGER,\n    JournalId    INTEGER,\n    Keyword      TEXT,\n    foreign key (ConferenceId) references Conference(Id),\n    foreign key (JournalId) references Journal(Id)\n)"
            },
            {
                "name": "PaperAuthor",
                "sql": "CREATE TABLE PaperAuthor\n(\n    PaperId     INTEGER,\n    AuthorId    INTEGER,\n    Name        TEXT,\n    Affiliation TEXT,\n    foreign key (PaperId) references Paper(Id),\n    foreign key (AuthorId) references Author(Id)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "european_football_2",
            "toxicology",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "restaurant",
            "trains",
            "authors",
            "sales_in_weather",
            "menu",
            "disney",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "works_cycles_ext",
        "tables": [
            {
                "name": "CountryRegion",
                "sql": "CREATE TABLE CountryRegion\n(\n    CountryRegionCode TEXT                          not null\n        primary key,\n    Name              TEXT                        not null\n            unique,\n    ModifiedDate      DATETIME default current_timestamp not null\n)"
            },
            {
                "name": "Culture",
                "sql": "CREATE TABLE Culture\n(\n    CultureID    TEXT                             not null\n        primary key,\n    Name         TEXT                        not null\n            unique,\n    ModifiedDate DATETIME default current_timestamp not null\n)"
            },
            {
                "name": "Currency",
                "sql": "CREATE TABLE Currency\n(\n    CurrencyCode TEXT                             not null\n        primary key,\n    Name         TEXT                        not null\n            unique,\n    ModifiedDate DATETIME default current_timestamp not null\n)"
            },
            {
                "name": "CountryRegionCurrency",
                "sql": "CREATE TABLE CountryRegionCurrency\n(\n    CountryRegionCode TEXT                          not null,\n    CurrencyCode      TEXT                             not null,\n    ModifiedDate      DATETIME default current_timestamp not null,\n    primary key (CountryRegionCode, CurrencyCode),\n    foreign key (CountryRegionCode) references CountryRegion(CountryRegionCode),\n    foreign key (CurrencyCode) references Currency(CurrencyCode)\n)"
            },
            {
                "name": "Person",
                "sql": "CREATE TABLE Person\n(\n    BusinessEntityID      INTEGER                                  not null\n        primary key,\n    PersonType            TEXT                              not null,\n    NameStyle             INTEGER default 0                 not null,\n    Title                 TEXT,\n    FirstName             TEXT                         not null,\n    MiddleName            TEXT,\n    LastName              TEXT                         not null,\n    Suffix                TEXT,\n    EmailPromotion        INTEGER        default 0                 not null,\n    AdditionalContactInfo TEXT,\n    Demographics          TEXT,\n    rowguid               TEXT                          not null\n            unique,\n    ModifiedDate          DATETIME  default current_timestamp not null,\n    foreign key (BusinessEntityID) references BusinessEntity(BusinessEntityID)\n)"
            },
            {
                "name": "BusinessEntityContact",
                "sql": "CREATE TABLE BusinessEntityContact\n(\n    BusinessEntityID INTEGER                                 not null,\n    PersonID         INTEGER                                 not null,\n    ContactTypeID    INTEGER                                 not null,\n    rowguid         TEXT                         not null\n            unique,\n    ModifiedDate     DATETIME default current_timestamp not null,\n    primary key (BusinessEntityID, PersonID, ContactTypeID),\n    foreign key (BusinessEntityID) references BusinessEntity(BusinessEntityID),\n    foreign key (ContactTypeID) references ContactType(ContactTypeID),\n    foreign key (PersonID) references Person(BusinessEntityID)\n)"
            },
            {
                "name": "EmailAddress",
                "sql": "CREATE TABLE EmailAddress\n(\n    BusinessEntityID INTEGER                                 not null,\n    EmailAddressID   INTEGER,\n    EmailAddress     TEXT,\n    rowguid          TEXT                         not null,\n    ModifiedDate     DATETIME default current_timestamp not null,\n    primary key (EmailAddressID, BusinessEntityID),\n    foreign key (BusinessEntityID) references Person(BusinessEntityID)\n)"
            },
            {
                "name": "Employee",
                "sql": "CREATE TABLE Employee\n(\n    BusinessEntityID  INTEGER                                 not null\n        primary key,\n    NationalIDNumber  TEXT                          not null\n            unique,\n    LoginID           TEXT                         not null\n            unique,\n    OrganizationNode  TEXT,\n    OrganizationLevel INTEGER,\n    JobTitle          TEXT                          not null,\n    BirthDate         DATE                                 not null,\n    MaritalStatus     TEXT                                 not null,\n    Gender            TEXT                                 not null,\n    HireDate          DATE                                 not null,\n    SalariedFlag      INTEGER default 1                 not null,\n    VacationHours     INTEGER   default 0                 not null,\n    SickLeaveHours    INTEGER   default 0                 not null,\n    CurrentFlag       INTEGER default 1                 not null,\n    rowguid           TEXT                          not null\n            unique,\n    ModifiedDate      DATETIME  default current_timestamp not null,\n    foreign key (BusinessEntityID) references Person(BusinessEntityID)\n)"
            },
            {
                "name": "Password",
                "sql": "CREATE TABLE Password\n(\n    BusinessEntityID INTEGER                                 not null\n        primary key,\n    PasswordHash     TEXT                        not null,\n    PasswordSalt     TEXT                         not null,\n    rowguid          TEXT                         not null,\n    ModifiedDate     DATETIME default current_timestamp not null,\n    foreign key (BusinessEntityID) references Person(BusinessEntityID)\n)"
            },
            {
                "name": "PersonCreditCard",
                "sql": "CREATE TABLE PersonCreditCard\n(\n    BusinessEntityID INTEGER                                 not null,\n    CreditCardID     INTEGER                                 not null,\n    ModifiedDate     DATETIME default current_timestamp not null,\n    primary key (BusinessEntityID, CreditCardID),\n    foreign key (CreditCardID) references CreditCard(CreditCardID),\n    foreign key (BusinessEntityID) references Person(BusinessEntityID)\n)"
            },
            {
                "name": "ProductCategory",
                "sql": "CREATE TABLE ProductCategory\n(\n    ProductCategoryID INTEGER\n        primary key autoincrement,\n    Name              TEXT                        not null\n        unique,\n    rowguid           TEXT                         not null\n        unique,\n    ModifiedDate      DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "ProductDescription",
                "sql": "CREATE TABLE ProductDescription\n(\n    ProductDescriptionID INTEGER\n        primary key autoincrement,\n    Description          TEXT                        not null,\n    rowguid              TEXT                         not null\n        unique,\n    ModifiedDate         DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "ProductModel",
                "sql": "CREATE TABLE ProductModel\n(\n    ProductModelID     INTEGER\n        primary key autoincrement,\n    Name               TEXT                        not null\n        unique,\n    CatalogDescription TEXT,\n    Instructions       TEXT,\n    rowguid            TEXT                         not null\n        unique,\n    ModifiedDate       DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "ProductModelProductDescriptionCulture",
                "sql": "CREATE TABLE ProductModelProductDescriptionCulture\n(\n    ProductModelID       INTEGER                             not null,\n    ProductDescriptionID INTEGER                             not null,\n    CultureID            TEXT                             not null,\n    ModifiedDate         DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (ProductModelID, ProductDescriptionID, CultureID),\n    foreign key (ProductModelID) references ProductModel(ProductModelID),\n    foreign key (ProductDescriptionID) references ProductDescription(ProductDescriptionID),\n    foreign key (CultureID) references Culture(CultureID)\n)"
            },
            {
                "name": "ProductPhoto",
                "sql": "CREATE TABLE ProductPhoto\n(\n    ProductPhotoID         INTEGER\n        primary key autoincrement,\n    ThumbNailPhoto         BLOB,\n    ThumbnailPhotoFileName TEXT,\n    LargePhoto             BLOB,\n    LargePhotoFileName     TEXT,\n    ModifiedDate           DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "ProductSubcategory",
                "sql": "CREATE TABLE ProductSubcategory\n(\n    ProductSubcategoryID INTEGER\n        primary key autoincrement,\n    ProductCategoryID    INTEGER                             not null,\n    Name                 TEXT                        not null\n        unique,\n    rowguid              TEXT                         not null\n        unique,\n    ModifiedDate        DATETIME default CURRENT_TIMESTAMP not null,\n    foreign key (ProductCategoryID) references ProductCategory(ProductCategoryID)\n)"
            },
            {
                "name": "SalesReason",
                "sql": "CREATE TABLE SalesReason\n(\n    SalesReasonID INTEGER\n        primary key autoincrement,\n    Name          TEXT                        not null,\n    ReasonType    TEXT                        not null,\n    ModifiedDate  DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "SalesTerritory",
                "sql": "CREATE TABLE SalesTerritory\n(\n    TerritoryID       INTEGER\n        primary key autoincrement,\n    Name              TEXT                             not null\n        unique,\n    CountryRegionCode TEXT                               not null,\n    \"Group\"           TEXT                              not null,\n    SalesYTD          REAL default 0.0000            not null,\n    SalesLastYear     REAL default 0.0000            not null,\n    CostYTD           REAL default 0.0000            not null,\n    CostLastYear      REAL default 0.0000            not null,\n    rowguid           TEXT                              not null\n        unique,\n    ModifiedDate      DATETIME      default CURRENT_TIMESTAMP not null,\n    foreign key (CountryRegionCode) references CountryRegion(CountryRegionCode)\n)"
            },
            {
                "name": "SalesPerson",
                "sql": "CREATE TABLE SalesPerson\n(\n    BusinessEntityID INTEGER                                  not null\n        primary key,\n    TerritoryID      INTEGER,\n    SalesQuota       REAL,\n    Bonus            REAL default 0.0000            not null,\n    CommissionPct    REAL default 0.0000            not null,\n    SalesYTD         REAL default 0.0000            not null,\n    SalesLastYear    REAL default 0.0000            not null,\n    rowguid          TEXT                              not null\n        unique,\n    ModifiedDate     DATETIME      default CURRENT_TIMESTAMP not null,\n    foreign key (BusinessEntityID) references Employee(BusinessEntityID),\n    foreign key (TerritoryID) references SalesTerritory(TerritoryID)\n)"
            },
            {
                "name": "SalesPersonQuotaHistory",
                "sql": "CREATE TABLE SalesPersonQuotaHistory\n(\n    BusinessEntityID INTEGER                             not null,\n    QuotaDate        DATETIME                            not null,\n    SalesQuota       REAL                      not null,\n    rowguid          TEXT                         not null\n        unique,\n    ModifiedDate     DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (BusinessEntityID, QuotaDate),\n    foreign key (BusinessEntityID) references SalesPerson(BusinessEntityID)\n)"
            },
            {
                "name": "SalesTerritoryHistory",
                "sql": "CREATE TABLE SalesTerritoryHistory\n(\n    BusinessEntityID INTEGER                             not null,\n    TerritoryID      INTEGER                             not null,\n    StartDate        DATETIME                            not null,\n    EndDate          DATETIME,\n    rowguid          TEXT                         not null\n        unique,\n    ModifiedDate     DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (BusinessEntityID, StartDate, TerritoryID),\n    foreign key (BusinessEntityID) references SalesPerson(BusinessEntityID),\n    foreign key (TerritoryID) references SalesTerritory(TerritoryID)\n)"
            },
            {
                "name": "ScrapReason",
                "sql": "CREATE TABLE ScrapReason\n(\n    ScrapReasonID INTEGER\n        primary key autoincrement,\n    Name          TEXT                        not null\n        unique,\n    ModifiedDate  DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "Shift",
                "sql": "CREATE TABLE Shift\n(\n    ShiftID      INTEGER\n        primary key autoincrement,\n    Name         TEXT                        not null\n        unique,\n    StartTime    TEXT                                not null,\n    EndTime      TEXT                                not null,\n    ModifiedDate DATETIME default CURRENT_TIMESTAMP not null,\n    unique (StartTime, EndTime)\n)"
            },
            {
                "name": "ShipMethod",
                "sql": "CREATE TABLE ShipMethod\n(\n    ShipMethodID INTEGER\n        primary key autoincrement,\n    Name         TEXT                             not null\n        unique,\n    ShipBase     REAL default 0.0000            not null,\n    ShipRate    REAL default 0.0000            not null,\n    rowguid      TEXT                              not null\n        unique,\n    ModifiedDate DATETIME      default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "SpecialOffer",
                "sql": "CREATE TABLE SpecialOffer\n(\n    SpecialOfferID INTEGER\n        primary key autoincrement,\n    Description    TEXT                             not null,\n    DiscountPct    REAL   default 0.0000            not null,\n    Type           TEXT                             not null,\n    Category       TEXT                             not null,\n    StartDate      DATETIME                            not null,\n    EndDate        DATETIME                            not null,\n    MinQty         INTEGER   default 0                 not null,\n    MaxQty         INTEGER,\n    rowguid        TEXT                             not null\n        unique,\n    ModifiedDate   DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "BusinessEntityAddress",
                "sql": "CREATE TABLE BusinessEntityAddress\n(\n    BusinessEntityID INTEGER                                 not null,\n    AddressID        INTEGER                                 not null,\n    AddressTypeID    INTEGER                                 not null,\n    rowguid          TEXT                         not null\n            unique,\n    ModifiedDate     DATETIME default current_timestamp not null,\n    primary key (BusinessEntityID, AddressID, AddressTypeID),\n    foreign key (AddressID) references Address(AddressID),\n    foreign key (AddressTypeID) references AddressType(AddressTypeID),\n    foreign key (BusinessEntityID) references BusinessEntity(BusinessEntityID)\n)"
            },
            {
                "name": "SalesTaxRate",
                "sql": "CREATE TABLE SalesTaxRate\n(\n    SalesTaxRateID  INTEGER\n        primary key autoincrement,\n    StateProvinceID INTEGER                                  not null,\n    TaxType         INTEGER                                  not null,\n    TaxRate         REAL default 0.0000            not null,\n    Name            TEXT                             not null,\n    rowguid         TEXT                              not null\n        unique,\n    ModifiedDate    DATETIME      default CURRENT_TIMESTAMP not null,\n    unique (StateProvinceID, TaxType),\n    foreign key (StateProvinceID) references StateProvince(StateProvinceID)\n)"
            },
            {
                "name": "Store",
                "sql": "CREATE TABLE Store\n(\n    BusinessEntityID INTEGER                             not null\n        primary key,\n    Name             TEXT                        not null,\n    SalesPersonID    INTEGER,\n    Demographics     TEXT,\n    rowguid          TEXT                             not null\n        unique,\n    ModifiedDate     DATETIME default CURRENT_TIMESTAMP not null,\n    foreign key (BusinessEntityID) references BusinessEntity(BusinessEntityID),\n    foreign key (SalesPersonID) references SalesPerson(BusinessEntityID)\n)"
            },
            {
                "name": "SalesOrderHeaderSalesReason",
                "sql": "CREATE TABLE SalesOrderHeaderSalesReason\n(\n    SalesOrderID  INTEGER                             not null,\n    SalesReasonID INTEGER                             not null,\n    ModifiedDate  DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (SalesOrderID, SalesReasonID),\n    foreign key (SalesOrderID) references SalesOrderHeader(SalesOrderID),\n    foreign key (SalesReasonID) references SalesReason(SalesReasonID)\n)"
            },
            {
                "name": "TransactionHistoryArchive",
                "sql": "CREATE TABLE TransactionHistoryArchive\n(\n    TransactionID        INTEGER                             not null\n        primary key,\n    ProductID            INTEGER                             not null,\n    ReferenceOrderID     INTEGER                             not null,\n    ReferenceOrderLineID INTEGER   default 0                 not null,\n    TransactionDate      DATETIME default CURRENT_TIMESTAMP not null,\n    TransactionType      TEXT                                not null,\n    Quantity             INTEGER                             not null,\n    ActualCost           REAL                             not null,\n    ModifiedDate         DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "UnitMeasure",
                "sql": "CREATE TABLE UnitMeasure\n(\n    UnitMeasureCode TEXT                             not null\n        primary key,\n    Name            TEXT                        not null\n        unique,\n    ModifiedDate    DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "ProductCostHistory",
                "sql": "CREATE TABLE ProductCostHistory\n(\n    ProductID    INTEGER                             not null,\n    StartDate    DATE                                not null,\n    EndDate      DATE,\n    StandardCost REAL                      not null,\n    ModifiedDate DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (ProductID, StartDate),\n    foreign key (ProductID) references Product(ProductID)\n)"
            },
            {
                "name": "ProductDocument",
                "sql": "CREATE TABLE ProductDocument\n(\n    ProductID    INTEGER                             not null,\n    DocumentNode TEXT                        not null,\n    ModifiedDate DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (ProductID, DocumentNode),\n    foreign key (ProductID) references Product(ProductID),\n    foreign key (DocumentNode) references Document(DocumentNode)\n)"
            },
            {
                "name": "ProductInventory",
                "sql": "CREATE TABLE ProductInventory\n(\n    ProductID    INTEGER                             not null,\n    LocationID   INTEGER                            not null,\n    Shelf        TEXT                         not null,\n    Bin          INTEGER                             not null,\n    Quantity     INTEGER  default 0                 not null,\n    rowguid      TEXT                         not null,\n    ModifiedDate DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (ProductID, LocationID),\n    foreign key (ProductID) references Product(ProductID),\n    foreign key (LocationID) references Location(LocationID)\n)"
            },
            {
                "name": "ProductProductPhoto",
                "sql": "CREATE TABLE ProductProductPhoto\n(\n    ProductID      INTEGER                             not null,\n    ProductPhotoID INTEGER                             not null,\n    \"Primary\"      INTEGER   default 0                 not null,\n    ModifiedDate   DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (ProductID, ProductPhotoID),\n    foreign key (ProductID) references Product(ProductID),\n    foreign key (ProductPhotoID) references ProductPhoto(ProductPhotoID)\n)"
            },
            {
                "name": "ProductReview",
                "sql": "CREATE TABLE ProductReview\n(\n    ProductReviewID INTEGER\n        primary key autoincrement,\n    ProductID       INTEGER                             not null,\n    ReviewerName   TEXT                        not null,\n    ReviewDate      DATETIME default CURRENT_TIMESTAMP not null,\n    EmailAddress    TEXT                         not null,\n    Rating          INTEGER                             not null,\n    Comments        TEXT,\n    ModifiedDate    DATETIME default CURRENT_TIMESTAMP not null,\n    foreign key (ProductID) references Product(ProductID)\n)"
            },
            {
                "name": "ShoppingCartItem",
                "sql": "CREATE TABLE ShoppingCartItem\n(\n    ShoppingCartItemID INTEGER\n        primary key autoincrement,\n    ShoppingCartID     TEXT                         not null,\n    Quantity           INTEGER   default 1                 not null,\n    ProductID          INTEGER                             not null,\n    DateCreated        DATETIME default CURRENT_TIMESTAMP not null,\n    ModifiedDate       DATETIME default CURRENT_TIMESTAMP not null,\n    foreign key (ProductID) references Product(ProductID)\n)"
            },
            {
                "name": "SpecialOfferProduct",
                "sql": "CREATE TABLE SpecialOfferProduct\n(\n    SpecialOfferID INTEGER                             not null,\n    ProductID      INTEGER                             not null,\n    rowguid        TEXT                             not null\n        unique,\n    ModifiedDate   DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (SpecialOfferID, ProductID),\n    foreign key (SpecialOfferID) references SpecialOffer(SpecialOfferID),\n    foreign key (ProductID) references Product(ProductID)\n)"
            },
            {
                "name": "SalesOrderDetail",
                "sql": "CREATE TABLE SalesOrderDetail\n(\n    SalesOrderID          INTEGER                             not null,\n    SalesOrderDetailID    INTEGER\n        primary key autoincrement,\n    CarrierTrackingNumber TEXT,\n    OrderQty              INTEGER                             not null,\n    ProductID             INTEGER                             not null,\n    SpecialOfferID        INTEGER                             not null,\n    UnitPrice             REAL                             not null,\n    UnitPriceDiscount     REAL   default 0.0000            not null,\n    LineTotal             REAL                             not null,\n    rowguid               TEXT                             not null\n        unique,\n    ModifiedDate          DATETIME default CURRENT_TIMESTAMP not null,\n    foreign key (SalesOrderID) references SalesOrderHeader(SalesOrderID),\n    foreign key (SpecialOfferID, ProductID) references SpecialOfferProduct(SpecialOfferID, ProductID)\n)"
            },
            {
                "name": "TransactionHistory",
                "sql": "CREATE TABLE TransactionHistory\n(\n    TransactionID        INTEGER\n        primary key autoincrement,\n    ProductID            INTEGER                             not null,\n    ReferenceOrderID     INTEGER                             not null,\n    ReferenceOrderLineID INTEGER   default 0                 not null,\n    TransactionDate      DATETIME default CURRENT_TIMESTAMP not null,\n    TransactionType      TEXT                                not null,\n    Quantity             INTEGER                             not null,\n    ActualCost           REAL                             not null,\n    ModifiedDate         DATETIME default CURRENT_TIMESTAMP not null,\n    foreign key (ProductID) references Product(ProductID)\n)"
            },
            {
                "name": "Vendor",
                "sql": "CREATE TABLE Vendor\n(\n    BusinessEntityID        INTEGER                             not null\n        primary key,\n    AccountNumber           TEXT                         not null\n        unique,\n    Name                    TEXT                        not null,\n    CreditRating            INTEGER                             not null,\n    PreferredVendorStatus   INTEGER   default 1                 not null,\n    ActiveFlag              INTEGER   default 1                 not null,\n    PurchasingWebServiceURL TEXT,\n    ModifiedDate            DATETIME default CURRENT_TIMESTAMP not null,\n    foreign key (BusinessEntityID) references BusinessEntity(BusinessEntityID)\n)"
            },
            {
                "name": "ProductVendor",
                "sql": "CREATE TABLE ProductVendor\n(\n    ProductID        INTEGER                             not null,\n    BusinessEntityID INTEGER                             not null,\n    AverageLeadTime  INTEGER                             not null,\n    StandardPrice    REAL                      not null,\n    LastReceiptCost  REAL,\n    LastReceiptDate  DATETIME,\n    MinOrderQty      INTEGER                             not null,\n    MaxOrderQty      INTEGER                             not null,\n    OnOrderQty       INTEGER,\n    UnitMeasureCode  TEXT                             not null,\n    ModifiedDate     DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (ProductID, BusinessEntityID),\n    foreign key (ProductID) references Product(ProductID),\n    foreign key (BusinessEntityID) references Vendor(BusinessEntityID),\n    foreign key (UnitMeasureCode) references UnitMeasure(UnitMeasureCode)\n)"
            },
            {
                "name": "PurchaseOrderHeader",
                "sql": "CREATE TABLE PurchaseOrderHeader\n(\n    PurchaseOrderID INTEGER\n        primary key autoincrement,\n    RevisionNumber  INTEGER        default 0                 not null,\n    Status          INTEGER        default 1                 not null,\n    EmployeeID      INTEGER                                  not null,\n    VendorID        INTEGER                                  not null,\n    ShipMethodID    INTEGER                                  not null,\n    OrderDate       DATETIME      default CURRENT_TIMESTAMP not null,\n    ShipDate        DATETIME,\n    SubTotal        REAL default 0.0000            not null,\n    TaxAmt          REAL default 0.0000            not null,\n    Freight         REAL default 0.0000            not null,\n    TotalDue        REAL                          not null,\n    ModifiedDate    DATETIME      default CURRENT_TIMESTAMP not null,\n    foreign key (EmployeeID) references Employee(BusinessEntityID),\n    foreign key (VendorID) references Vendor(BusinessEntityID),\n    foreign key (ShipMethodID) references ShipMethod(ShipMethodID)\n)"
            },
            {
                "name": "PurchaseOrderDetail",
                "sql": "CREATE TABLE PurchaseOrderDetail\n(\n    PurchaseOrderID       INTEGER                            not null,\n    PurchaseOrderDetailID INTEGER\n        primary key autoincrement,\n    DueDate               DATETIME                           not null,\n    OrderQty              INTEGER                           not null,\n    ProductID             INTEGER                            not null,\n    UnitPrice             REAL                            not null,\n    LineTotal             REAL                            not null,\n    ReceivedQty           REAL                            not null,\n    RejectedQty           REAL                            not null,\n    StockedQty            REAL                            not null,\n    ModifiedDate          DATETIME default CURRENT_TIMESTAMP not null,\n    foreign key (PurchaseOrderID) references PurchaseOrderHeader(PurchaseOrderID),\n    foreign key (ProductID) references Product(ProductID)\n)"
            },
            {
                "name": "WorkOrder",
                "sql": "CREATE TABLE WorkOrder\n(\n    WorkOrderID   INTEGER\n        primary key autoincrement,\n    ProductID     INTEGER                             not null,\n    OrderQty      INTEGER                             not null,\n    StockedQty    INTEGER                             not null,\n    ScrappedQty   INTEGER                           not null,\n    StartDate     DATETIME                            not null,\n    EndDate       DATETIME,\n    DueDate       DATETIME                            not null,\n    ScrapReasonID INTEGER,\n    ModifiedDate  DATETIME default CURRENT_TIMESTAMP not null,\n    foreign key (ProductID) references Product(ProductID),\n    foreign key (ScrapReasonID) references ScrapReason(ScrapReasonID)\n)"
            },
            {
                "name": "WorkOrderRouting",
                "sql": "CREATE TABLE WorkOrderRouting\n(\n    WorkOrderID        INTEGER                             not null,\n    ProductID          INTEGER                             not null,\n    OperationSequence  INTEGER                             not null,\n    LocationID         INTEGER                             not null,\n    ScheduledStartDate DATETIME                            not null,\n    ScheduledEndDate   DATETIME                            not null,\n    ActualStartDate    DATETIME,\n    ActualEndDate      DATETIME,\n    ActualResourceHrs  REAL,\n    PlannedCost        REAL                      not null,\n    ActualCost         REAL,\n    ModifiedDate       DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (WorkOrderID, ProductID, OperationSequence),\n    foreign key (WorkOrderID) references WorkOrder(WorkOrderID),\n    foreign key (LocationID) references Location(LocationID)\n)"
            },
            {
                "name": "Customer",
                "sql": "CREATE TABLE Customer\n(\n    CustomerID    INTEGER\n        primary key,\n    PersonID      INTEGER,\n    StoreID       INTEGER,\n    TerritoryID   INTEGER,\n    AccountNumber TEXT                         not null\n            unique,\n    rowguid       TEXT                         not null\n            unique,\n    ModifiedDate  DATETIME default current_timestamp not null,\n    foreign key (PersonID) references Person(BusinessEntityID),\n    foreign key (TerritoryID) references SalesTerritory(TerritoryID),\n    foreign key (StoreID) references Store(BusinessEntityID)\n)"
            },
            {
                "name": "ProductListPriceHistory",
                "sql": "CREATE TABLE ProductListPriceHistory\n(\n    ProductID    INTEGER                             not null,\n    StartDate    DATE                                not null,\n    EndDate      DATE,\n    ListPrice    REAL                      not null,\n    ModifiedDate DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (ProductID, StartDate),\n    foreign key (ProductID) references Product(ProductID)\n)"
            },
            {
                "name": "Address",
                "sql": "CREATE TABLE \"Address\"\n(\n    AddressID       INTEGER\n        primary key autoincrement,\n    AddressLine1    TEXT                               not null,\n    AddressLine2    TEXT,\n    City            TEXT                               not null,\n    StateProvinceID INTEGER                            not null\n        references StateProvince,\n    PostalCode      TEXT                               not null,\n    SpatialLocation TEXT,\n    rowguid         TEXT                               not null\n        unique,\n    ModifiedDate    DATETIME default current_timestamp not null,\n    unique (AddressLine1, AddressLine2, City, StateProvinceID, PostalCode)\n)"
            },
            {
                "name": "AddressType",
                "sql": "CREATE TABLE \"AddressType\"\n(\n    AddressTypeID INTEGER\n        primary key autoincrement,\n    Name          TEXT                               not null\n        unique,\n    rowguid       TEXT                               not null\n        unique,\n    ModifiedDate  DATETIME default current_timestamp not null\n)"
            },
            {
                "name": "BillOfMaterials",
                "sql": "CREATE TABLE \"BillOfMaterials\"\n(\n    BillOfMaterialsID INTEGER\n        primary key autoincrement,\n    ProductAssemblyID INTEGER\n        references Product,\n    ComponentID       INTEGER                            not null\n        references Product,\n    StartDate         DATETIME default current_timestamp not null,\n    EndDate           DATETIME,\n    UnitMeasureCode   TEXT                               not null\n        references UnitMeasure,\n    BOMLevel          INTEGER                            not null,\n    PerAssemblyQty    REAL     default 1.00              not null,\n    ModifiedDate      DATETIME default current_timestamp not null,\n    unique (ProductAssemblyID, ComponentID, StartDate)\n)"
            },
            {
                "name": "BusinessEntity",
                "sql": "CREATE TABLE \"BusinessEntity\"\n(\n    BusinessEntityID INTEGER\n        primary key autoincrement,\n    rowguid          TEXT                               not null\n        unique,\n    ModifiedDate     DATETIME default current_timestamp not null\n)"
            },
            {
                "name": "ContactType",
                "sql": "CREATE TABLE \"ContactType\"\n(\n    ContactTypeID INTEGER\n        primary key autoincrement,\n    Name          TEXT                               not null\n        unique,\n    ModifiedDate  DATETIME default current_timestamp not null\n)"
            },
            {
                "name": "CurrencyRate",
                "sql": "CREATE TABLE \"CurrencyRate\"\n(\n    CurrencyRateID   INTEGER\n        primary key autoincrement,\n    CurrencyRateDate DATETIME                           not null,\n    FromCurrencyCode TEXT                               not null\n        references Currency,\n    ToCurrencyCode   TEXT                               not null\n        references Currency,\n    AverageRate      REAL                               not null,\n    EndOfDayRate     REAL                               not null,\n    ModifiedDate     DATETIME default current_timestamp not null,\n    unique (CurrencyRateDate, FromCurrencyCode, ToCurrencyCode)\n)"
            },
            {
                "name": "Department",
                "sql": "CREATE TABLE \"Department\"\n(\n    DepartmentID INTEGER\n        primary key autoincrement,\n    Name         TEXT                               not null\n        unique,\n    GroupName    TEXT                               not null,\n    ModifiedDate DATETIME default current_timestamp not null\n)"
            },
            {
                "name": "EmployeeDepartmentHistory",
                "sql": "CREATE TABLE \"EmployeeDepartmentHistory\"\n(\n    BusinessEntityID INTEGER                            not null\n        references Employee,\n    DepartmentID     INTEGER                            not null\n        references Department,\n    ShiftID          INTEGER                            not null\n        references Shift,\n    StartDate        DATE                               not null,\n    EndDate          DATE,\n    ModifiedDate     DATETIME default current_timestamp not null,\n    primary key (BusinessEntityID, StartDate, DepartmentID, ShiftID)\n)"
            },
            {
                "name": "EmployeePayHistory",
                "sql": "CREATE TABLE \"EmployeePayHistory\"\n(\n    BusinessEntityID INTEGER                            not null\n        references Employee,\n    RateChangeDate   DATETIME                           not null,\n    Rate             REAL                               not null,\n    PayFrequency     INTEGER                            not null,\n    ModifiedDate     DATETIME default current_timestamp not null,\n    primary key (BusinessEntityID, RateChangeDate)\n)"
            },
            {
                "name": "JobCandidate",
                "sql": "CREATE TABLE \"JobCandidate\"\n(\n    JobCandidateID   INTEGER\n        primary key autoincrement,\n    BusinessEntityID INTEGER\n        references Employee,\n    Resume           TEXT,\n    ModifiedDate     DATETIME default current_timestamp not null\n)"
            },
            {
                "name": "Location",
                "sql": "CREATE TABLE \"Location\"\n(\n    LocationID   INTEGER\n        primary key autoincrement,\n    Name         TEXT                               not null\n        unique,\n    CostRate     REAL     default 0.0000            not null,\n    Availability REAL     default 0.00              not null,\n    ModifiedDate DATETIME default current_timestamp not null\n)"
            },
            {
                "name": "PhoneNumberType",
                "sql": "CREATE TABLE \"PhoneNumberType\"\n(\n    PhoneNumberTypeID INTEGER\n        primary key autoincrement,\n    Name              TEXT                               not null,\n    ModifiedDate      DATETIME default current_timestamp not null\n)"
            },
            {
                "name": "Product",
                "sql": "CREATE TABLE \"Product\"\n(\n    ProductID             INTEGER\n        primary key autoincrement,\n    Name                  TEXT                               not null\n        unique,\n    ProductNumber         TEXT                               not null\n        unique,\n    MakeFlag              INTEGER  default 1                 not null,\n    FinishedGoodsFlag     INTEGER  default 1                 not null,\n    Color                 TEXT,\n    SafetyStockLevel      INTEGER                            not null,\n    ReorderPoint          INTEGER                            not null,\n    StandardCost          REAL                               not null,\n    ListPrice             REAL                               not null,\n    Size                  TEXT,\n    SizeUnitMeasureCode   TEXT\n        references UnitMeasure,\n    WeightUnitMeasureCode TEXT\n        references UnitMeasure,\n    Weight                REAL,\n    DaysToManufacture     INTEGER                            not null,\n    ProductLine           TEXT,\n    Class                 TEXT,\n    Style                 TEXT,\n    ProductSubcategoryID  INTEGER\n        references ProductSubcategory,\n    ProductModelID        INTEGER\n        references ProductModel,\n    SellStartDate         DATETIME                           not null,\n    SellEndDate           DATETIME,\n    DiscontinuedDate      DATETIME,\n    rowguid               TEXT                               not null\n        unique,\n    ModifiedDate          DATETIME default current_timestamp not null\n)"
            },
            {
                "name": "Document",
                "sql": "CREATE TABLE \"Document\"\n(\n    DocumentNode    TEXT                               not null\n        primary key,\n    DocumentLevel   INTEGER,\n    Title           TEXT                               not null,\n    Owner           INTEGER                            not null\n        references Employee,\n    FolderFlag      INTEGER  default 0                 not null,\n    FileName        TEXT                               not null,\n    FileExtension   TEXT                               not null,\n    Revision        TEXT                               not null,\n    ChangeNumber    INTEGER  default 0                 not null,\n    Status          INTEGER                            not null,\n    DocumentSummary TEXT,\n    Document        BLOB,\n    rowguid         TEXT                               not null\n        unique,\n    ModifiedDate    DATETIME default current_timestamp not null,\n    unique (DocumentLevel, DocumentNode)\n)"
            },
            {
                "name": "StateProvince",
                "sql": "CREATE TABLE \"StateProvince\"\n(\n    StateProvinceID         INTEGER\n        primary key autoincrement,\n    StateProvinceCode       TEXT                               not null,\n    CountryRegionCode       TEXT                               not null\n        references CountryRegion,\n    IsOnlyStateProvinceFlag INTEGER  default 1                 not null,\n    Name                    TEXT                               not null\n        unique,\n    TerritoryID             INTEGER                            not null\n        references SalesTerritory,\n    rowguid                 TEXT                               not null\n        unique,\n    ModifiedDate            DATETIME default CURRENT_TIMESTAMP not null,\n    unique (StateProvinceCode, CountryRegionCode)\n)"
            },
            {
                "name": "CreditCard",
                "sql": "CREATE TABLE \"CreditCard\"\n(\n    CreditCardID INTEGER\n        primary key autoincrement,\n    CardType     TEXT                               not null,\n    CardNumber   TEXT                               not null\n        unique,\n    ExpMonth     INTEGER                            not null,\n    ExpYear      INTEGER                            not null,\n    ModifiedDate DATETIME default current_timestamp not null\n)"
            },
            {
                "name": "SalesOrderHeader",
                "sql": "CREATE TABLE \"SalesOrderHeader\"\n(\n    SalesOrderID           INTEGER\n        primary key autoincrement,\n    RevisionNumber         INTEGER  default 0                 not null,\n    OrderDate              DATETIME default CURRENT_TIMESTAMP not null,\n    DueDate                DATETIME                           not null,\n    ShipDate               DATETIME,\n    Status                 INTEGER  default 1                 not null,\n    OnlineOrderFlag        INTEGER  default 1                 not null,\n    SalesOrderNumber       TEXT                               not null\n        unique,\n    PurchaseOrderNumber    TEXT,\n    AccountNumber          TEXT,\n    CustomerID             INTEGER                            not null\n        references Customer,\n    SalesPersonID          INTEGER\n        references SalesPerson,\n    TerritoryID            INTEGER\n        references SalesTerritory,\n    BillToAddressID        INTEGER                            not null\n        references Address,\n    ShipToAddressID        INTEGER                            not null\n        references Address,\n    ShipMethodID           INTEGER                            not null\n        references Address,\n    CreditCardID           INTEGER\n        references CreditCard,\n    CreditCardApprovalCode TEXT,\n    CurrencyRateID         INTEGER\n        references CurrencyRate,\n    SubTotal               REAL     default 0.0000            not null,\n    TaxAmt                 REAL     default 0.0000            not null,\n    Freight                REAL     default 0.0000            not null,\n    TotalDue               REAL                               not null,\n    Comment                TEXT,\n    rowguid                TEXT                               not null\n        unique,\n    ModifiedDate           DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "all_prevalences",
                "sql": "CREATE TABLE all_prevalences\n(\n    ITEM                    TEXT\n            primary key,\n    \"POPULATION TYPE\"       TEXT,\n    OCCURRENCES             INTEGER,\n    \"POPULATION COUNT\"      INTEGER,\n    \"PREVALENCE RATE\"       REAL,\n    \"PREVALENCE PERCENTAGE\" REAL\n)"
            },
            {
                "name": "patients",
                "sql": "CREATE TABLE patients\n(\n    patient    TEXT\n            primary key,\n    birthdate  DATE,\n    deathdate  DATE,\n    ssn        TEXT,\n    drivers    TEXT,\n    passport   TEXT,\n    prefix     TEXT,\n    first      TEXT,\n    last       TEXT,\n    suffix     TEXT,\n    maiden     TEXT,\n    marital    TEXT,\n    race       TEXT,\n    ethnicity  TEXT,\n    gender     TEXT,\n    birthplace TEXT,\n    address    TEXT\n)"
            },
            {
                "name": "encounters",
                "sql": "CREATE TABLE encounters\n(\n    ID                TEXT\n            primary key,\n    DATE              DATE,\n    PATIENT           TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "allergies",
                "sql": "CREATE TABLE allergies\n(\n    START       TEXT,\n    STOP        TEXT,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "careplans",
                "sql": "CREATE TABLE careplans\n(\n    ID                TEXT,\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              REAL,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "conditions",
                "sql": "CREATE TABLE conditions\n(\n    START       DATE,\n    STOP        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient),\n    foreign key (DESCRIPTION) references all_prevalences(ITEM)\n)"
            },
            {
                "name": "immunizations",
                "sql": "CREATE TABLE immunizations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (DATE, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "medications",
                "sql": "CREATE TABLE medications\n(\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    primary key (START, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "observations",
                "sql": "CREATE TABLE observations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        TEXT,\n    DESCRIPTION TEXT,\n    VALUE       REAL,\n    UNITS       TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "procedures",
                "sql": "CREATE TABLE procedures\n(\n    DATE              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "claims",
                "sql": "CREATE TABLE \"claims\"\n(\n    ID             TEXT\n        primary key,\n    PATIENT        TEXT\n        references patients,\n    BILLABLEPERIOD DATE,\n    ORGANIZATION   TEXT,\n    ENCOUNTER      TEXT\n        references encounters,\n    DIAGNOSIS      TEXT,\n    TOTAL          INTEGER\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "awards_players",
                "sql": "CREATE TABLE awards_players\n(\n    playerID TEXT not null,\n    award    TEXT not null,\n    year     INTEGER          not null,\n    lgID     TEXT null,\n    note     TEXT null,\n    pos      TEXT null,\n    primary key (playerID, year, award),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "coaches",
                "sql": "CREATE TABLE coaches\n(\n    coachID     TEXT not null,\n    year        INTEGER          not null,\n    tmID        TEXT not null,\n    lgID        TEXT null,\n    stint       INTEGER          not null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    post_wins   INTEGER          null,\n    post_losses INTEGER          null,\n    primary key (coachID, year, tmID, stint),\n    foreign key (tmID, year) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "draft",
                "sql": "CREATE TABLE draft\n(\n    id             INTEGER default 0 not null\n        primary key,\n    draftYear      INTEGER           null,\n    draftRound     INTEGER           null,\n    draftSelection INTEGER           null,\n    draftOverall   INTEGER          null,\n    tmID           TEXT  null,\n    firstName      TEXT  null,\n    lastName       TEXT  null,\n    suffixName     TEXT  null,\n    playerID       TEXT  null,\n    draftFrom      TEXT  null,\n    lgID           TEXT  null,\n    foreign key (tmID, draftYear) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "player_allstar",
                "sql": "CREATE TABLE player_allstar\n(\n    playerID        TEXT not null,\n    last_name       TEXT null,\n    first_name      TEXT null,\n    season_id       INTEGER          not null,\n    conference      TEXT null,\n    league_id       TEXT null,\n    games_played    INTEGER          null,\n    minutes         INTEGER          null,\n    points          INTEGER          null,\n    o_rebounds      INTEGER          null,\n    d_rebounds      INTEGER          null,\n    rebounds        INTEGER          null,\n    assists         INTEGER          null,\n    steals          INTEGER          null,\n    blocks          INTEGER          null,\n    turnovers       INTEGER          null,\n    personal_fouls  INTEGER          null,\n    fg_attempted    INTEGER          null,\n    fg_made         INTEGER          null,\n    ft_attempted    INTEGER          null,\n    ft_made         INTEGER          null,\n    three_attempted INTEGER          null,\n    three_made      INTEGER          null,\n    primary key (playerID, season_id),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "players",
                "sql": "CREATE TABLE players\n(\n    playerID      TEXT not null\n        primary key,\n    useFirst      TEXT null,\n    firstName     TEXT null,\n    middleName    TEXT null,\n    lastName      TEXT null,\n    nameGiven     TEXT null,\n    fullGivenName TEXT null,\n    nameSuffix    TEXT null,\n    nameNick      TEXT null,\n    pos           TEXT null,\n    firstseason   INTEGER          null,\n    lastseason    INTEGER         null,\n    height        REAL        null,\n    weight        INTEGER         null,\n    college       TEXT null,\n    collegeOther  TEXT null,\n    birthDate     DATE         null,\n    birthCity     TEXT null,\n    birthState    TEXT null,\n    birthCountry  TEXT null,\n    highSchool    TEXT null,\n    hsCity        TEXT null,\n    hsState       TEXT null,\n    hsCountry     TEXT null,\n    deathDate     DATE         null,\n    race          TEXT null\n)"
            },
            {
                "name": "teams",
                "sql": "CREATE TABLE teams\n(\n    year        INTEGER          not null,\n    lgID        TEXT null,\n    tmID        TEXT not null,\n    franchID    TEXT null,\n    confID      TEXT null,\n    divID       TEXT null,\n    `rank`      INTEGER          null,\n    confRank    INTEGER          null,\n    playoff     TEXT null,\n    name        TEXT null,\n    o_fgm       INTEGER          null,\n--     o_fga       int          null,\n    o_ftm       INTEGER          null,\n--     o_fta       int          null,\n--     o_3pm       int          null,\n--     o_3pa       int          null,\n--     o_oreb      int          null,\n--     o_dreb      int          null,\n--     o_reb       int          null,\n--     o_asts      int          null,\n--     o_pf        int          null,\n--     o_stl       int          null,\n--     o_to        int          null,\n--     o_blk       int          null,\n     o_pts       INTEGER          null,\n--     d_fgm       int          null,\n--     d_fga       int          null,\n--     d_ftm       int          null,\n--     d_fta       int          null,\n--     d_3pm       int          null,\n--     d_3pa       int          null,\n--     d_oreb      int          null,\n--     d_dreb      int          null,\n--     d_reb       int          null,\n--     d_asts      int          null,\n--     d_pf        int          null,\n--     d_stl       int          null,\n--     d_to        int          null,\n--     d_blk       int          null,\n     d_pts       INTEGER          null,\n--     o_tmRebound int          null,\n--     d_tmRebound int          null,\n    homeWon     INTEGER          null,\n    homeLost    INTEGER          null,\n    awayWon     INTEGER          null,\n    awayLost    INTEGER          null,\n--     neutWon     int          null,\n--     neutLoss    int          null,\n--     confWon     int          null,\n--     confLoss    int          null,\n--     divWon      int          null,\n--     divLoss     int          null,\n--     pace        int          null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    games       INTEGER          null,\n--     min         int          null,\n    arena       TEXT null,\n--     attendance  int          null,\n--     bbtmID      varchar(255) null,\n    primary key (year, tmID)\n)"
            },
            {
                "name": "awards_coaches",
                "sql": "CREATE TABLE \"awards_coaches\"\n(\n    id      INTEGER\n        primary key autoincrement,\n    year    INTEGER,\n    coachID TEXT,\n    award   TEXT,\n    lgID    TEXT,\n    note    TEXT,\n    foreign key (coachID, year) references coaches (coachID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "players_teams",
                "sql": "CREATE TABLE \"players_teams\"\n(\n    id                 INTEGER\n        primary key autoincrement,\n    playerID           TEXT not null\n        references players\n            on update cascade on delete cascade,\n    year               INTEGER,\n    stint              INTEGER,\n    tmID               TEXT,\n    lgID               TEXT,\n    GP                 INTEGER,\n    GS                 INTEGER,\n    minutes            INTEGER,\n    points             INTEGER,\n    oRebounds          INTEGER,\n    dRebounds          INTEGER,\n    rebounds           INTEGER,\n    assists            INTEGER,\n    steals             INTEGER,\n    blocks             INTEGER,\n    turnovers          INTEGER,\n    PF                 INTEGER,\n    fgAttempted        INTEGER,\n    fgMade             INTEGER,\n    ftAttempted        INTEGER,\n    ftMade             INTEGER,\n    threeAttempted     INTEGER,\n    threeMade          INTEGER,\n    PostGP             INTEGER,\n    PostGS             INTEGER,\n    PostMinutes        INTEGER,\n    PostPoints         INTEGER,\n    PostoRebounds      INTEGER,\n    PostdRebounds      INTEGER,\n    PostRebounds       INTEGER,\n    PostAssists        INTEGER,\n    PostSteals         INTEGER,\n    PostBlocks         INTEGER,\n    PostTurnovers      INTEGER,\n    PostPF             INTEGER,\n    PostfgAttempted    INTEGER,\n    PostfgMade         INTEGER,\n    PostftAttempted    INTEGER,\n    PostftMade         INTEGER,\n    PostthreeAttempted INTEGER,\n    PostthreeMade      INTEGER,\n    note               TEXT,\n    foreign key (tmID, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "series_post",
                "sql": "CREATE TABLE \"series_post\"\n(\n    id         INTEGER\n        primary key autoincrement,\n    year       INTEGER,\n    round      TEXT,\n    series     TEXT,\n    tmIDWinner TEXT,\n    lgIDWinner TEXT,\n    tmIDLoser  TEXT,\n    lgIDLoser  TEXT,\n    W          INTEGER,\n    L          INTEGER,\n    foreign key (tmIDWinner, year) references teams (tmID, year)\n        on update cascade on delete cascade,\n    foreign key (tmIDLoser, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "langs",
                "sql": "CREATE TABLE langs(lid    INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lang   TEXT UNIQUE,\n                            locale TEXT UNIQUE,\n                            pages  INTEGER DEFAULT 0,  -- total pages in this language\n                            words  INTEGER DEFAULT 0)"
            },
            {
                "name": "pages",
                "sql": "CREATE TABLE pages(pid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                            page INTEGER DEFAULT NULL, -- wikipedia page id\n                            revision INTEGER DEFAULT NULL, -- wikipedia revision page id\n                            title TEXT,\n                            words INTEGER DEFAULT 0, -- number of different words in this page\n                            UNIQUE(lid,page,title))"
            },
            {
                "name": "words",
                "sql": "CREATE TABLE words(wid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            word        TEXT UNIQUE,\n                            occurrences INTEGER DEFAULT 0)"
            },
            {
                "name": "langs_words",
                "sql": "CREATE TABLE langs_words(lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER, -- repetitions of this word in this language\n                                        PRIMARY KEY(lid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "pages_words",
                "sql": "CREATE TABLE pages_words(pid INTEGER REFERENCES pages(pid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER DEFAULT 0, -- times this word appears into this page\n                                        PRIMARY KEY(pid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "biwords",
                "sql": "CREATE TABLE biwords(lid    INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w1st   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w2nd   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                occurrences INTEGER DEFAULT 0, -- times this pair appears in this language/page\n                                PRIMARY KEY(lid,w1st,w2nd))\n                                WITHOUT ROWID"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "Author",
                "sql": "CREATE TABLE \"Author\"\n(\n    Id          INTEGER\n        constraint Author_pk\n            primary key,\n    Name        TEXT,\n    Affiliation TEXT\n)"
            },
            {
                "name": "Conference",
                "sql": "CREATE TABLE \"Conference\"\n(\n    Id        INTEGER\n        constraint Conference_pk\n            primary key,\n    ShortName TEXT,\n    FullName  TEXT,\n    HomePage  TEXT\n)"
            },
            {
                "name": "Journal",
                "sql": "CREATE TABLE \"Journal\"\n(\n    Id        INTEGER\n        constraint Journal_pk\n            primary key,\n    ShortName TEXT,\n    FullName  TEXT,\n    HomePage  TEXT\n)"
            },
            {
                "name": "Paper",
                "sql": "CREATE TABLE Paper\n(\n    Id           INTEGER\n            primary key,\n    Title        TEXT,\n    Year         INTEGER,\n    ConferenceId INTEGER,\n    JournalId    INTEGER,\n    Keyword      TEXT,\n    foreign key (ConferenceId) references Conference(Id),\n    foreign key (JournalId) references Journal(Id)\n)"
            },
            {
                "name": "PaperAuthor",
                "sql": "CREATE TABLE PaperAuthor\n(\n    PaperId     INTEGER,\n    AuthorId    INTEGER,\n    Name        TEXT,\n    Affiliation TEXT,\n    foreign key (PaperId) references Paper(Id),\n    foreign key (AuthorId) references Author(Id)\n)"
            },
            {
                "name": "breweries",
                "sql": "CREATE TABLE breweries\n(\n    id    INTEGER          not null\n        primary key,\n    name  TEXT null,\n    city  TEXT null,\n    state TEXT null\n)"
            },
            {
                "name": "beers",
                "sql": "CREATE TABLE \"beers\"\n(\n    id         INTEGER not null\n        primary key,\n    brewery_id INTEGER not null\n        constraint beers_ibfk_1\n            references breweries,\n    abv        REAL,\n    ibu        REAL,\n    name       TEXT    not null,\n    style      TEXT,\n    ounces     REAL    not null\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "works_cycles",
            "toxicology",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "synthea",
            "airline",
            "image_and_language",
            "professional_basketball",
            "college_completion",
            "language_corpus",
            "trains",
            "authors",
            "craftbeer",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "mental_health_survey_ext",
        "tables": [
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "mental_health_survey",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "legislator_ext",
        "tables": [
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "legislator",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "synthea_ext",
        "tables": [
            {
                "name": "all_prevalences",
                "sql": "CREATE TABLE all_prevalences\n(\n    ITEM                    TEXT\n            primary key,\n    \"POPULATION TYPE\"       TEXT,\n    OCCURRENCES             INTEGER,\n    \"POPULATION COUNT\"      INTEGER,\n    \"PREVALENCE RATE\"       REAL,\n    \"PREVALENCE PERCENTAGE\" REAL\n)"
            },
            {
                "name": "patients",
                "sql": "CREATE TABLE patients\n(\n    patient    TEXT\n            primary key,\n    birthdate  DATE,\n    deathdate  DATE,\n    ssn        TEXT,\n    drivers    TEXT,\n    passport   TEXT,\n    prefix     TEXT,\n    first      TEXT,\n    last       TEXT,\n    suffix     TEXT,\n    maiden     TEXT,\n    marital    TEXT,\n    race       TEXT,\n    ethnicity  TEXT,\n    gender     TEXT,\n    birthplace TEXT,\n    address    TEXT\n)"
            },
            {
                "name": "encounters",
                "sql": "CREATE TABLE encounters\n(\n    ID                TEXT\n            primary key,\n    DATE              DATE,\n    PATIENT           TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "allergies",
                "sql": "CREATE TABLE allergies\n(\n    START       TEXT,\n    STOP        TEXT,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "careplans",
                "sql": "CREATE TABLE careplans\n(\n    ID                TEXT,\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              REAL,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "conditions",
                "sql": "CREATE TABLE conditions\n(\n    START       DATE,\n    STOP        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient),\n    foreign key (DESCRIPTION) references all_prevalences(ITEM)\n)"
            },
            {
                "name": "immunizations",
                "sql": "CREATE TABLE immunizations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (DATE, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "medications",
                "sql": "CREATE TABLE medications\n(\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    primary key (START, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "observations",
                "sql": "CREATE TABLE observations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        TEXT,\n    DESCRIPTION TEXT,\n    VALUE       REAL,\n    UNITS       TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "procedures",
                "sql": "CREATE TABLE procedures\n(\n    DATE              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "claims",
                "sql": "CREATE TABLE \"claims\"\n(\n    ID             TEXT\n        primary key,\n    PATIENT        TEXT\n        references patients,\n    BILLABLEPERIOD DATE,\n    ORGANIZATION   TEXT,\n    ENCOUNTER      TEXT\n        references encounters,\n    DIAGNOSIS      TEXT,\n    TOTAL          INTEGER\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "badges",
                "sql": "CREATE TABLE badges\n(\n    Id     INTEGER          not null\n        primary key,\n    UserId INTEGER          null,\n    Name   TEXT null,\n    Date   DATETIME     null,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "comments",
                "sql": "CREATE TABLE comments\n(\n    Id              INTEGER          not null\n        primary key,\n    PostId          INTEGER          null,\n    Score           INTEGER          null,\n    Text            TEXT     null,\n    CreationDate    DATETIME     null,\n    UserId          INTEGER          null,\n    UserDisplayName TEXT null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "postHistory",
                "sql": "CREATE TABLE postHistory\n(\n    Id                INTEGER          not null UNIQUE\n        primary key,\n    PostHistoryTypeId INTEGER          null,\n    PostId            INTEGER          null,\n    RevisionGUID      TEXT null,\n    CreationDate      DATETIME     null,\n    UserId            INTEGER          null,\n    Text              TEXT     null,\n    Comment           TEXT         null,\n    UserDisplayName   TEXT null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "postLinks",
                "sql": "CREATE TABLE postLinks\n(\n    Id            INTEGER      not null\n        primary key,\n    CreationDate  DATETIME null,\n    PostId        INTEGER      null,\n    RelatedPostId INTEGER      null,\n    LinkTypeId    INTEGER      null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (RelatedPostId) references posts (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "posts",
                "sql": "CREATE TABLE posts\n(\n    Id                    INTEGER          not null UNIQUE\n        primary key,\n    PostTypeId            INTEGER          null,\n    AcceptedAnswerId      INTEGER          null,\n    CreaionDate           DATETIME     null,\n    Score                 INTEGER          null,\n    ViewCount             INTEGER          null,\n    Body                  TEXT     null,\n    OwnerUserId           INTEGER          null,\n    LasActivityDate       DATETIME     null,\n    Title                 TEXT null,\n    Tags                  TEXT null,\n    AnswerCount           INTEGER          null,\n    CommentCount          INTEGER          null,\n    FavoriteCount         INTEGER          null,\n    LastEditorUserId      INTEGER          null,\n    LastEditDate          DATETIME     null,\n    CommunityOwnedDate    DATETIME    null,\n    ParentId              INTEGER          null,\n    ClosedDate            DATETIME     null,\n    OwnerDisplayName      TEXT null,\n    LastEditorDisplayName TEXT null,\n        foreign key (LastEditorUserId) references users (Id)\n            on update cascade on delete cascade,\n        foreign key (OwnerUserId) references users (Id)\n            on update cascade on delete cascade,\n        foreign key (ParentId) references posts (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE tags\n(\n    Id            INTEGER          not null\n        primary key,\n    TagName       TEXT null,\n    Count         INTEGER          null,\n    ExcerptPostId INTEGER          null,\n    WikiPostId    INTEGER          null,\n    foreign key (ExcerptPostId) references posts (Id)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "users",
                "sql": "CREATE TABLE users\n(\n    Id              INTEGER          not null UNIQUE\n        primary key,\n    Reputation      INTEGER          null,\n    CreationDate    DATETIME     null,\n    DisplayName     TEXT null,\n    LastAccessDate  DATETIME     null,\n    WebsiteUrl      TEXT null,\n    Location        TEXT null,\n    AboutMe         TEXT     null,\n    Views           INTEGER          null,\n    UpVotes         INTEGER          null,\n    DownVotes       INTEGER          null,\n    AccountId       INTEGER          null,\n    Age             INTEGER          null,\n    ProfileImageUrl TEXT null\n)"
            },
            {
                "name": "votes",
                "sql": "CREATE TABLE votes\n(\n    Id           INTEGER  not null\n        primary key,\n    PostId       INTEGER  null,\n    VoteTypeId   INTEGER  null,\n    CreationDate DATE null,\n    UserId       INTEGER  null,\n    BountyAmount INTEGER  null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "synthea",
            "toxicology",
            "student_club",
            "superhero",
            "card_games",
            "codebase_community",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "food_inspection",
            "menu",
            "app_store"
        ]
    },
    {
        "name": "car_retails_ext",
        "tables": [
            {
                "name": "offices",
                "sql": "CREATE TABLE offices\n(\n    officeCode   TEXT not null\n        primary key,\n    city         TEXT not null,\n    phone        TEXT not null,\n    addressLine1 TEXT not null,\n    addressLine2 TEXT,\n    state        TEXT,\n    country      TEXT not null,\n    postalCode  TEXT not null,\n    territory    TEXT not null\n)"
            },
            {
                "name": "employees",
                "sql": "CREATE TABLE employees\n(\n    employeeNumber INTEGER      not null\n        primary key,\n    lastName       TEXT  not null,\n    firstName      TEXT  not null,\n    extension      TEXT  not null,\n    email          TEXT not null,\n    officeCode     TEXT  not null,\n    reportsTo      INTEGER,\n    jobTitle       TEXT  not null,\n    foreign key (officeCode) references offices(officeCode),\n    foreign key (reportsTo) references employees(employeeNumber)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    customerNumber         INTEGER     not null\n        primary key,\n    customerName           TEXT not null,\n    contactLastName        TEXT not null,\n    contactFirstName       TEXT not null,\n    phone                  TEXT not null,\n    addressLine1           TEXT not null,\n    addressLine2           TEXT,\n    city                   TEXT not null,\n    state                  TEXT,\n    postalCode             TEXT,\n    country                TEXT not null,\n    salesRepEmployeeNumber INTEGER,\n    creditLimit            REAL,\n    foreign key (salesRepEmployeeNumber) references employees(employeeNumber)\n)"
            },
            {
                "name": "orders",
                "sql": "CREATE TABLE orders\n(\n    orderNumber    INTEGER     not null\n        primary key,\n    orderDate      DATE        not null,\n    requiredDate   DATE        not null,\n    shippedDate    DATE,\n    status         TEXT not null,\n    comments       TEXT,\n    customerNumber INTEGER     not null,\n    foreign key (customerNumber) references customers(customerNumber)\n)"
            },
            {
                "name": "payments",
                "sql": "CREATE TABLE payments\n(\n    customerNumber INTEGER     not null,\n    checkNumber    TEXT not null,\n    paymentDate    DATE        not null,\n    amount         REAL        not null,\n    primary key (customerNumber, checkNumber),\n    foreign key (customerNumber) references customers(customerNumber)\n)"
            },
            {
                "name": "productlines",
                "sql": "CREATE TABLE productlines\n(\n    productLine     TEXT not null\n        primary key,\n    textDescription TEXT,\n    htmlDescription TEXT,\n    image           BLOB\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    productCode        TEXT not null\n        primary key,\n    productName        TEXT not null,\n    productLine        TEXT not null,\n    productScale      TEXT not null,\n    productVendor      TEXT not null,\n    productDescription TEXT        not null,\n    quantityInStock    INTEGER     not null,\n    buyPrice           REAL        not null,\n    MSRP               REAL        not null,\n    foreign key (productLine) references productlines(productLine)\n)"
            },
            {
                "name": "orderdetails",
                "sql": "CREATE TABLE \"orderdetails\"\n(\n    orderNumber     INTEGER not null\n        references orders,\n    productCode     TEXT    not null\n        references products,\n    quantityOrdered INTEGER not null,\n    priceEach       REAL    not null,\n    orderLineNumber INTEGER not null,\n    primary key (orderNumber, productCode)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "Community_Area",
                "sql": "CREATE TABLE Community_Area\n(\n    community_area_no   INTEGER\n            primary key,\n    community_area_name TEXT,\n    side                TEXT,\n    population          TEXT\n)"
            },
            {
                "name": "District",
                "sql": "CREATE TABLE District\n(\n    district_no   INTEGER\n            primary key,\n    district_name TEXT,\n    address       TEXT,\n    zip_code      INTEGER,\n    commander     TEXT,\n    email         TEXT,\n    phone         TEXT,\n    fax           TEXT,\n    tty           TEXT,\n    twitter       TEXT\n)"
            },
            {
                "name": "FBI_Code",
                "sql": "CREATE TABLE FBI_Code\n(\n    fbi_code_no   TEXT\n            primary key,\n    title         TEXT,\n    description   TEXT,\n    crime_against TEXT\n)"
            },
            {
                "name": "IUCR",
                "sql": "CREATE TABLE IUCR\n(\n    iucr_no               TEXT\n            primary key,\n    primary_description   TEXT,\n    secondary_description TEXT,\n    index_code            TEXT\n)"
            },
            {
                "name": "Neighborhood",
                "sql": "CREATE TABLE Neighborhood\n(\n    neighborhood_name TEXT\n            primary key,\n    community_area_no INTEGER,\n    foreign key (community_area_no) references Community_Area(community_area_no)\n)"
            },
            {
                "name": "Ward",
                "sql": "CREATE TABLE Ward\n(\n    ward_no                INTEGER\n            primary key,\n    alderman_first_name    TEXT,\n    alderman_last_name     TEXT,\n    alderman_name_suffix   TEXT,\n    ward_office_address    TEXT,\n    ward_office_zip        TEXT,\n    ward_email             TEXT,\n    ward_office_phone      TEXT,\n    ward_office_fax        TEXT,\n    city_hall_office_room  INTEGER,\n    city_hall_office_phone TEXT,\n    city_hall_office_fax   TEXT,\n    Population             INTEGER\n)"
            },
            {
                "name": "Crime",
                "sql": "CREATE TABLE Crime\n(\n    report_no            INTEGER\n            primary key,\n    case_number          TEXT,\n    date                 TEXT,\n    block                TEXT,\n    iucr_no              TEXT,\n    location_description TEXT,\n    arrest               TEXT,\n    domestic             TEXT,\n    beat                 INTEGER,\n    district_no          INTEGER,\n    ward_no              INTEGER,\n    community_area_no    INTEGER,\n    fbi_code_no          TEXT,\n    latitude             TEXT,\n    longitude            TEXT,\n    foreign key (ward_no) references Ward(ward_no),\n    foreign key (iucr_no) references IUCR(iucr_no),\n    foreign key (district_no) references District(district_no),\n    foreign key (community_area_no) references Community_Area(community_area_no),\n    foreign key (fbi_code_no) references FBI_Code(fbi_code_no)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "car_retails",
            "toxicology",
            "superhero",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "image_and_language",
            "college_completion",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "disney",
            "chicago_crime",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "cs_semester_ext",
        "tables": [
            {
                "name": "course",
                "sql": "CREATE TABLE \"course\"\n(\n    course_id INTEGER\n        constraint course_pk\n            primary key,\n    name      TEXT,\n    credit    INTEGER,\n    diff      INTEGER\n)"
            },
            {
                "name": "prof",
                "sql": "CREATE TABLE prof\n(\n    prof_id         INTEGER\n        constraint prof_pk\n            primary key,\n    gender          TEXT,\n    first_name      TEXT,\n    last_name       TEXT,\n    email           TEXT,\n    popularity      INTEGER,\n    teachingability INTEGER,\n    graduate_from   TEXT\n)"
            },
            {
                "name": "RA",
                "sql": "CREATE TABLE RA\n(\n    student_id INTEGER,\n    capability INTEGER,\n    prof_id    INTEGER,\n    salary     TEXT,\n    primary key (student_id, prof_id),\n    foreign key (prof_id) references prof(prof_id),\n    foreign key (student_id) references student(student_id)\n)"
            },
            {
                "name": "registration",
                "sql": "CREATE TABLE registration\n(\n    course_id  INTEGER,\n    student_id INTEGER,\n    grade      TEXT,\n    sat        INTEGER,\n    primary key (course_id, student_id),\n    foreign key (course_id) references course(course_id),\n    foreign key (student_id) references student(student_id)\n)"
            },
            {
                "name": "student",
                "sql": "CREATE TABLE student\n(\n    student_id   INTEGER\n            primary key,\n    f_name       TEXT,\n    l_name       TEXT,\n    phone_number TEXT,\n    email        TEXT,\n    intelligence INTEGER,\n    gpa          REAL,\n    type         TEXT\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "cs_semester",
            "toxicology",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "food_inspection",
            "menu",
            "disney",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "airline_ext",
        "tables": [
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "airline",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "sales_ext",
        "tables": [
            {
                "name": "Customers",
                "sql": "CREATE TABLE Customers\n(\n    CustomerID    INTEGER         not null\n        primary key,\n    FirstName     TEXT not null,\n    MiddleInitial TEXT null,\n    LastName      TEXT not null\n)"
            },
            {
                "name": "Employees",
                "sql": "CREATE TABLE Employees\n(\n    EmployeeID    INTEGER         not null\n        primary key,\n    FirstName     TEXT not null,\n    MiddleInitial TEXT null,\n    LastName      TEXT not null\n)"
            },
            {
                "name": "Products",
                "sql": "CREATE TABLE Products\n(\n    ProductID INTEGER            not null\n        primary key,\n    Name      TEXT    not null,\n    Price     REAL null\n)"
            },
            {
                "name": "Sales",
                "sql": "CREATE TABLE Sales\n(\n    SalesID       INTEGER not null\n        primary key,\n    SalesPersonID INTEGER not null,\n    CustomerID    INTEGER not null,\n    ProductID     INTEGER not null,\n    Quantity      INTEGER not null,\n    foreign key (SalesPersonID) references Employees (EmployeeID)\n            on update cascade on delete cascade,\n        foreign key (CustomerID) references Customers (CustomerID)\n            on update cascade on delete cascade,\n        foreign key (ProductID) references Products (ProductID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "course",
                "sql": "CREATE TABLE \"course\"\n(\n    course_id INTEGER\n        constraint course_pk\n            primary key,\n    name      TEXT,\n    credit    INTEGER,\n    diff      INTEGER\n)"
            },
            {
                "name": "prof",
                "sql": "CREATE TABLE prof\n(\n    prof_id         INTEGER\n        constraint prof_pk\n            primary key,\n    gender          TEXT,\n    first_name      TEXT,\n    last_name       TEXT,\n    email           TEXT,\n    popularity      INTEGER,\n    teachingability INTEGER,\n    graduate_from   TEXT\n)"
            },
            {
                "name": "RA",
                "sql": "CREATE TABLE RA\n(\n    student_id INTEGER,\n    capability INTEGER,\n    prof_id    INTEGER,\n    salary     TEXT,\n    primary key (student_id, prof_id),\n    foreign key (prof_id) references prof(prof_id),\n    foreign key (student_id) references student(student_id)\n)"
            },
            {
                "name": "registration",
                "sql": "CREATE TABLE registration\n(\n    course_id  INTEGER,\n    student_id INTEGER,\n    grade      TEXT,\n    sat        INTEGER,\n    primary key (course_id, student_id),\n    foreign key (course_id) references course(course_id),\n    foreign key (student_id) references student(student_id)\n)"
            },
            {
                "name": "student",
                "sql": "CREATE TABLE student\n(\n    student_id   INTEGER\n            primary key,\n    f_name       TEXT,\n    l_name       TEXT,\n    phone_number TEXT,\n    email        TEXT,\n    intelligence INTEGER,\n    gpa          REAL,\n    type         TEXT\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "sales",
            "toxicology",
            "superhero",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "cs_semester",
            "airline",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "food_inspection",
            "menu",
            "disney",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "shooting_ext",
        "tables": [
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "shooting",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "soccer_2016_ext",
        "tables": [
            {
                "name": "Batting_Style",
                "sql": "CREATE TABLE Batting_Style\n(\n    Batting_Id   INTEGER\n            primary key,\n    Batting_hand TEXT\n)"
            },
            {
                "name": "Bowling_Style",
                "sql": "CREATE TABLE Bowling_Style\n(\n    Bowling_Id    INTEGER\n            primary key,\n    Bowling_skill TEXT\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE City\n(\n    City_Id    INTEGER\n            primary key,\n    City_Name  TEXT,\n    Country_id INTEGER\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE Country\n(\n    Country_Id   INTEGER\n            primary key,\n    Country_Name TEXT,\n    foreign key (Country_Id) references Country(Country_Id)\n)"
            },
            {
                "name": "Extra_Type",
                "sql": "CREATE TABLE Extra_Type\n(\n    Extra_Id   INTEGER\n            primary key,\n    Extra_Name TEXT\n)"
            },
            {
                "name": "Extra_Runs",
                "sql": "CREATE TABLE Extra_Runs\n(\n    Match_Id      INTEGER,\n    Over_Id       INTEGER,\n    Ball_Id       INTEGER,\n    Extra_Type_Id INTEGER,\n    Extra_Runs    INTEGER,\n    Innings_No    INTEGER,\n    primary key (Match_Id, Over_Id, Ball_Id, Innings_No),\n    foreign key (Extra_Type_Id) references Extra_Type(Extra_Id)\n)"
            },
            {
                "name": "Out_Type",
                "sql": "CREATE TABLE Out_Type\n(\n    Out_Id   INTEGER\n            primary key,\n    Out_Name TEXT\n)"
            },
            {
                "name": "Outcome",
                "sql": "CREATE TABLE Outcome\n(\n    Outcome_Id   INTEGER\n            primary key,\n    Outcome_Type TEXT\n)"
            },
            {
                "name": "Player",
                "sql": "CREATE TABLE Player\n(\n    Player_Id     INTEGER\n            primary key,\n    Player_Name   TEXT,\n    DOB           DATE,\n    Batting_hand  INTEGER,\n    Bowling_skill INTEGER,\n    Country_Name  INTEGER,\n    foreign key (Batting_hand) references Batting_Style(Batting_Id),\n    foreign key (Bowling_skill) references Bowling_Style(Bowling_Id),\n    foreign key (Country_Name) references Country(Country_Id)\n)"
            },
            {
                "name": "Rolee",
                "sql": "CREATE TABLE Rolee\n(\n    Role_Id   INTEGER\n            primary key,\n    Role_Desc TEXT\n)"
            },
            {
                "name": "Season",
                "sql": "CREATE TABLE Season\n(\n    Season_Id         INTEGER\n            primary key,\n    Man_of_the_Series INTEGER,\n    Orange_Cap        INTEGER,\n    Purple_Cap        INTEGER,\n    Season_Year       INTEGER\n)"
            },
            {
                "name": "Team",
                "sql": "CREATE TABLE Team\n(\n    Team_Id   INTEGER\n            primary key,\n    Team_Name TEXT\n)"
            },
            {
                "name": "Toss_Decision",
                "sql": "CREATE TABLE Toss_Decision\n(\n    Toss_Id   INTEGER\n            primary key,\n    Toss_Name TEXT\n)"
            },
            {
                "name": "Umpire",
                "sql": "CREATE TABLE Umpire\n(\n    Umpire_Id      INTEGER\n            primary key,\n    Umpire_Name    TEXT,\n    Umpire_Country INTEGER,\n    foreign key (Umpire_Country) references Country(Country_Id)\n)"
            },
            {
                "name": "Venue",
                "sql": "CREATE TABLE Venue\n(\n    Venue_Id   INTEGER\n            primary key,\n    Venue_Name TEXT,\n    City_Id    INTEGER,\n    foreign key (City_Id) references City(City_Id)\n)"
            },
            {
                "name": "Win_By",
                "sql": "CREATE TABLE Win_By\n(\n    Win_Id   INTEGER\n            primary key,\n    Win_Type TEXT\n)"
            },
            {
                "name": "Match",
                "sql": "CREATE TABLE Match\n(\n    Match_Id         INTEGER\n            primary key,\n    Team_1           INTEGER,\n    Team_2           INTEGER,\n    Match_Date       DATE,\n    Season_Id        INTEGER,\n    Venue_Id         INTEGER,\n    Toss_Winner      INTEGER,\n    Toss_Decide      INTEGER,\n    Win_Type         INTEGER,\n    Win_Margin       INTEGER,\n    Outcome_type     INTEGER,\n    Match_Winner     INTEGER,\n    Man_of_the_Match INTEGER,\n    foreign key (Team_1) references Team(Team_Id),\n    foreign key (Team_2) references Team(Team_Id),\n    foreign key (Season_Id) references Season(Season_Id),\n    foreign key (Venue_Id) references Venue(Venue_Id),\n    foreign key (Toss_Winner) references Team(Team_Id),\n    foreign key (Toss_Decide) references Toss_Decision(Toss_Id),\n    foreign key (Win_Type) references Win_By(Win_Id),\n    foreign key (Outcome_type) references Out_Type(Out_Id),\n    foreign key (Match_Winner) references Team(Team_Id),\n    foreign key (Man_of_the_Match) references Player(Player_Id)\n)"
            },
            {
                "name": "Ball_by_Ball",
                "sql": "CREATE TABLE Ball_by_Ball\n(\n    Match_Id                 INTEGER,\n    Over_Id                  INTEGER,\n    Ball_Id                  INTEGER,\n    Innings_No               INTEGER,\n    Team_Batting             INTEGER,\n    Team_Bowling             INTEGER,\n    Striker_Batting_Position INTEGER,\n    Striker                  INTEGER,\n    Non_Striker              INTEGER,\n    Bowler                   INTEGER,\n    primary key (Match_Id, Over_Id, Ball_Id, Innings_No),\n    foreign key (Match_Id) references Match(Match_Id)\n)"
            },
            {
                "name": "Batsman_Scored",
                "sql": "CREATE TABLE Batsman_Scored\n(\n    Match_Id    INTEGER,\n    Over_Id     INTEGER,\n    Ball_Id     INTEGER,\n    Runs_Scored INTEGER,\n    Innings_No  INTEGER,\n    primary key (Match_Id, Over_Id, Ball_Id, Innings_No),\n    foreign key (Match_Id) references Match(Match_Id)\n)"
            },
            {
                "name": "Player_Match",
                "sql": "CREATE TABLE Player_Match\n(\n    Match_Id  INTEGER,\n    Player_Id INTEGER,\n    Role_Id   INTEGER,\n    Team_Id   INTEGER,\n    primary key (Match_Id, Player_Id, Role_Id),\n    foreign key (Match_Id) references Match(Match_Id),\n    foreign key (Player_Id) references Player(Player_Id),\n    foreign key (Team_Id) references Team(Team_Id),\n    foreign key (Role_Id) references Rolee(Role_Id)\n)"
            },
            {
                "name": "Wicket_Taken",
                "sql": "CREATE TABLE Wicket_Taken\n(\n    Match_Id   INTEGER,\n    Over_Id    INTEGER,\n    Ball_Id    INTEGER,\n    Player_Out INTEGER,\n    Kind_Out   INTEGER,\n    Fielders   INTEGER,\n    Innings_No INTEGER,\n    primary key (Match_Id, Over_Id, Ball_Id, Innings_No),\n    foreign key (Match_Id) references Match(Match_Id),\n    foreign key (Player_Out) references Player(Player_Id),\n    foreign key (Kind_Out) references Out_Type(Out_Id),\n    foreign key (Fielders) references Player(Player_Id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "soccer_2016",
            "toxicology",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "trains",
            "sales_in_weather",
            "menu",
            "disney",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "cookbook_ext",
        "tables": [
            {
                "name": "Ingredient",
                "sql": "CREATE TABLE Ingredient\n(\n    ingredient_id INTEGER\n            primary key,\n    category      TEXT,\n    name          TEXT,\n    plural        TEXT\n)"
            },
            {
                "name": "Recipe",
                "sql": "CREATE TABLE Recipe\n(\n    recipe_id  INTEGER\n            primary key,\n    title      TEXT,\n    subtitle   TEXT,\n    servings   INTEGER,\n    yield_unit TEXT,\n    prep_min   INTEGER,\n    cook_min   INTEGER,\n    stnd_min   INTEGER,\n    source     TEXT,\n    intro      TEXT,\n    directions TEXT\n)"
            },
            {
                "name": "Nutrition",
                "sql": "CREATE TABLE Nutrition\n(\n    recipe_id     INTEGER\n            primary key,\n    protein       REAL,\n    carbo         REAL,\n    alcohol       REAL,\n    total_fat     REAL,\n    sat_fat       REAL,\n    cholestrl     REAL,\n    sodium        REAL,\n    iron          REAL,\n    vitamin_c     REAL,\n    vitamin_a     REAL,\n    fiber         REAL,\n    pcnt_cal_carb REAL,\n    pcnt_cal_fat  REAL,\n    pcnt_cal_prot REAL,\n    calories      REAL,\n    foreign key (recipe_id) references Recipe(recipe_id)\n)"
            },
            {
                "name": "Quantity",
                "sql": "CREATE TABLE Quantity\n(\n    quantity_id   INTEGER\n            primary key,\n    recipe_id     INTEGER,\n    ingredient_id INTEGER,\n    max_qty       REAL,\n    min_qty       REAL,\n    unit          TEXT,\n    preparation   TEXT,\n    optional      TEXT,\n    foreign key (recipe_id) references Recipe(recipe_id),\n    foreign key (ingredient_id) references Ingredient(ingredient_id),\n    foreign key (recipe_id) references Nutrition(recipe_id)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "cookbook",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "movie_platform"
        ]
    },
    {
        "name": "image_and_language_ext",
        "tables": [
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "image_and_language",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "retails_ext",
        "tables": [
            {
                "name": "customer",
                "sql": "CREATE TABLE `customer` (\n  `c_custkey` INTEGER NOT NULL,\n  `c_mktsegment` TEXT DEFAULT NULL,\n  `c_nationkey` INTEGER DEFAULT NULL,\n  `c_name` TEXT DEFAULT NULL,\n  `c_address` TEXT DEFAULT NULL,\n  `c_phone` TEXT DEFAULT NULL,\n  `c_acctbal` REAL DEFAULT NULL,\n  `c_comment` TEXT DEFAULT NULL,\n  PRIMARY KEY (`c_custkey`),\n  FOREIGN KEY (`c_nationkey`) REFERENCES `nation` (`n_nationkey`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "lineitem",
                "sql": "CREATE TABLE lineitem\n(\n    l_shipdate      DATE           null,\n    l_orderkey      INTEGER         not null,\n    l_discount      REAL not null,\n    l_extendedprice REAL not null,\n    l_suppkey       INTEGER            not null,\n    l_quantity      INTEGER         not null,\n    l_returnflag    TEXT           null,\n    l_partkey       INTEGER         not null,\n    l_linestatus    TEXT           null,\n    l_tax           REAL not null,\n    l_commitdate    DATE           null,\n    l_receiptdate   DATE           null,\n    l_shipmode      TEXT       null,\n    l_linenumber    INTEGER         not null,\n    l_shipinstruct  TEXT       null,\n    l_comment       TEXT    null,\n    primary key (l_orderkey, l_linenumber),\n    foreign key (l_orderkey) references orders (o_orderkey)\n            on update cascade on delete cascade,\n    foreign key (l_partkey, l_suppkey) references partsupp (ps_partkey, ps_suppkey)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "nation",
                "sql": "CREATE TABLE nation\n(\n    n_nationkey INTEGER          not null\n        primary key,\n    n_name      TEXT     null,\n    n_regionkey INTEGER          null,\n    n_comment   TEXT null,\n    foreign key (n_regionkey) references region (r_regionkey)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "orders",
                "sql": "CREATE TABLE orders\n(\n    o_orderdate     DATE           null,\n    o_orderkey      INTEGER         not null\n        primary key,\n    o_custkey       INTEGER         not null,\n    o_orderpriority TEXT       null,\n    o_shippriority  INTEGER            null,\n    o_clerk         TEXT       null,\n    o_orderstatus   TEXT           null,\n    o_totalprice    REAL null,\n    o_comment       TEXT    null,\n    foreign key (o_custkey) references customer (c_custkey)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "part",
                "sql": "CREATE TABLE part\n(\n    p_partkey     INTEGER         not null\n        primary key,\n    p_type        TEXT    null,\n    p_size        INTEGER            null,\n    p_brand       TEXT       null,\n    p_name        TEXT    null,\n    p_container   TEXT       null,\n    p_mfgr        TEXT       null,\n    p_retailprice REAL null,\n    p_comment     TEXT    null\n)"
            },
            {
                "name": "partsupp",
                "sql": "CREATE TABLE partsupp\n(\n    ps_partkey    INTEGER         not null,\n    ps_suppkey    INTEGER            not null,\n    ps_supplycost REAL not null,\n    ps_availqty   INTEGER            null,\n    ps_comment    TEXT   null,\n    primary key (ps_partkey, ps_suppkey),\n    foreign key (ps_partkey) references part (p_partkey)\n            on update cascade on delete cascade,\n    foreign key (ps_suppkey) references supplier (s_suppkey)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "region",
                "sql": "CREATE TABLE region\n(\n    r_regionkey INTEGER          not null\n        primary key,\n    r_name      TEXT     null,\n    r_comment   TEXT null\n)"
            },
            {
                "name": "supplier",
                "sql": "CREATE TABLE supplier\n(\n    s_suppkey   INTEGER            not null\n        primary key,\n    s_nationkey INTEGER            null,\n    s_comment   TEXT   null,\n    s_name      TEXT       null,\n    s_address   TEXT    null,\n    s_phone     TEXT       null,\n    s_acctbal   REAL null,\n    foreign key (s_nationkey) references nation (n_nationkey)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "all_prevalences",
                "sql": "CREATE TABLE all_prevalences\n(\n    ITEM                    TEXT\n            primary key,\n    \"POPULATION TYPE\"       TEXT,\n    OCCURRENCES             INTEGER,\n    \"POPULATION COUNT\"      INTEGER,\n    \"PREVALENCE RATE\"       REAL,\n    \"PREVALENCE PERCENTAGE\" REAL\n)"
            },
            {
                "name": "patients",
                "sql": "CREATE TABLE patients\n(\n    patient    TEXT\n            primary key,\n    birthdate  DATE,\n    deathdate  DATE,\n    ssn        TEXT,\n    drivers    TEXT,\n    passport   TEXT,\n    prefix     TEXT,\n    first      TEXT,\n    last       TEXT,\n    suffix     TEXT,\n    maiden     TEXT,\n    marital    TEXT,\n    race       TEXT,\n    ethnicity  TEXT,\n    gender     TEXT,\n    birthplace TEXT,\n    address    TEXT\n)"
            },
            {
                "name": "encounters",
                "sql": "CREATE TABLE encounters\n(\n    ID                TEXT\n            primary key,\n    DATE              DATE,\n    PATIENT           TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "allergies",
                "sql": "CREATE TABLE allergies\n(\n    START       TEXT,\n    STOP        TEXT,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "careplans",
                "sql": "CREATE TABLE careplans\n(\n    ID                TEXT,\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              REAL,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "conditions",
                "sql": "CREATE TABLE conditions\n(\n    START       DATE,\n    STOP        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient),\n    foreign key (DESCRIPTION) references all_prevalences(ITEM)\n)"
            },
            {
                "name": "immunizations",
                "sql": "CREATE TABLE immunizations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (DATE, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "medications",
                "sql": "CREATE TABLE medications\n(\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    primary key (START, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "observations",
                "sql": "CREATE TABLE observations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        TEXT,\n    DESCRIPTION TEXT,\n    VALUE       REAL,\n    UNITS       TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "procedures",
                "sql": "CREATE TABLE procedures\n(\n    DATE              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "claims",
                "sql": "CREATE TABLE \"claims\"\n(\n    ID             TEXT\n        primary key,\n    PATIENT        TEXT\n        references patients,\n    BILLABLEPERIOD DATE,\n    ORGANIZATION   TEXT,\n    ENCOUNTER      TEXT\n        references encounters,\n    DIAGNOSIS      TEXT,\n    TOTAL          INTEGER\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "course",
                "sql": "CREATE TABLE course\n(\n    course_id   INTEGER\n        constraint course_pk\n            primary key,\n    courseLevel TEXT\n)"
            },
            {
                "name": "person",
                "sql": "CREATE TABLE person\n(\n    p_id           INTEGER\n        constraint person_pk\n            primary key,\n    professor      INTEGER,\n    student        INTEGER,\n    hasPosition    TEXT,\n    inPhase        TEXT,\n    yearsInProgram TEXT\n)"
            },
            {
                "name": "advisedBy",
                "sql": "CREATE TABLE \"advisedBy\"\n(\n    p_id       INTEGER,\n    p_id_dummy INTEGER,\n    constraint advisedBy_pk\n        primary key (p_id, p_id_dummy),\n    constraint advisedBy_person_p_id_p_id_fk\n        foreign key (p_id, p_id_dummy) references person (p_id, p_id)\n)"
            },
            {
                "name": "taughtBy",
                "sql": "CREATE TABLE taughtBy\n(\n    course_id INTEGER,\n    p_id      INTEGER,\n    primary key (course_id, p_id),\n    foreign key (p_id) references person(p_id),\n    foreign key (course_id) references course(course_id)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "retails",
            "toxicology",
            "student_club",
            "superhero",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "synthea",
            "airline",
            "image_and_language",
            "college_completion",
            "world",
            "trains",
            "computer_student",
            "ice_hockey_draft",
            "sales_in_weather",
            "food_inspection",
            "movie_platform"
        ]
    },
    {
        "name": "software_company_ext",
        "tables": [
            {
                "name": "Demog",
                "sql": "CREATE TABLE Demog\n(\n    GEOID         INTEGER\n        constraint Demog_pk\n            primary key,\n    INHABITANTS_K REAL,\n    INCOME_K      REAL,\n    A_VAR1        REAL,\n    A_VAR2        REAL,\n    A_VAR3        REAL,\n    A_VAR4        REAL,\n    A_VAR5        REAL,\n    A_VAR6        REAL,\n    A_VAR7        REAL,\n    A_VAR8        REAL,\n    A_VAR9        REAL,\n    A_VAR10       REAL,\n    A_VAR11       REAL,\n    A_VAR12       REAL,\n    A_VAR13       REAL,\n    A_VAR14       REAL,\n    A_VAR15       REAL,\n    A_VAR16       REAL,\n    A_VAR17       REAL,\n    A_VAR18       REAL\n)"
            },
            {
                "name": "mailings3",
                "sql": "CREATE TABLE mailings3\n(\n    REFID    INTEGER\n        constraint mailings3_pk\n            primary key,\n    REF_DATE DATETIME,\n    RESPONSE TEXT\n)"
            },
            {
                "name": "Customers",
                "sql": "CREATE TABLE \"Customers\"\n(\n    ID             INTEGER\n        constraint Customers_pk\n            primary key,\n    SEX            TEXT,\n    MARITAL_STATUS TEXT,\n    GEOID          INTEGER\n        constraint Customers_Demog_GEOID_fk\n            references Demog,\n    EDUCATIONNUM   INTEGER,\n    OCCUPATION     TEXT,\n    age            INTEGER\n)"
            },
            {
                "name": "Mailings1_2",
                "sql": "CREATE TABLE \"Mailings1_2\"\n(\n    REFID    INTEGER\n        constraint Mailings1_2_pk\n            primary key\n        constraint Mailings1_2_Customers_ID_fk\n            references Customers,\n    REF_DATE DATETIME,\n    RESPONSE TEXT\n)"
            },
            {
                "name": "Sales",
                "sql": "CREATE TABLE \"Sales\"\n(\n    EVENTID    INTEGER\n        constraint Sales_pk\n            primary key,\n    REFID      INTEGER\n        references Customers,\n    EVENT_DATE DATETIME,\n    AMOUNT     REAL\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "course",
                "sql": "CREATE TABLE \"course\"\n(\n    course_id INTEGER\n        constraint course_pk\n            primary key,\n    name      TEXT,\n    credit    INTEGER,\n    diff      INTEGER\n)"
            },
            {
                "name": "prof",
                "sql": "CREATE TABLE prof\n(\n    prof_id         INTEGER\n        constraint prof_pk\n            primary key,\n    gender          TEXT,\n    first_name      TEXT,\n    last_name       TEXT,\n    email           TEXT,\n    popularity      INTEGER,\n    teachingability INTEGER,\n    graduate_from   TEXT\n)"
            },
            {
                "name": "RA",
                "sql": "CREATE TABLE RA\n(\n    student_id INTEGER,\n    capability INTEGER,\n    prof_id    INTEGER,\n    salary     TEXT,\n    primary key (student_id, prof_id),\n    foreign key (prof_id) references prof(prof_id),\n    foreign key (student_id) references student(student_id)\n)"
            },
            {
                "name": "registration",
                "sql": "CREATE TABLE registration\n(\n    course_id  INTEGER,\n    student_id INTEGER,\n    grade      TEXT,\n    sat        INTEGER,\n    primary key (course_id, student_id),\n    foreign key (course_id) references course(course_id),\n    foreign key (student_id) references student(student_id)\n)"
            },
            {
                "name": "student",
                "sql": "CREATE TABLE student\n(\n    student_id   INTEGER\n            primary key,\n    f_name       TEXT,\n    l_name       TEXT,\n    phone_number TEXT,\n    email        TEXT,\n    intelligence INTEGER,\n    gpa          REAL,\n    type         TEXT\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "software_company",
            "toxicology",
            "superhero",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "cs_semester",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "food_inspection",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "professional_basketball_ext",
        "tables": [
            {
                "name": "awards_players",
                "sql": "CREATE TABLE awards_players\n(\n    playerID TEXT not null,\n    award    TEXT not null,\n    year     INTEGER          not null,\n    lgID     TEXT null,\n    note     TEXT null,\n    pos      TEXT null,\n    primary key (playerID, year, award),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "coaches",
                "sql": "CREATE TABLE coaches\n(\n    coachID     TEXT not null,\n    year        INTEGER          not null,\n    tmID        TEXT not null,\n    lgID        TEXT null,\n    stint       INTEGER          not null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    post_wins   INTEGER          null,\n    post_losses INTEGER          null,\n    primary key (coachID, year, tmID, stint),\n    foreign key (tmID, year) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "draft",
                "sql": "CREATE TABLE draft\n(\n    id             INTEGER default 0 not null\n        primary key,\n    draftYear      INTEGER           null,\n    draftRound     INTEGER           null,\n    draftSelection INTEGER           null,\n    draftOverall   INTEGER          null,\n    tmID           TEXT  null,\n    firstName      TEXT  null,\n    lastName       TEXT  null,\n    suffixName     TEXT  null,\n    playerID       TEXT  null,\n    draftFrom      TEXT  null,\n    lgID           TEXT  null,\n    foreign key (tmID, draftYear) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "player_allstar",
                "sql": "CREATE TABLE player_allstar\n(\n    playerID        TEXT not null,\n    last_name       TEXT null,\n    first_name      TEXT null,\n    season_id       INTEGER          not null,\n    conference      TEXT null,\n    league_id       TEXT null,\n    games_played    INTEGER          null,\n    minutes         INTEGER          null,\n    points          INTEGER          null,\n    o_rebounds      INTEGER          null,\n    d_rebounds      INTEGER          null,\n    rebounds        INTEGER          null,\n    assists         INTEGER          null,\n    steals          INTEGER          null,\n    blocks          INTEGER          null,\n    turnovers       INTEGER          null,\n    personal_fouls  INTEGER          null,\n    fg_attempted    INTEGER          null,\n    fg_made         INTEGER          null,\n    ft_attempted    INTEGER          null,\n    ft_made         INTEGER          null,\n    three_attempted INTEGER          null,\n    three_made      INTEGER          null,\n    primary key (playerID, season_id),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "players",
                "sql": "CREATE TABLE players\n(\n    playerID      TEXT not null\n        primary key,\n    useFirst      TEXT null,\n    firstName     TEXT null,\n    middleName    TEXT null,\n    lastName      TEXT null,\n    nameGiven     TEXT null,\n    fullGivenName TEXT null,\n    nameSuffix    TEXT null,\n    nameNick      TEXT null,\n    pos           TEXT null,\n    firstseason   INTEGER          null,\n    lastseason    INTEGER         null,\n    height        REAL        null,\n    weight        INTEGER         null,\n    college       TEXT null,\n    collegeOther  TEXT null,\n    birthDate     DATE         null,\n    birthCity     TEXT null,\n    birthState    TEXT null,\n    birthCountry  TEXT null,\n    highSchool    TEXT null,\n    hsCity        TEXT null,\n    hsState       TEXT null,\n    hsCountry     TEXT null,\n    deathDate     DATE         null,\n    race          TEXT null\n)"
            },
            {
                "name": "teams",
                "sql": "CREATE TABLE teams\n(\n    year        INTEGER          not null,\n    lgID        TEXT null,\n    tmID        TEXT not null,\n    franchID    TEXT null,\n    confID      TEXT null,\n    divID       TEXT null,\n    `rank`      INTEGER          null,\n    confRank    INTEGER          null,\n    playoff     TEXT null,\n    name        TEXT null,\n    o_fgm       INTEGER          null,\n--     o_fga       int          null,\n    o_ftm       INTEGER          null,\n--     o_fta       int          null,\n--     o_3pm       int          null,\n--     o_3pa       int          null,\n--     o_oreb      int          null,\n--     o_dreb      int          null,\n--     o_reb       int          null,\n--     o_asts      int          null,\n--     o_pf        int          null,\n--     o_stl       int          null,\n--     o_to        int          null,\n--     o_blk       int          null,\n     o_pts       INTEGER          null,\n--     d_fgm       int          null,\n--     d_fga       int          null,\n--     d_ftm       int          null,\n--     d_fta       int          null,\n--     d_3pm       int          null,\n--     d_3pa       int          null,\n--     d_oreb      int          null,\n--     d_dreb      int          null,\n--     d_reb       int          null,\n--     d_asts      int          null,\n--     d_pf        int          null,\n--     d_stl       int          null,\n--     d_to        int          null,\n--     d_blk       int          null,\n     d_pts       INTEGER          null,\n--     o_tmRebound int          null,\n--     d_tmRebound int          null,\n    homeWon     INTEGER          null,\n    homeLost    INTEGER          null,\n    awayWon     INTEGER          null,\n    awayLost    INTEGER          null,\n--     neutWon     int          null,\n--     neutLoss    int          null,\n--     confWon     int          null,\n--     confLoss    int          null,\n--     divWon      int          null,\n--     divLoss     int          null,\n--     pace        int          null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    games       INTEGER          null,\n--     min         int          null,\n    arena       TEXT null,\n--     attendance  int          null,\n--     bbtmID      varchar(255) null,\n    primary key (year, tmID)\n)"
            },
            {
                "name": "awards_coaches",
                "sql": "CREATE TABLE \"awards_coaches\"\n(\n    id      INTEGER\n        primary key autoincrement,\n    year    INTEGER,\n    coachID TEXT,\n    award   TEXT,\n    lgID    TEXT,\n    note    TEXT,\n    foreign key (coachID, year) references coaches (coachID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "players_teams",
                "sql": "CREATE TABLE \"players_teams\"\n(\n    id                 INTEGER\n        primary key autoincrement,\n    playerID           TEXT not null\n        references players\n            on update cascade on delete cascade,\n    year               INTEGER,\n    stint              INTEGER,\n    tmID               TEXT,\n    lgID               TEXT,\n    GP                 INTEGER,\n    GS                 INTEGER,\n    minutes            INTEGER,\n    points             INTEGER,\n    oRebounds          INTEGER,\n    dRebounds          INTEGER,\n    rebounds           INTEGER,\n    assists            INTEGER,\n    steals             INTEGER,\n    blocks             INTEGER,\n    turnovers          INTEGER,\n    PF                 INTEGER,\n    fgAttempted        INTEGER,\n    fgMade             INTEGER,\n    ftAttempted        INTEGER,\n    ftMade             INTEGER,\n    threeAttempted     INTEGER,\n    threeMade          INTEGER,\n    PostGP             INTEGER,\n    PostGS             INTEGER,\n    PostMinutes        INTEGER,\n    PostPoints         INTEGER,\n    PostoRebounds      INTEGER,\n    PostdRebounds      INTEGER,\n    PostRebounds       INTEGER,\n    PostAssists        INTEGER,\n    PostSteals         INTEGER,\n    PostBlocks         INTEGER,\n    PostTurnovers      INTEGER,\n    PostPF             INTEGER,\n    PostfgAttempted    INTEGER,\n    PostfgMade         INTEGER,\n    PostftAttempted    INTEGER,\n    PostftMade         INTEGER,\n    PostthreeAttempted INTEGER,\n    PostthreeMade      INTEGER,\n    note               TEXT,\n    foreign key (tmID, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "series_post",
                "sql": "CREATE TABLE \"series_post\"\n(\n    id         INTEGER\n        primary key autoincrement,\n    year       INTEGER,\n    round      TEXT,\n    series     TEXT,\n    tmIDWinner TEXT,\n    lgIDWinner TEXT,\n    tmIDLoser  TEXT,\n    lgIDLoser  TEXT,\n    W          INTEGER,\n    L          INTEGER,\n    foreign key (tmIDWinner, year) references teams (tmID, year)\n        on update cascade on delete cascade,\n    foreign key (tmIDLoser, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "langs",
                "sql": "CREATE TABLE langs(lid    INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lang   TEXT UNIQUE,\n                            locale TEXT UNIQUE,\n                            pages  INTEGER DEFAULT 0,  -- total pages in this language\n                            words  INTEGER DEFAULT 0)"
            },
            {
                "name": "pages",
                "sql": "CREATE TABLE pages(pid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                            page INTEGER DEFAULT NULL, -- wikipedia page id\n                            revision INTEGER DEFAULT NULL, -- wikipedia revision page id\n                            title TEXT,\n                            words INTEGER DEFAULT 0, -- number of different words in this page\n                            UNIQUE(lid,page,title))"
            },
            {
                "name": "words",
                "sql": "CREATE TABLE words(wid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            word        TEXT UNIQUE,\n                            occurrences INTEGER DEFAULT 0)"
            },
            {
                "name": "langs_words",
                "sql": "CREATE TABLE langs_words(lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER, -- repetitions of this word in this language\n                                        PRIMARY KEY(lid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "pages_words",
                "sql": "CREATE TABLE pages_words(pid INTEGER REFERENCES pages(pid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER DEFAULT 0, -- times this word appears into this page\n                                        PRIMARY KEY(pid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "biwords",
                "sql": "CREATE TABLE biwords(lid    INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w1st   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w2nd   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                occurrences INTEGER DEFAULT 0, -- times this pair appears in this language/page\n                                PRIMARY KEY(lid,w1st,w2nd))\n                                WITHOUT ROWID"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "breweries",
                "sql": "CREATE TABLE breweries\n(\n    id    INTEGER          not null\n        primary key,\n    name  TEXT null,\n    city  TEXT null,\n    state TEXT null\n)"
            },
            {
                "name": "beers",
                "sql": "CREATE TABLE \"beers\"\n(\n    id         INTEGER not null\n        primary key,\n    brewery_id INTEGER not null\n        constraint beers_ibfk_1\n            references breweries,\n    abv        REAL,\n    ibu        REAL,\n    name       TEXT    not null,\n    style      TEXT,\n    ounces     REAL    not null\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "professional_basketball",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "world",
            "restaurant",
            "language_corpus",
            "trains",
            "sales_in_weather",
            "craftbeer",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "coinmarketcap_ext",
        "tables": [
            {
                "name": "coins",
                "sql": "CREATE TABLE coins\n(\n    id            INTEGER not null\n        primary key,\n    name          TEXT,\n    slug          TEXT,\n    symbol        TEXT,\n    status        TEXT,\n    category      TEXT,\n    description   TEXT,\n    subreddit     TEXT,\n    notice        TEXT,\n    tags          TEXT,\n    tag_names     TEXT,\n    website       TEXT,\n    platform_id   INTEGER,\n    date_added    TEXT,\n    date_launched TEXT\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE \"historical\"\n(\n    date               DATE,\n    coin_id            INTEGER,\n    cmc_rank           INTEGER,\n    market_cap         REAL,\n    price              REAL,\n    open               REAL,\n    high               REAL,\n    low                REAL,\n    close              REAL,\n    time_high          TEXT,\n    time_low           TEXT,\n    volume_24h         REAL,\n    percent_change_1h  REAL,\n    percent_change_24h REAL,\n    percent_change_7d  REAL,\n    circulating_supply REAL,\n    total_supply       REAL,\n    max_supply         REAL,\n    num_market_pairs   INTEGER\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "awards_players",
                "sql": "CREATE TABLE awards_players\n(\n    playerID TEXT not null,\n    award    TEXT not null,\n    year     INTEGER          not null,\n    lgID     TEXT null,\n    note     TEXT null,\n    pos      TEXT null,\n    primary key (playerID, year, award),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "coaches",
                "sql": "CREATE TABLE coaches\n(\n    coachID     TEXT not null,\n    year        INTEGER          not null,\n    tmID        TEXT not null,\n    lgID        TEXT null,\n    stint       INTEGER          not null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    post_wins   INTEGER          null,\n    post_losses INTEGER          null,\n    primary key (coachID, year, tmID, stint),\n    foreign key (tmID, year) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "draft",
                "sql": "CREATE TABLE draft\n(\n    id             INTEGER default 0 not null\n        primary key,\n    draftYear      INTEGER           null,\n    draftRound     INTEGER           null,\n    draftSelection INTEGER           null,\n    draftOverall   INTEGER          null,\n    tmID           TEXT  null,\n    firstName      TEXT  null,\n    lastName       TEXT  null,\n    suffixName     TEXT  null,\n    playerID       TEXT  null,\n    draftFrom      TEXT  null,\n    lgID           TEXT  null,\n    foreign key (tmID, draftYear) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "player_allstar",
                "sql": "CREATE TABLE player_allstar\n(\n    playerID        TEXT not null,\n    last_name       TEXT null,\n    first_name      TEXT null,\n    season_id       INTEGER          not null,\n    conference      TEXT null,\n    league_id       TEXT null,\n    games_played    INTEGER          null,\n    minutes         INTEGER          null,\n    points          INTEGER          null,\n    o_rebounds      INTEGER          null,\n    d_rebounds      INTEGER          null,\n    rebounds        INTEGER          null,\n    assists         INTEGER          null,\n    steals          INTEGER          null,\n    blocks          INTEGER          null,\n    turnovers       INTEGER          null,\n    personal_fouls  INTEGER          null,\n    fg_attempted    INTEGER          null,\n    fg_made         INTEGER          null,\n    ft_attempted    INTEGER          null,\n    ft_made         INTEGER          null,\n    three_attempted INTEGER          null,\n    three_made      INTEGER          null,\n    primary key (playerID, season_id),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "players",
                "sql": "CREATE TABLE players\n(\n    playerID      TEXT not null\n        primary key,\n    useFirst      TEXT null,\n    firstName     TEXT null,\n    middleName    TEXT null,\n    lastName      TEXT null,\n    nameGiven     TEXT null,\n    fullGivenName TEXT null,\n    nameSuffix    TEXT null,\n    nameNick      TEXT null,\n    pos           TEXT null,\n    firstseason   INTEGER          null,\n    lastseason    INTEGER         null,\n    height        REAL        null,\n    weight        INTEGER         null,\n    college       TEXT null,\n    collegeOther  TEXT null,\n    birthDate     DATE         null,\n    birthCity     TEXT null,\n    birthState    TEXT null,\n    birthCountry  TEXT null,\n    highSchool    TEXT null,\n    hsCity        TEXT null,\n    hsState       TEXT null,\n    hsCountry     TEXT null,\n    deathDate     DATE         null,\n    race          TEXT null\n)"
            },
            {
                "name": "teams",
                "sql": "CREATE TABLE teams\n(\n    year        INTEGER          not null,\n    lgID        TEXT null,\n    tmID        TEXT not null,\n    franchID    TEXT null,\n    confID      TEXT null,\n    divID       TEXT null,\n    `rank`      INTEGER          null,\n    confRank    INTEGER          null,\n    playoff     TEXT null,\n    name        TEXT null,\n    o_fgm       INTEGER          null,\n--     o_fga       int          null,\n    o_ftm       INTEGER          null,\n--     o_fta       int          null,\n--     o_3pm       int          null,\n--     o_3pa       int          null,\n--     o_oreb      int          null,\n--     o_dreb      int          null,\n--     o_reb       int          null,\n--     o_asts      int          null,\n--     o_pf        int          null,\n--     o_stl       int          null,\n--     o_to        int          null,\n--     o_blk       int          null,\n     o_pts       INTEGER          null,\n--     d_fgm       int          null,\n--     d_fga       int          null,\n--     d_ftm       int          null,\n--     d_fta       int          null,\n--     d_3pm       int          null,\n--     d_3pa       int          null,\n--     d_oreb      int          null,\n--     d_dreb      int          null,\n--     d_reb       int          null,\n--     d_asts      int          null,\n--     d_pf        int          null,\n--     d_stl       int          null,\n--     d_to        int          null,\n--     d_blk       int          null,\n     d_pts       INTEGER          null,\n--     o_tmRebound int          null,\n--     d_tmRebound int          null,\n    homeWon     INTEGER          null,\n    homeLost    INTEGER          null,\n    awayWon     INTEGER          null,\n    awayLost    INTEGER          null,\n--     neutWon     int          null,\n--     neutLoss    int          null,\n--     confWon     int          null,\n--     confLoss    int          null,\n--     divWon      int          null,\n--     divLoss     int          null,\n--     pace        int          null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    games       INTEGER          null,\n--     min         int          null,\n    arena       TEXT null,\n--     attendance  int          null,\n--     bbtmID      varchar(255) null,\n    primary key (year, tmID)\n)"
            },
            {
                "name": "awards_coaches",
                "sql": "CREATE TABLE \"awards_coaches\"\n(\n    id      INTEGER\n        primary key autoincrement,\n    year    INTEGER,\n    coachID TEXT,\n    award   TEXT,\n    lgID    TEXT,\n    note    TEXT,\n    foreign key (coachID, year) references coaches (coachID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "players_teams",
                "sql": "CREATE TABLE \"players_teams\"\n(\n    id                 INTEGER\n        primary key autoincrement,\n    playerID           TEXT not null\n        references players\n            on update cascade on delete cascade,\n    year               INTEGER,\n    stint              INTEGER,\n    tmID               TEXT,\n    lgID               TEXT,\n    GP                 INTEGER,\n    GS                 INTEGER,\n    minutes            INTEGER,\n    points             INTEGER,\n    oRebounds          INTEGER,\n    dRebounds          INTEGER,\n    rebounds           INTEGER,\n    assists            INTEGER,\n    steals             INTEGER,\n    blocks             INTEGER,\n    turnovers          INTEGER,\n    PF                 INTEGER,\n    fgAttempted        INTEGER,\n    fgMade             INTEGER,\n    ftAttempted        INTEGER,\n    ftMade             INTEGER,\n    threeAttempted     INTEGER,\n    threeMade          INTEGER,\n    PostGP             INTEGER,\n    PostGS             INTEGER,\n    PostMinutes        INTEGER,\n    PostPoints         INTEGER,\n    PostoRebounds      INTEGER,\n    PostdRebounds      INTEGER,\n    PostRebounds       INTEGER,\n    PostAssists        INTEGER,\n    PostSteals         INTEGER,\n    PostBlocks         INTEGER,\n    PostTurnovers      INTEGER,\n    PostPF             INTEGER,\n    PostfgAttempted    INTEGER,\n    PostfgMade         INTEGER,\n    PostftAttempted    INTEGER,\n    PostftMade         INTEGER,\n    PostthreeAttempted INTEGER,\n    PostthreeMade      INTEGER,\n    note               TEXT,\n    foreign key (tmID, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "series_post",
                "sql": "CREATE TABLE \"series_post\"\n(\n    id         INTEGER\n        primary key autoincrement,\n    year       INTEGER,\n    round      TEXT,\n    series     TEXT,\n    tmIDWinner TEXT,\n    lgIDWinner TEXT,\n    tmIDLoser  TEXT,\n    lgIDLoser  TEXT,\n    W          INTEGER,\n    L          INTEGER,\n    foreign key (tmIDWinner, year) references teams (tmID, year)\n        on update cascade on delete cascade,\n    foreign key (tmIDLoser, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "coinmarketcap",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "airline",
            "shooting",
            "image_and_language",
            "professional_basketball",
            "college_completion",
            "world",
            "restaurant",
            "trains",
            "sales_in_weather",
            "menu",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "college_completion_ext",
        "tables": [
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "college_completion",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "european_football_1_ext",
        "tables": [
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "european_football_1",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "retail_complains_ext",
        "tables": [
            {
                "name": "state",
                "sql": "CREATE TABLE state\n(\n    StateCode TEXT\n        constraint state_pk\n            primary key,\n    State     TEXT,\n    Region    TEXT\n)"
            },
            {
                "name": "callcenterlogs",
                "sql": "CREATE TABLE callcenterlogs\n(\n    \"Date received\" DATE,\n    \"Complaint ID\"  TEXT,\n    \"rand client\"   TEXT,\n    phonefinal      TEXT,\n    \"vru+line\"      TEXT,\n    call_id         INTEGER,\n    priority        INTEGER,\n    type            TEXT,\n    outcome         TEXT,\n    server          TEXT,\n    ser_start       TEXT,\n    ser_exit        TEXT,\n    ser_time        TEXT,\n    primary key (\"Complaint ID\"),\n    foreign key (\"rand client\") references client(client_id)\n)"
            },
            {
                "name": "client",
                "sql": "CREATE TABLE client\n(\n    client_id   TEXT\n            primary key,\n    sex         TEXT,\n    day         INTEGER,\n    month       INTEGER,\n    year        INTEGER,\n    age         INTEGER,\n    social      TEXT,\n    first       TEXT,\n    middle      TEXT,\n    last        TEXT,\n    phone       TEXT,\n    email       TEXT,\n    address_1   TEXT,\n    address_2   TEXT,\n    city        TEXT,\n    state       TEXT,\n    zipcode     INTEGER,\n    district_id INTEGER,\n    foreign key (district_id) references district(district_id)\n)"
            },
            {
                "name": "district",
                "sql": "CREATE TABLE district\n(\n    district_id  INTEGER\n            primary key,\n    city         TEXT,\n    state_abbrev TEXT,\n    division     TEXT,\n    foreign key (state_abbrev) references state(StateCode)\n)"
            },
            {
                "name": "events",
                "sql": "CREATE TABLE events\n(\n    \"Date received\"                DATE,\n    Product                        TEXT,\n    \"Sub-product\"                  TEXT,\n    Issue                          TEXT,\n    \"Sub-issue\"                    TEXT,\n    \"Consumer complaint narrative\" TEXT,\n    Tags                           TEXT,\n    \"Consumer consent provided?\"   TEXT,\n    \"Submitted via\"                TEXT,\n    \"Date sent to company\"         TEXT,\n    \"Company response to consumer\" TEXT,\n    \"Timely response?\"             TEXT,\n    \"Consumer disputed?\"           TEXT,\n    \"Complaint ID\"                 TEXT,\n    Client_ID                      TEXT,\n    primary key (\"Complaint ID\", Client_ID),\n    foreign key (\"Complaint ID\") references callcenterlogs(\"Complaint ID\"),\n    foreign key (Client_ID) references client(client_id)\n)"
            },
            {
                "name": "reviews",
                "sql": "CREATE TABLE reviews\n(\n    \"Date\"        DATE\n            primary key,\n    Stars       INTEGER,\n    Reviews     TEXT,\n    Product     TEXT,\n    district_id INTEGER,\n    foreign key (district_id) references district(district_id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "all_prevalences",
                "sql": "CREATE TABLE all_prevalences\n(\n    ITEM                    TEXT\n            primary key,\n    \"POPULATION TYPE\"       TEXT,\n    OCCURRENCES             INTEGER,\n    \"POPULATION COUNT\"      INTEGER,\n    \"PREVALENCE RATE\"       REAL,\n    \"PREVALENCE PERCENTAGE\" REAL\n)"
            },
            {
                "name": "patients",
                "sql": "CREATE TABLE patients\n(\n    patient    TEXT\n            primary key,\n    birthdate  DATE,\n    deathdate  DATE,\n    ssn        TEXT,\n    drivers    TEXT,\n    passport   TEXT,\n    prefix     TEXT,\n    first      TEXT,\n    last       TEXT,\n    suffix     TEXT,\n    maiden     TEXT,\n    marital    TEXT,\n    race       TEXT,\n    ethnicity  TEXT,\n    gender     TEXT,\n    birthplace TEXT,\n    address    TEXT\n)"
            },
            {
                "name": "encounters",
                "sql": "CREATE TABLE encounters\n(\n    ID                TEXT\n            primary key,\n    DATE              DATE,\n    PATIENT           TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "allergies",
                "sql": "CREATE TABLE allergies\n(\n    START       TEXT,\n    STOP        TEXT,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "careplans",
                "sql": "CREATE TABLE careplans\n(\n    ID                TEXT,\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              REAL,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "conditions",
                "sql": "CREATE TABLE conditions\n(\n    START       DATE,\n    STOP        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient),\n    foreign key (DESCRIPTION) references all_prevalences(ITEM)\n)"
            },
            {
                "name": "immunizations",
                "sql": "CREATE TABLE immunizations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (DATE, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "medications",
                "sql": "CREATE TABLE medications\n(\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    primary key (START, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "observations",
                "sql": "CREATE TABLE observations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        TEXT,\n    DESCRIPTION TEXT,\n    VALUE       REAL,\n    UNITS       TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "procedures",
                "sql": "CREATE TABLE procedures\n(\n    DATE              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "claims",
                "sql": "CREATE TABLE \"claims\"\n(\n    ID             TEXT\n        primary key,\n    PATIENT        TEXT\n        references patients,\n    BILLABLEPERIOD DATE,\n    ORGANIZATION   TEXT,\n    ENCOUNTER      TEXT\n        references encounters,\n    DIAGNOSIS      TEXT,\n    TOTAL          INTEGER\n)"
            },
            {
                "name": "course",
                "sql": "CREATE TABLE \"course\"\n(\n    course_id INTEGER\n        constraint course_pk\n            primary key,\n    name      TEXT,\n    credit    INTEGER,\n    diff      INTEGER\n)"
            },
            {
                "name": "prof",
                "sql": "CREATE TABLE prof\n(\n    prof_id         INTEGER\n        constraint prof_pk\n            primary key,\n    gender          TEXT,\n    first_name      TEXT,\n    last_name       TEXT,\n    email           TEXT,\n    popularity      INTEGER,\n    teachingability INTEGER,\n    graduate_from   TEXT\n)"
            },
            {
                "name": "RA",
                "sql": "CREATE TABLE RA\n(\n    student_id INTEGER,\n    capability INTEGER,\n    prof_id    INTEGER,\n    salary     TEXT,\n    primary key (student_id, prof_id),\n    foreign key (prof_id) references prof(prof_id),\n    foreign key (student_id) references student(student_id)\n)"
            },
            {
                "name": "registration",
                "sql": "CREATE TABLE registration\n(\n    course_id  INTEGER,\n    student_id INTEGER,\n    grade      TEXT,\n    sat        INTEGER,\n    primary key (course_id, student_id),\n    foreign key (course_id) references course(course_id),\n    foreign key (student_id) references student(student_id)\n)"
            },
            {
                "name": "student",
                "sql": "CREATE TABLE student\n(\n    student_id   INTEGER\n            primary key,\n    f_name       TEXT,\n    l_name       TEXT,\n    phone_number TEXT,\n    email        TEXT,\n    intelligence INTEGER,\n    gpa          REAL,\n    type         TEXT\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            }
        ],
        "original": [
            "retail_complains",
            "toxicology",
            "superhero",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "synthea",
            "cs_semester",
            "airline",
            "image_and_language",
            "college_completion",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "food_inspection",
            "menu",
            "disney",
            "music_tracker"
        ]
    },
    {
        "name": "world_ext",
        "tables": [
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "world",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "restaurant_ext",
        "tables": [
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "restaurant",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "language_corpus_ext",
        "tables": [
            {
                "name": "langs",
                "sql": "CREATE TABLE langs(lid    INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lang   TEXT UNIQUE,\n                            locale TEXT UNIQUE,\n                            pages  INTEGER DEFAULT 0,  -- total pages in this language\n                            words  INTEGER DEFAULT 0)"
            },
            {
                "name": "pages",
                "sql": "CREATE TABLE pages(pid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                            page INTEGER DEFAULT NULL, -- wikipedia page id\n                            revision INTEGER DEFAULT NULL, -- wikipedia revision page id\n                            title TEXT,\n                            words INTEGER DEFAULT 0, -- number of different words in this page\n                            UNIQUE(lid,page,title))"
            },
            {
                "name": "words",
                "sql": "CREATE TABLE words(wid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            word        TEXT UNIQUE,\n                            occurrences INTEGER DEFAULT 0)"
            },
            {
                "name": "langs_words",
                "sql": "CREATE TABLE langs_words(lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER, -- repetitions of this word in this language\n                                        PRIMARY KEY(lid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "pages_words",
                "sql": "CREATE TABLE pages_words(pid INTEGER REFERENCES pages(pid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER DEFAULT 0, -- times this word appears into this page\n                                        PRIMARY KEY(pid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "biwords",
                "sql": "CREATE TABLE biwords(lid    INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w1st   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w2nd   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                occurrences INTEGER DEFAULT 0, -- times this pair appears in this language/page\n                                PRIMARY KEY(lid,w1st,w2nd))\n                                WITHOUT ROWID"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "awards_players",
                "sql": "CREATE TABLE awards_players\n(\n    playerID TEXT not null,\n    award    TEXT not null,\n    year     INTEGER          not null,\n    lgID     TEXT null,\n    note     TEXT null,\n    pos      TEXT null,\n    primary key (playerID, year, award),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "coaches",
                "sql": "CREATE TABLE coaches\n(\n    coachID     TEXT not null,\n    year        INTEGER          not null,\n    tmID        TEXT not null,\n    lgID        TEXT null,\n    stint       INTEGER          not null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    post_wins   INTEGER          null,\n    post_losses INTEGER          null,\n    primary key (coachID, year, tmID, stint),\n    foreign key (tmID, year) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "draft",
                "sql": "CREATE TABLE draft\n(\n    id             INTEGER default 0 not null\n        primary key,\n    draftYear      INTEGER           null,\n    draftRound     INTEGER           null,\n    draftSelection INTEGER           null,\n    draftOverall   INTEGER          null,\n    tmID           TEXT  null,\n    firstName      TEXT  null,\n    lastName       TEXT  null,\n    suffixName     TEXT  null,\n    playerID       TEXT  null,\n    draftFrom      TEXT  null,\n    lgID           TEXT  null,\n    foreign key (tmID, draftYear) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "player_allstar",
                "sql": "CREATE TABLE player_allstar\n(\n    playerID        TEXT not null,\n    last_name       TEXT null,\n    first_name      TEXT null,\n    season_id       INTEGER          not null,\n    conference      TEXT null,\n    league_id       TEXT null,\n    games_played    INTEGER          null,\n    minutes         INTEGER          null,\n    points          INTEGER          null,\n    o_rebounds      INTEGER          null,\n    d_rebounds      INTEGER          null,\n    rebounds        INTEGER          null,\n    assists         INTEGER          null,\n    steals          INTEGER          null,\n    blocks          INTEGER          null,\n    turnovers       INTEGER          null,\n    personal_fouls  INTEGER          null,\n    fg_attempted    INTEGER          null,\n    fg_made         INTEGER          null,\n    ft_attempted    INTEGER          null,\n    ft_made         INTEGER          null,\n    three_attempted INTEGER          null,\n    three_made      INTEGER          null,\n    primary key (playerID, season_id),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "players",
                "sql": "CREATE TABLE players\n(\n    playerID      TEXT not null\n        primary key,\n    useFirst      TEXT null,\n    firstName     TEXT null,\n    middleName    TEXT null,\n    lastName      TEXT null,\n    nameGiven     TEXT null,\n    fullGivenName TEXT null,\n    nameSuffix    TEXT null,\n    nameNick      TEXT null,\n    pos           TEXT null,\n    firstseason   INTEGER          null,\n    lastseason    INTEGER         null,\n    height        REAL        null,\n    weight        INTEGER         null,\n    college       TEXT null,\n    collegeOther  TEXT null,\n    birthDate     DATE         null,\n    birthCity     TEXT null,\n    birthState    TEXT null,\n    birthCountry  TEXT null,\n    highSchool    TEXT null,\n    hsCity        TEXT null,\n    hsState       TEXT null,\n    hsCountry     TEXT null,\n    deathDate     DATE         null,\n    race          TEXT null\n)"
            },
            {
                "name": "teams",
                "sql": "CREATE TABLE teams\n(\n    year        INTEGER          not null,\n    lgID        TEXT null,\n    tmID        TEXT not null,\n    franchID    TEXT null,\n    confID      TEXT null,\n    divID       TEXT null,\n    `rank`      INTEGER          null,\n    confRank    INTEGER          null,\n    playoff     TEXT null,\n    name        TEXT null,\n    o_fgm       INTEGER          null,\n--     o_fga       int          null,\n    o_ftm       INTEGER          null,\n--     o_fta       int          null,\n--     o_3pm       int          null,\n--     o_3pa       int          null,\n--     o_oreb      int          null,\n--     o_dreb      int          null,\n--     o_reb       int          null,\n--     o_asts      int          null,\n--     o_pf        int          null,\n--     o_stl       int          null,\n--     o_to        int          null,\n--     o_blk       int          null,\n     o_pts       INTEGER          null,\n--     d_fgm       int          null,\n--     d_fga       int          null,\n--     d_ftm       int          null,\n--     d_fta       int          null,\n--     d_3pm       int          null,\n--     d_3pa       int          null,\n--     d_oreb      int          null,\n--     d_dreb      int          null,\n--     d_reb       int          null,\n--     d_asts      int          null,\n--     d_pf        int          null,\n--     d_stl       int          null,\n--     d_to        int          null,\n--     d_blk       int          null,\n     d_pts       INTEGER          null,\n--     o_tmRebound int          null,\n--     d_tmRebound int          null,\n    homeWon     INTEGER          null,\n    homeLost    INTEGER          null,\n    awayWon     INTEGER          null,\n    awayLost    INTEGER          null,\n--     neutWon     int          null,\n--     neutLoss    int          null,\n--     confWon     int          null,\n--     confLoss    int          null,\n--     divWon      int          null,\n--     divLoss     int          null,\n--     pace        int          null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    games       INTEGER          null,\n--     min         int          null,\n    arena       TEXT null,\n--     attendance  int          null,\n--     bbtmID      varchar(255) null,\n    primary key (year, tmID)\n)"
            },
            {
                "name": "awards_coaches",
                "sql": "CREATE TABLE \"awards_coaches\"\n(\n    id      INTEGER\n        primary key autoincrement,\n    year    INTEGER,\n    coachID TEXT,\n    award   TEXT,\n    lgID    TEXT,\n    note    TEXT,\n    foreign key (coachID, year) references coaches (coachID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "players_teams",
                "sql": "CREATE TABLE \"players_teams\"\n(\n    id                 INTEGER\n        primary key autoincrement,\n    playerID           TEXT not null\n        references players\n            on update cascade on delete cascade,\n    year               INTEGER,\n    stint              INTEGER,\n    tmID               TEXT,\n    lgID               TEXT,\n    GP                 INTEGER,\n    GS                 INTEGER,\n    minutes            INTEGER,\n    points             INTEGER,\n    oRebounds          INTEGER,\n    dRebounds          INTEGER,\n    rebounds           INTEGER,\n    assists            INTEGER,\n    steals             INTEGER,\n    blocks             INTEGER,\n    turnovers          INTEGER,\n    PF                 INTEGER,\n    fgAttempted        INTEGER,\n    fgMade             INTEGER,\n    ftAttempted        INTEGER,\n    ftMade             INTEGER,\n    threeAttempted     INTEGER,\n    threeMade          INTEGER,\n    PostGP             INTEGER,\n    PostGS             INTEGER,\n    PostMinutes        INTEGER,\n    PostPoints         INTEGER,\n    PostoRebounds      INTEGER,\n    PostdRebounds      INTEGER,\n    PostRebounds       INTEGER,\n    PostAssists        INTEGER,\n    PostSteals         INTEGER,\n    PostBlocks         INTEGER,\n    PostTurnovers      INTEGER,\n    PostPF             INTEGER,\n    PostfgAttempted    INTEGER,\n    PostfgMade         INTEGER,\n    PostftAttempted    INTEGER,\n    PostftMade         INTEGER,\n    PostthreeAttempted INTEGER,\n    PostthreeMade      INTEGER,\n    note               TEXT,\n    foreign key (tmID, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "series_post",
                "sql": "CREATE TABLE \"series_post\"\n(\n    id         INTEGER\n        primary key autoincrement,\n    year       INTEGER,\n    round      TEXT,\n    series     TEXT,\n    tmIDWinner TEXT,\n    lgIDWinner TEXT,\n    tmIDLoser  TEXT,\n    lgIDLoser  TEXT,\n    W          INTEGER,\n    L          INTEGER,\n    foreign key (tmIDWinner, year) references teams (tmID, year)\n        on update cascade on delete cascade,\n    foreign key (tmIDLoser, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "breweries",
                "sql": "CREATE TABLE breweries\n(\n    id    INTEGER          not null\n        primary key,\n    name  TEXT null,\n    city  TEXT null,\n    state TEXT null\n)"
            },
            {
                "name": "beers",
                "sql": "CREATE TABLE \"beers\"\n(\n    id         INTEGER not null\n        primary key,\n    brewery_id INTEGER not null\n        constraint beers_ibfk_1\n            references breweries,\n    abv        REAL,\n    ibu        REAL,\n    name       TEXT    not null,\n    style      TEXT,\n    ounces     REAL    not null\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "language_corpus",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "professional_basketball",
            "college_completion",
            "world",
            "restaurant",
            "trains",
            "sales_in_weather",
            "craftbeer",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "shipping_ext",
        "tables": [
            {
                "name": "city",
                "sql": "CREATE TABLE city\n(\n    city_id    INTEGER\n            primary key,\n    city_name  TEXT,\n    state      TEXT,\n    population INTEGER,\n    area       REAL\n)"
            },
            {
                "name": "customer",
                "sql": "CREATE TABLE customer\n(\n    cust_id        INTEGER\n            primary key,\n    cust_name      TEXT,\n    annual_revenue INTEGER,\n    cust_type      TEXT,\n    address        TEXT,\n    city           TEXT,\n    state          TEXT,\n    zip            REAL,\n    phone          TEXT\n)"
            },
            {
                "name": "driver",
                "sql": "CREATE TABLE driver\n(\n    driver_id  INTEGER\n            primary key,\n    first_name TEXT,\n    last_name  TEXT,\n    address    TEXT,\n    city       TEXT,\n    state      TEXT,\n    zip_code   INTEGER,\n    phone      TEXT\n)"
            },
            {
                "name": "truck",
                "sql": "CREATE TABLE truck\n(\n    truck_id   INTEGER\n            primary key,\n    make       TEXT,\n    model_year INTEGER\n)"
            },
            {
                "name": "shipment",
                "sql": "CREATE TABLE shipment\n(\n    ship_id   INTEGER\n            primary key,\n    cust_id   INTEGER,\n    weight    REAL,\n    truck_id  INTEGER,\n    driver_id INTEGER,\n    city_id   INTEGER,\n    ship_date TEXT,\n    foreign key (cust_id) references customer(cust_id),\n    foreign key (city_id) references city(city_id),\n    foreign key (driver_id) references driver(driver_id),\n    foreign key (truck_id) references truck(truck_id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "shipping",
            "toxicology",
            "student_club",
            "superhero",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "restaurant",
            "ice_hockey_draft",
            "sales_in_weather",
            "food_inspection",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "trains_ext",
        "tables": [
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "trains",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "authors_ext",
        "tables": [
            {
                "name": "Author",
                "sql": "CREATE TABLE \"Author\"\n(\n    Id          INTEGER\n        constraint Author_pk\n            primary key,\n    Name        TEXT,\n    Affiliation TEXT\n)"
            },
            {
                "name": "Conference",
                "sql": "CREATE TABLE \"Conference\"\n(\n    Id        INTEGER\n        constraint Conference_pk\n            primary key,\n    ShortName TEXT,\n    FullName  TEXT,\n    HomePage  TEXT\n)"
            },
            {
                "name": "Journal",
                "sql": "CREATE TABLE \"Journal\"\n(\n    Id        INTEGER\n        constraint Journal_pk\n            primary key,\n    ShortName TEXT,\n    FullName  TEXT,\n    HomePage  TEXT\n)"
            },
            {
                "name": "Paper",
                "sql": "CREATE TABLE Paper\n(\n    Id           INTEGER\n            primary key,\n    Title        TEXT,\n    Year         INTEGER,\n    ConferenceId INTEGER,\n    JournalId    INTEGER,\n    Keyword      TEXT,\n    foreign key (ConferenceId) references Conference(Id),\n    foreign key (JournalId) references Journal(Id)\n)"
            },
            {
                "name": "PaperAuthor",
                "sql": "CREATE TABLE PaperAuthor\n(\n    PaperId     INTEGER,\n    AuthorId    INTEGER,\n    Name        TEXT,\n    Affiliation TEXT,\n    foreign key (PaperId) references Paper(Id),\n    foreign key (AuthorId) references Author(Id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Player_Attributes",
                "sql": "CREATE TABLE \"Player_Attributes\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_fifa_api_id`\tINTEGER,\n\t`player_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`overall_rating`\tINTEGER,\n\t`potential`\tINTEGER,\n\t`preferred_foot`\tTEXT,\n\t`attacking_work_rate`\tTEXT,\n\t`defensive_work_rate`\tTEXT,\n\t`crossing`\tINTEGER,\n\t`finishing`\tINTEGER,\n\t`heading_accuracy`\tINTEGER,\n\t`short_passing`\tINTEGER,\n\t`volleys`\tINTEGER,\n\t`dribbling`\tINTEGER,\n\t`curve`\tINTEGER,\n\t`free_kick_accuracy`\tINTEGER,\n\t`long_passing`\tINTEGER,\n\t`ball_control`\tINTEGER,\n\t`acceleration`\tINTEGER,\n\t`sprint_speed`\tINTEGER,\n\t`agility`\tINTEGER,\n\t`reactions`\tINTEGER,\n\t`balance`\tINTEGER,\n\t`shot_power`\tINTEGER,\n\t`jumping`\tINTEGER,\n\t`stamina`\tINTEGER,\n\t`strength`\tINTEGER,\n\t`long_shots`\tINTEGER,\n\t`aggression`\tINTEGER,\n\t`interceptions`\tINTEGER,\n\t`positioning`\tINTEGER,\n\t`vision`\tINTEGER,\n\t`penalties`\tINTEGER,\n\t`marking`\tINTEGER,\n\t`standing_tackle`\tINTEGER,\n\t`sliding_tackle`\tINTEGER,\n\t`gk_diving`\tINTEGER,\n\t`gk_handling`\tINTEGER,\n\t`gk_kicking`\tINTEGER,\n\t`gk_positioning`\tINTEGER,\n\t`gk_reflexes`\tINTEGER,\n\tFOREIGN KEY(`player_fifa_api_id`) REFERENCES `Player`(`player_fifa_api_id`),\n\tFOREIGN KEY(`player_api_id`) REFERENCES `Player`(`player_api_id`)\n)"
            },
            {
                "name": "Player",
                "sql": "CREATE TABLE `Player` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_api_id`\tINTEGER UNIQUE,\n\t`player_name`\tTEXT,\n\t`player_fifa_api_id`\tINTEGER UNIQUE,\n\t`birthday`\tTEXT,\n\t`height`\tINTEGER,\n\t`weight`\tINTEGER\n)"
            },
            {
                "name": "League",
                "sql": "CREATE TABLE `League` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`country_id`\tINTEGER,\n\t`name`\tTEXT UNIQUE,\n\tFOREIGN KEY(`country_id`) REFERENCES `country`(`id`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`name`\tTEXT UNIQUE\n)"
            },
            {
                "name": "Team",
                "sql": "CREATE TABLE \"Team\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_api_id`\tINTEGER UNIQUE,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_long_name`\tTEXT,\n\t`team_short_name`\tTEXT\n)"
            },
            {
                "name": "Team_Attributes",
                "sql": "CREATE TABLE `Team_Attributes` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`buildUpPlaySpeed`\tINTEGER,\n\t`buildUpPlaySpeedClass`\tTEXT,\n\t`buildUpPlayDribbling`\tINTEGER,\n\t`buildUpPlayDribblingClass`\tTEXT,\n\t`buildUpPlayPassing`\tINTEGER,\n\t`buildUpPlayPassingClass`\tTEXT,\n\t`buildUpPlayPositioningClass`\tTEXT,\n\t`chanceCreationPassing`\tINTEGER,\n\t`chanceCreationPassingClass`\tTEXT,\n\t`chanceCreationCrossing`\tINTEGER,\n\t`chanceCreationCrossingClass`\tTEXT,\n\t`chanceCreationShooting`\tINTEGER,\n\t`chanceCreationShootingClass`\tTEXT,\n\t`chanceCreationPositioningClass`\tTEXT,\n\t`defencePressure`\tINTEGER,\n\t`defencePressureClass`\tTEXT,\n\t`defenceAggression`\tINTEGER,\n\t`defenceAggressionClass`\tTEXT,\n\t`defenceTeamWidth`\tINTEGER,\n\t`defenceTeamWidthClass`\tTEXT,\n\t`defenceDefenderLineClass`\tTEXT,\n\tFOREIGN KEY(`team_fifa_api_id`) REFERENCES `Team`(`team_fifa_api_id`),\n\tFOREIGN KEY(`team_api_id`) REFERENCES `Team`(`team_api_id`)\n)"
            },
            {
                "name": "Match",
                "sql": "CREATE TABLE \"Match\"\n(\n    id               INTEGER\n        primary key autoincrement,\n    country_id       INTEGER\n        references Country,\n    league_id        INTEGER\n        references League,\n    season           TEXT,\n    stage            INTEGER,\n    date             TEXT,\n    match_api_id     INTEGER\n        unique,\n    home_team_api_id INTEGER\n        references Team (team_api_id),\n    away_team_api_id INTEGER\n        references Team (team_api_id),\n    home_team_goal   INTEGER,\n    away_team_goal   INTEGER,\n    home_player_X1   INTEGER,\n    home_player_X2   INTEGER,\n    home_player_X3   INTEGER,\n    home_player_X4   INTEGER,\n    home_player_X5   INTEGER,\n    home_player_X6   INTEGER,\n    home_player_X7   INTEGER,\n    home_player_X8   INTEGER,\n    home_player_X9   INTEGER,\n    home_player_X10  INTEGER,\n    home_player_X11  INTEGER,\n    away_player_X1   INTEGER,\n    away_player_X2   INTEGER,\n    away_player_X3   INTEGER,\n    away_player_X4   INTEGER,\n    away_player_X5   INTEGER,\n    away_player_X6   INTEGER,\n    away_player_X7   INTEGER,\n    away_player_X8   INTEGER,\n    away_player_X9   INTEGER,\n    away_player_X10  INTEGER,\n    away_player_X11  INTEGER,\n    home_player_Y1   INTEGER,\n    home_player_Y2   INTEGER,\n    home_player_Y3   INTEGER,\n    home_player_Y4   INTEGER,\n    home_player_Y5   INTEGER,\n    home_player_Y6   INTEGER,\n    home_player_Y7   INTEGER,\n    home_player_Y8   INTEGER,\n    home_player_Y9   INTEGER,\n    home_player_Y10  INTEGER,\n    home_player_Y11  INTEGER,\n    away_player_Y1   INTEGER,\n    away_player_Y2   INTEGER,\n    away_player_Y3   INTEGER,\n    away_player_Y4   INTEGER,\n    away_player_Y5   INTEGER,\n    away_player_Y6   INTEGER,\n    away_player_Y7   INTEGER,\n    away_player_Y8   INTEGER,\n    away_player_Y9   INTEGER,\n    away_player_Y10  INTEGER,\n    away_player_Y11  INTEGER,\n    home_player_1    INTEGER\n        references Player (player_api_id),\n    home_player_2    INTEGER\n        references Player (player_api_id),\n    home_player_3    INTEGER\n        references Player (player_api_id),\n    home_player_4    INTEGER\n        references Player (player_api_id),\n    home_player_5    INTEGER\n        references Player (player_api_id),\n    home_player_6    INTEGER\n        references Player (player_api_id),\n    home_player_7    INTEGER\n        references Player (player_api_id),\n    home_player_8    INTEGER\n        references Player (player_api_id),\n    home_player_9    INTEGER\n        references Player (player_api_id),\n    home_player_10   INTEGER\n        references Player (player_api_id),\n    home_player_11   INTEGER\n        references Player (player_api_id),\n    away_player_1    INTEGER\n        references Player (player_api_id),\n    away_player_2    INTEGER\n        references Player (player_api_id),\n    away_player_3    INTEGER\n        references Player (player_api_id),\n    away_player_4    INTEGER\n        references Player (player_api_id),\n    away_player_5    INTEGER\n        references Player (player_api_id),\n    away_player_6    INTEGER\n        references Player (player_api_id),\n    away_player_7    INTEGER\n        references Player (player_api_id),\n    away_player_8    INTEGER\n        references Player (player_api_id),\n    away_player_9    INTEGER\n        references Player (player_api_id),\n    away_player_10   INTEGER\n        references Player (player_api_id),\n    away_player_11   INTEGER\n        references Player (player_api_id),\n    goal             TEXT,\n    shoton           TEXT,\n    shotoff          TEXT,\n    foulcommit       TEXT,\n    card             TEXT,\n    \"cross\"          TEXT,\n    corner           TEXT,\n    possession       TEXT,\n    B365H            REAL,\n    B365D            REAL,\n    B365A            REAL,\n    BWH              REAL,\n    BWD              REAL,\n    BWA              REAL,\n    IWH              REAL,\n    IWD              REAL,\n    IWA              REAL,\n    LBH              REAL,\n    LBD              REAL,\n    LBA              REAL,\n    PSH              REAL,\n    PSD              REAL,\n    PSA              REAL,\n    WHH              REAL,\n    WHD              REAL,\n    WHA              REAL,\n    SJH              REAL,\n    SJD              REAL,\n    SJA              REAL,\n    VCH              REAL,\n    VCD              REAL,\n    VCA              REAL,\n    GBH              REAL,\n    GBD              REAL,\n    GBA              REAL,\n    BSH              REAL,\n    BSD              REAL,\n    BSA              REAL\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "authors",
            "toxicology",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "european_football_2",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "restaurant",
            "trains",
            "sales_in_weather",
            "menu",
            "disney",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "computer_student_ext",
        "tables": [
            {
                "name": "course",
                "sql": "CREATE TABLE course\n(\n    course_id   INTEGER\n        constraint course_pk\n            primary key,\n    courseLevel TEXT\n)"
            },
            {
                "name": "person",
                "sql": "CREATE TABLE person\n(\n    p_id           INTEGER\n        constraint person_pk\n            primary key,\n    professor      INTEGER,\n    student        INTEGER,\n    hasPosition    TEXT,\n    inPhase        TEXT,\n    yearsInProgram TEXT\n)"
            },
            {
                "name": "advisedBy",
                "sql": "CREATE TABLE \"advisedBy\"\n(\n    p_id       INTEGER,\n    p_id_dummy INTEGER,\n    constraint advisedBy_pk\n        primary key (p_id, p_id_dummy),\n    constraint advisedBy_person_p_id_p_id_fk\n        foreign key (p_id, p_id_dummy) references person (p_id, p_id)\n)"
            },
            {
                "name": "taughtBy",
                "sql": "CREATE TABLE taughtBy\n(\n    course_id INTEGER,\n    p_id      INTEGER,\n    primary key (course_id, p_id),\n    foreign key (p_id) references person(p_id),\n    foreign key (course_id) references course(course_id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "computer_student",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "food_inspection",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "human_resources_ext",
        "tables": [
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    locationID   INTEGER\n        constraint location_pk\n            primary key,\n    locationcity TEXT,\n    address      TEXT,\n    state        TEXT,\n    zipcode      INTEGER,\n    officephone  TEXT\n)"
            },
            {
                "name": "position",
                "sql": "CREATE TABLE position\n(\n    positionID        INTEGER\n        constraint position_pk\n            primary key,\n    positiontitle     TEXT,\n    educationrequired TEXT,\n    minsalary         TEXT,\n    maxsalary         TEXT\n)"
            },
            {
                "name": "employee",
                "sql": "CREATE TABLE employee\n(\n    ssn         TEXT\n            primary key,\n    lastname    TEXT,\n    firstname   TEXT,\n    hiredate    TEXT,\n    salary      TEXT,\n    gender      TEXT,\n    performance TEXT,\n    positionID  INTEGER,\n    locationID  INTEGER,\n    foreign key (locationID) references location(locationID),\n    foreign key (positionID) references position(positionID)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Player_Attributes",
                "sql": "CREATE TABLE \"Player_Attributes\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_fifa_api_id`\tINTEGER,\n\t`player_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`overall_rating`\tINTEGER,\n\t`potential`\tINTEGER,\n\t`preferred_foot`\tTEXT,\n\t`attacking_work_rate`\tTEXT,\n\t`defensive_work_rate`\tTEXT,\n\t`crossing`\tINTEGER,\n\t`finishing`\tINTEGER,\n\t`heading_accuracy`\tINTEGER,\n\t`short_passing`\tINTEGER,\n\t`volleys`\tINTEGER,\n\t`dribbling`\tINTEGER,\n\t`curve`\tINTEGER,\n\t`free_kick_accuracy`\tINTEGER,\n\t`long_passing`\tINTEGER,\n\t`ball_control`\tINTEGER,\n\t`acceleration`\tINTEGER,\n\t`sprint_speed`\tINTEGER,\n\t`agility`\tINTEGER,\n\t`reactions`\tINTEGER,\n\t`balance`\tINTEGER,\n\t`shot_power`\tINTEGER,\n\t`jumping`\tINTEGER,\n\t`stamina`\tINTEGER,\n\t`strength`\tINTEGER,\n\t`long_shots`\tINTEGER,\n\t`aggression`\tINTEGER,\n\t`interceptions`\tINTEGER,\n\t`positioning`\tINTEGER,\n\t`vision`\tINTEGER,\n\t`penalties`\tINTEGER,\n\t`marking`\tINTEGER,\n\t`standing_tackle`\tINTEGER,\n\t`sliding_tackle`\tINTEGER,\n\t`gk_diving`\tINTEGER,\n\t`gk_handling`\tINTEGER,\n\t`gk_kicking`\tINTEGER,\n\t`gk_positioning`\tINTEGER,\n\t`gk_reflexes`\tINTEGER,\n\tFOREIGN KEY(`player_fifa_api_id`) REFERENCES `Player`(`player_fifa_api_id`),\n\tFOREIGN KEY(`player_api_id`) REFERENCES `Player`(`player_api_id`)\n)"
            },
            {
                "name": "Player",
                "sql": "CREATE TABLE `Player` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_api_id`\tINTEGER UNIQUE,\n\t`player_name`\tTEXT,\n\t`player_fifa_api_id`\tINTEGER UNIQUE,\n\t`birthday`\tTEXT,\n\t`height`\tINTEGER,\n\t`weight`\tINTEGER\n)"
            },
            {
                "name": "League",
                "sql": "CREATE TABLE `League` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`country_id`\tINTEGER,\n\t`name`\tTEXT UNIQUE,\n\tFOREIGN KEY(`country_id`) REFERENCES `country`(`id`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`name`\tTEXT UNIQUE\n)"
            },
            {
                "name": "Team",
                "sql": "CREATE TABLE \"Team\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_api_id`\tINTEGER UNIQUE,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_long_name`\tTEXT,\n\t`team_short_name`\tTEXT\n)"
            },
            {
                "name": "Team_Attributes",
                "sql": "CREATE TABLE `Team_Attributes` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`buildUpPlaySpeed`\tINTEGER,\n\t`buildUpPlaySpeedClass`\tTEXT,\n\t`buildUpPlayDribbling`\tINTEGER,\n\t`buildUpPlayDribblingClass`\tTEXT,\n\t`buildUpPlayPassing`\tINTEGER,\n\t`buildUpPlayPassingClass`\tTEXT,\n\t`buildUpPlayPositioningClass`\tTEXT,\n\t`chanceCreationPassing`\tINTEGER,\n\t`chanceCreationPassingClass`\tTEXT,\n\t`chanceCreationCrossing`\tINTEGER,\n\t`chanceCreationCrossingClass`\tTEXT,\n\t`chanceCreationShooting`\tINTEGER,\n\t`chanceCreationShootingClass`\tTEXT,\n\t`chanceCreationPositioningClass`\tTEXT,\n\t`defencePressure`\tINTEGER,\n\t`defencePressureClass`\tTEXT,\n\t`defenceAggression`\tINTEGER,\n\t`defenceAggressionClass`\tTEXT,\n\t`defenceTeamWidth`\tINTEGER,\n\t`defenceTeamWidthClass`\tTEXT,\n\t`defenceDefenderLineClass`\tTEXT,\n\tFOREIGN KEY(`team_fifa_api_id`) REFERENCES `Team`(`team_fifa_api_id`),\n\tFOREIGN KEY(`team_api_id`) REFERENCES `Team`(`team_api_id`)\n)"
            },
            {
                "name": "Match",
                "sql": "CREATE TABLE \"Match\"\n(\n    id               INTEGER\n        primary key autoincrement,\n    country_id       INTEGER\n        references Country,\n    league_id        INTEGER\n        references League,\n    season           TEXT,\n    stage            INTEGER,\n    date             TEXT,\n    match_api_id     INTEGER\n        unique,\n    home_team_api_id INTEGER\n        references Team (team_api_id),\n    away_team_api_id INTEGER\n        references Team (team_api_id),\n    home_team_goal   INTEGER,\n    away_team_goal   INTEGER,\n    home_player_X1   INTEGER,\n    home_player_X2   INTEGER,\n    home_player_X3   INTEGER,\n    home_player_X4   INTEGER,\n    home_player_X5   INTEGER,\n    home_player_X6   INTEGER,\n    home_player_X7   INTEGER,\n    home_player_X8   INTEGER,\n    home_player_X9   INTEGER,\n    home_player_X10  INTEGER,\n    home_player_X11  INTEGER,\n    away_player_X1   INTEGER,\n    away_player_X2   INTEGER,\n    away_player_X3   INTEGER,\n    away_player_X4   INTEGER,\n    away_player_X5   INTEGER,\n    away_player_X6   INTEGER,\n    away_player_X7   INTEGER,\n    away_player_X8   INTEGER,\n    away_player_X9   INTEGER,\n    away_player_X10  INTEGER,\n    away_player_X11  INTEGER,\n    home_player_Y1   INTEGER,\n    home_player_Y2   INTEGER,\n    home_player_Y3   INTEGER,\n    home_player_Y4   INTEGER,\n    home_player_Y5   INTEGER,\n    home_player_Y6   INTEGER,\n    home_player_Y7   INTEGER,\n    home_player_Y8   INTEGER,\n    home_player_Y9   INTEGER,\n    home_player_Y10  INTEGER,\n    home_player_Y11  INTEGER,\n    away_player_Y1   INTEGER,\n    away_player_Y2   INTEGER,\n    away_player_Y3   INTEGER,\n    away_player_Y4   INTEGER,\n    away_player_Y5   INTEGER,\n    away_player_Y6   INTEGER,\n    away_player_Y7   INTEGER,\n    away_player_Y8   INTEGER,\n    away_player_Y9   INTEGER,\n    away_player_Y10  INTEGER,\n    away_player_Y11  INTEGER,\n    home_player_1    INTEGER\n        references Player (player_api_id),\n    home_player_2    INTEGER\n        references Player (player_api_id),\n    home_player_3    INTEGER\n        references Player (player_api_id),\n    home_player_4    INTEGER\n        references Player (player_api_id),\n    home_player_5    INTEGER\n        references Player (player_api_id),\n    home_player_6    INTEGER\n        references Player (player_api_id),\n    home_player_7    INTEGER\n        references Player (player_api_id),\n    home_player_8    INTEGER\n        references Player (player_api_id),\n    home_player_9    INTEGER\n        references Player (player_api_id),\n    home_player_10   INTEGER\n        references Player (player_api_id),\n    home_player_11   INTEGER\n        references Player (player_api_id),\n    away_player_1    INTEGER\n        references Player (player_api_id),\n    away_player_2    INTEGER\n        references Player (player_api_id),\n    away_player_3    INTEGER\n        references Player (player_api_id),\n    away_player_4    INTEGER\n        references Player (player_api_id),\n    away_player_5    INTEGER\n        references Player (player_api_id),\n    away_player_6    INTEGER\n        references Player (player_api_id),\n    away_player_7    INTEGER\n        references Player (player_api_id),\n    away_player_8    INTEGER\n        references Player (player_api_id),\n    away_player_9    INTEGER\n        references Player (player_api_id),\n    away_player_10   INTEGER\n        references Player (player_api_id),\n    away_player_11   INTEGER\n        references Player (player_api_id),\n    goal             TEXT,\n    shoton           TEXT,\n    shotoff          TEXT,\n    foulcommit       TEXT,\n    card             TEXT,\n    \"cross\"          TEXT,\n    corner           TEXT,\n    possession       TEXT,\n    B365H            REAL,\n    B365D            REAL,\n    B365A            REAL,\n    BWH              REAL,\n    BWD              REAL,\n    BWA              REAL,\n    IWH              REAL,\n    IWD              REAL,\n    IWA              REAL,\n    LBH              REAL,\n    LBD              REAL,\n    LBA              REAL,\n    PSH              REAL,\n    PSD              REAL,\n    PSA              REAL,\n    WHH              REAL,\n    WHD              REAL,\n    WHA              REAL,\n    SJH              REAL,\n    SJD              REAL,\n    SJA              REAL,\n    VCH              REAL,\n    VCD              REAL,\n    VCA              REAL,\n    GBH              REAL,\n    GBD              REAL,\n    GBA              REAL,\n    BSH              REAL,\n    BSD              REAL,\n    BSA              REAL\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "Author",
                "sql": "CREATE TABLE \"Author\"\n(\n    Id          INTEGER\n        constraint Author_pk\n            primary key,\n    Name        TEXT,\n    Affiliation TEXT\n)"
            },
            {
                "name": "Conference",
                "sql": "CREATE TABLE \"Conference\"\n(\n    Id        INTEGER\n        constraint Conference_pk\n            primary key,\n    ShortName TEXT,\n    FullName  TEXT,\n    HomePage  TEXT\n)"
            },
            {
                "name": "Journal",
                "sql": "CREATE TABLE \"Journal\"\n(\n    Id        INTEGER\n        constraint Journal_pk\n            primary key,\n    ShortName TEXT,\n    FullName  TEXT,\n    HomePage  TEXT\n)"
            },
            {
                "name": "Paper",
                "sql": "CREATE TABLE Paper\n(\n    Id           INTEGER\n            primary key,\n    Title        TEXT,\n    Year         INTEGER,\n    ConferenceId INTEGER,\n    JournalId    INTEGER,\n    Keyword      TEXT,\n    foreign key (ConferenceId) references Conference(Id),\n    foreign key (JournalId) references Journal(Id)\n)"
            },
            {
                "name": "PaperAuthor",
                "sql": "CREATE TABLE PaperAuthor\n(\n    PaperId     INTEGER,\n    AuthorId    INTEGER,\n    Name        TEXT,\n    Affiliation TEXT,\n    foreign key (PaperId) references Paper(Id),\n    foreign key (AuthorId) references Author(Id)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "runs",
                "sql": "CREATE TABLE runs (\n        run_at text not null,\n        max_rowid integer not null,\n        reviews_added integer not null\n    )"
            },
            {
                "name": "podcasts",
                "sql": "CREATE TABLE podcasts (\n        podcast_id text primary key,\n        itunes_id integer not null,\n        slug text not null,\n        itunes_url text not null,\n        title text not null\n    )"
            },
            {
                "name": "reviews",
                "sql": "CREATE TABLE \"reviews\"\n(\n    podcast_id TEXT    not null\n        constraint reviews_podcasts_podcast_id_fk\n            references podcasts,\n    title      TEXT    not null,\n    content    TEXT    not null,\n    rating     INTEGER not null,\n    author_id  TEXT    not null,\n    created_at TEXT    not null\n)"
            },
            {
                "name": "categories",
                "sql": "CREATE TABLE \"categories\"\n(\n    podcast_id TEXT not null\n        constraint categories_podcasts_podcast_id_fk\n            references podcasts,\n    category   TEXT not null,\n    constraint \"PRIMARY\"\n        primary key (podcast_id, category)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "Community_Area",
                "sql": "CREATE TABLE Community_Area\n(\n    community_area_no   INTEGER\n            primary key,\n    community_area_name TEXT,\n    side                TEXT,\n    population          TEXT\n)"
            },
            {
                "name": "District",
                "sql": "CREATE TABLE District\n(\n    district_no   INTEGER\n            primary key,\n    district_name TEXT,\n    address       TEXT,\n    zip_code      INTEGER,\n    commander     TEXT,\n    email         TEXT,\n    phone         TEXT,\n    fax           TEXT,\n    tty           TEXT,\n    twitter       TEXT\n)"
            },
            {
                "name": "FBI_Code",
                "sql": "CREATE TABLE FBI_Code\n(\n    fbi_code_no   TEXT\n            primary key,\n    title         TEXT,\n    description   TEXT,\n    crime_against TEXT\n)"
            },
            {
                "name": "IUCR",
                "sql": "CREATE TABLE IUCR\n(\n    iucr_no               TEXT\n            primary key,\n    primary_description   TEXT,\n    secondary_description TEXT,\n    index_code            TEXT\n)"
            },
            {
                "name": "Neighborhood",
                "sql": "CREATE TABLE Neighborhood\n(\n    neighborhood_name TEXT\n            primary key,\n    community_area_no INTEGER,\n    foreign key (community_area_no) references Community_Area(community_area_no)\n)"
            },
            {
                "name": "Ward",
                "sql": "CREATE TABLE Ward\n(\n    ward_no                INTEGER\n            primary key,\n    alderman_first_name    TEXT,\n    alderman_last_name     TEXT,\n    alderman_name_suffix   TEXT,\n    ward_office_address    TEXT,\n    ward_office_zip        TEXT,\n    ward_email             TEXT,\n    ward_office_phone      TEXT,\n    ward_office_fax        TEXT,\n    city_hall_office_room  INTEGER,\n    city_hall_office_phone TEXT,\n    city_hall_office_fax   TEXT,\n    Population             INTEGER\n)"
            },
            {
                "name": "Crime",
                "sql": "CREATE TABLE Crime\n(\n    report_no            INTEGER\n            primary key,\n    case_number          TEXT,\n    date                 TEXT,\n    block                TEXT,\n    iucr_no              TEXT,\n    location_description TEXT,\n    arrest               TEXT,\n    domestic             TEXT,\n    beat                 INTEGER,\n    district_no          INTEGER,\n    ward_no              INTEGER,\n    community_area_no    INTEGER,\n    fbi_code_no          TEXT,\n    latitude             TEXT,\n    longitude            TEXT,\n    foreign key (ward_no) references Ward(ward_no),\n    foreign key (iucr_no) references IUCR(iucr_no),\n    foreign key (district_no) references District(district_no),\n    foreign key (community_area_no) references Community_Area(community_area_no),\n    foreign key (fbi_code_no) references FBI_Code(fbi_code_no)\n)"
            }
        ],
        "original": [
            "human_resources",
            "toxicology",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "european_football_2",
            "mental_health_survey",
            "legislator",
            "airline",
            "image_and_language",
            "college_completion",
            "trains",
            "authors",
            "sales_in_weather",
            "music_platform_2",
            "menu",
            "disney",
            "chicago_crime"
        ]
    },
    {
        "name": "books_ext",
        "tables": [
            {
                "name": "address_status",
                "sql": "CREATE TABLE address_status\n(\n    status_id      INTEGER\n            primary key,\n    address_status TEXT\n)"
            },
            {
                "name": "author",
                "sql": "CREATE TABLE author\n(\n    author_id   INTEGER\n            primary key,\n    author_name TEXT\n)"
            },
            {
                "name": "book_language",
                "sql": "CREATE TABLE book_language\n(\n    language_id   INTEGER\n            primary key,\n    language_code TEXT,\n    language_name TEXT\n)"
            },
            {
                "name": "country",
                "sql": "CREATE TABLE country\n(\n    country_id   INTEGER\n            primary key,\n    country_name TEXT\n)"
            },
            {
                "name": "address",
                "sql": "CREATE TABLE address\n(\n    address_id    INTEGER\n            primary key,\n    street_number TEXT,\n    street_name   TEXT,\n    city          TEXT,\n    country_id    INTEGER,\n    foreign key (country_id) references country(country_id)\n)"
            },
            {
                "name": "customer",
                "sql": "CREATE TABLE customer\n(\n    customer_id INTEGER\n            primary key,\n    first_name  TEXT,\n    last_name   TEXT,\n    email       TEXT\n)"
            },
            {
                "name": "customer_address",
                "sql": "CREATE TABLE customer_address\n(\n    customer_id INTEGER,\n    address_id  INTEGER,\n    status_id   INTEGER,\n    primary key (customer_id, address_id),\n    foreign key (address_id) references address(address_id),\n    foreign key (customer_id) references customer(customer_id)\n)"
            },
            {
                "name": "order_status",
                "sql": "CREATE TABLE order_status\n(\n    status_id    INTEGER\n            primary key,\n    status_value TEXT\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    publisher_id   INTEGER\n            primary key,\n    publisher_name TEXT\n)"
            },
            {
                "name": "book",
                "sql": "CREATE TABLE book\n(\n    book_id          INTEGER\n            primary key,\n    title            TEXT,\n    isbn13           TEXT,\n    language_id      INTEGER,\n    num_pages        INTEGER,\n    publication_date DATE,\n    publisher_id     INTEGER,\n    foreign key (language_id) references book_language(language_id),\n    foreign key (publisher_id) references publisher(publisher_id)\n)"
            },
            {
                "name": "book_author",
                "sql": "CREATE TABLE book_author\n(\n    book_id   INTEGER,\n    author_id INTEGER,\n    primary key (book_id, author_id),\n    foreign key (author_id) references author(author_id),\n    foreign key (book_id) references book(book_id)\n)"
            },
            {
                "name": "shipping_method",
                "sql": "CREATE TABLE shipping_method\n(\n    method_id   INTEGER\n            primary key,\n    method_name TEXT,\n    cost        REAL\n)"
            },
            {
                "name": "cust_order",
                "sql": "CREATE TABLE \"cust_order\"\n(\n    order_id           INTEGER\n        primary key autoincrement,\n    order_date         DATETIME,\n    customer_id        INTEGER\n        references customer,\n    shipping_method_id INTEGER\n        references shipping_method,\n    dest_address_id    INTEGER\n        references address\n)"
            },
            {
                "name": "order_history",
                "sql": "CREATE TABLE \"order_history\"\n(\n    history_id  INTEGER\n        primary key autoincrement,\n    order_id    INTEGER\n        references cust_order,\n    status_id   INTEGER\n        references order_status,\n    status_date DATETIME\n)"
            },
            {
                "name": "order_line",
                "sql": "CREATE TABLE \"order_line\"\n(\n    line_id  INTEGER\n        primary key autoincrement,\n    order_id INTEGER\n        references cust_order,\n    book_id  INTEGER\n        references book,\n    price    REAL\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "awards_players",
                "sql": "CREATE TABLE awards_players\n(\n    playerID TEXT not null,\n    award    TEXT not null,\n    year     INTEGER          not null,\n    lgID     TEXT null,\n    note     TEXT null,\n    pos      TEXT null,\n    primary key (playerID, year, award),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "coaches",
                "sql": "CREATE TABLE coaches\n(\n    coachID     TEXT not null,\n    year        INTEGER          not null,\n    tmID        TEXT not null,\n    lgID        TEXT null,\n    stint       INTEGER          not null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    post_wins   INTEGER          null,\n    post_losses INTEGER          null,\n    primary key (coachID, year, tmID, stint),\n    foreign key (tmID, year) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "draft",
                "sql": "CREATE TABLE draft\n(\n    id             INTEGER default 0 not null\n        primary key,\n    draftYear      INTEGER           null,\n    draftRound     INTEGER           null,\n    draftSelection INTEGER           null,\n    draftOverall   INTEGER          null,\n    tmID           TEXT  null,\n    firstName      TEXT  null,\n    lastName       TEXT  null,\n    suffixName     TEXT  null,\n    playerID       TEXT  null,\n    draftFrom      TEXT  null,\n    lgID           TEXT  null,\n    foreign key (tmID, draftYear) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "player_allstar",
                "sql": "CREATE TABLE player_allstar\n(\n    playerID        TEXT not null,\n    last_name       TEXT null,\n    first_name      TEXT null,\n    season_id       INTEGER          not null,\n    conference      TEXT null,\n    league_id       TEXT null,\n    games_played    INTEGER          null,\n    minutes         INTEGER          null,\n    points          INTEGER          null,\n    o_rebounds      INTEGER          null,\n    d_rebounds      INTEGER          null,\n    rebounds        INTEGER          null,\n    assists         INTEGER          null,\n    steals          INTEGER          null,\n    blocks          INTEGER          null,\n    turnovers       INTEGER          null,\n    personal_fouls  INTEGER          null,\n    fg_attempted    INTEGER          null,\n    fg_made         INTEGER          null,\n    ft_attempted    INTEGER          null,\n    ft_made         INTEGER          null,\n    three_attempted INTEGER          null,\n    three_made      INTEGER          null,\n    primary key (playerID, season_id),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "players",
                "sql": "CREATE TABLE players\n(\n    playerID      TEXT not null\n        primary key,\n    useFirst      TEXT null,\n    firstName     TEXT null,\n    middleName    TEXT null,\n    lastName      TEXT null,\n    nameGiven     TEXT null,\n    fullGivenName TEXT null,\n    nameSuffix    TEXT null,\n    nameNick      TEXT null,\n    pos           TEXT null,\n    firstseason   INTEGER          null,\n    lastseason    INTEGER         null,\n    height        REAL        null,\n    weight        INTEGER         null,\n    college       TEXT null,\n    collegeOther  TEXT null,\n    birthDate     DATE         null,\n    birthCity     TEXT null,\n    birthState    TEXT null,\n    birthCountry  TEXT null,\n    highSchool    TEXT null,\n    hsCity        TEXT null,\n    hsState       TEXT null,\n    hsCountry     TEXT null,\n    deathDate     DATE         null,\n    race          TEXT null\n)"
            },
            {
                "name": "teams",
                "sql": "CREATE TABLE teams\n(\n    year        INTEGER          not null,\n    lgID        TEXT null,\n    tmID        TEXT not null,\n    franchID    TEXT null,\n    confID      TEXT null,\n    divID       TEXT null,\n    `rank`      INTEGER          null,\n    confRank    INTEGER          null,\n    playoff     TEXT null,\n    name        TEXT null,\n    o_fgm       INTEGER          null,\n--     o_fga       int          null,\n    o_ftm       INTEGER          null,\n--     o_fta       int          null,\n--     o_3pm       int          null,\n--     o_3pa       int          null,\n--     o_oreb      int          null,\n--     o_dreb      int          null,\n--     o_reb       int          null,\n--     o_asts      int          null,\n--     o_pf        int          null,\n--     o_stl       int          null,\n--     o_to        int          null,\n--     o_blk       int          null,\n     o_pts       INTEGER          null,\n--     d_fgm       int          null,\n--     d_fga       int          null,\n--     d_ftm       int          null,\n--     d_fta       int          null,\n--     d_3pm       int          null,\n--     d_3pa       int          null,\n--     d_oreb      int          null,\n--     d_dreb      int          null,\n--     d_reb       int          null,\n--     d_asts      int          null,\n--     d_pf        int          null,\n--     d_stl       int          null,\n--     d_to        int          null,\n--     d_blk       int          null,\n     d_pts       INTEGER          null,\n--     o_tmRebound int          null,\n--     d_tmRebound int          null,\n    homeWon     INTEGER          null,\n    homeLost    INTEGER          null,\n    awayWon     INTEGER          null,\n    awayLost    INTEGER          null,\n--     neutWon     int          null,\n--     neutLoss    int          null,\n--     confWon     int          null,\n--     confLoss    int          null,\n--     divWon      int          null,\n--     divLoss     int          null,\n--     pace        int          null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    games       INTEGER          null,\n--     min         int          null,\n    arena       TEXT null,\n--     attendance  int          null,\n--     bbtmID      varchar(255) null,\n    primary key (year, tmID)\n)"
            },
            {
                "name": "awards_coaches",
                "sql": "CREATE TABLE \"awards_coaches\"\n(\n    id      INTEGER\n        primary key autoincrement,\n    year    INTEGER,\n    coachID TEXT,\n    award   TEXT,\n    lgID    TEXT,\n    note    TEXT,\n    foreign key (coachID, year) references coaches (coachID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "players_teams",
                "sql": "CREATE TABLE \"players_teams\"\n(\n    id                 INTEGER\n        primary key autoincrement,\n    playerID           TEXT not null\n        references players\n            on update cascade on delete cascade,\n    year               INTEGER,\n    stint              INTEGER,\n    tmID               TEXT,\n    lgID               TEXT,\n    GP                 INTEGER,\n    GS                 INTEGER,\n    minutes            INTEGER,\n    points             INTEGER,\n    oRebounds          INTEGER,\n    dRebounds          INTEGER,\n    rebounds           INTEGER,\n    assists            INTEGER,\n    steals             INTEGER,\n    blocks             INTEGER,\n    turnovers          INTEGER,\n    PF                 INTEGER,\n    fgAttempted        INTEGER,\n    fgMade             INTEGER,\n    ftAttempted        INTEGER,\n    ftMade             INTEGER,\n    threeAttempted     INTEGER,\n    threeMade          INTEGER,\n    PostGP             INTEGER,\n    PostGS             INTEGER,\n    PostMinutes        INTEGER,\n    PostPoints         INTEGER,\n    PostoRebounds      INTEGER,\n    PostdRebounds      INTEGER,\n    PostRebounds       INTEGER,\n    PostAssists        INTEGER,\n    PostSteals         INTEGER,\n    PostBlocks         INTEGER,\n    PostTurnovers      INTEGER,\n    PostPF             INTEGER,\n    PostfgAttempted    INTEGER,\n    PostfgMade         INTEGER,\n    PostftAttempted    INTEGER,\n    PostftMade         INTEGER,\n    PostthreeAttempted INTEGER,\n    PostthreeMade      INTEGER,\n    note               TEXT,\n    foreign key (tmID, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "series_post",
                "sql": "CREATE TABLE \"series_post\"\n(\n    id         INTEGER\n        primary key autoincrement,\n    year       INTEGER,\n    round      TEXT,\n    series     TEXT,\n    tmIDWinner TEXT,\n    lgIDWinner TEXT,\n    tmIDLoser  TEXT,\n    lgIDLoser  TEXT,\n    W          INTEGER,\n    L          INTEGER,\n    foreign key (tmIDWinner, year) references teams (tmID, year)\n        on update cascade on delete cascade,\n    foreign key (tmIDLoser, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "langs",
                "sql": "CREATE TABLE langs(lid    INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lang   TEXT UNIQUE,\n                            locale TEXT UNIQUE,\n                            pages  INTEGER DEFAULT 0,  -- total pages in this language\n                            words  INTEGER DEFAULT 0)"
            },
            {
                "name": "pages",
                "sql": "CREATE TABLE pages(pid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                            page INTEGER DEFAULT NULL, -- wikipedia page id\n                            revision INTEGER DEFAULT NULL, -- wikipedia revision page id\n                            title TEXT,\n                            words INTEGER DEFAULT 0, -- number of different words in this page\n                            UNIQUE(lid,page,title))"
            },
            {
                "name": "words",
                "sql": "CREATE TABLE words(wid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            word        TEXT UNIQUE,\n                            occurrences INTEGER DEFAULT 0)"
            },
            {
                "name": "langs_words",
                "sql": "CREATE TABLE langs_words(lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER, -- repetitions of this word in this language\n                                        PRIMARY KEY(lid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "pages_words",
                "sql": "CREATE TABLE pages_words(pid INTEGER REFERENCES pages(pid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER DEFAULT 0, -- times this word appears into this page\n                                        PRIMARY KEY(pid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "biwords",
                "sql": "CREATE TABLE biwords(lid    INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w1st   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w2nd   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                occurrences INTEGER DEFAULT 0, -- times this pair appears in this language/page\n                                PRIMARY KEY(lid,w1st,w2nd))\n                                WITHOUT ROWID"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "breweries",
                "sql": "CREATE TABLE breweries\n(\n    id    INTEGER          not null\n        primary key,\n    name  TEXT null,\n    city  TEXT null,\n    state TEXT null\n)"
            },
            {
                "name": "beers",
                "sql": "CREATE TABLE \"beers\"\n(\n    id         INTEGER not null\n        primary key,\n    brewery_id INTEGER not null\n        constraint beers_ibfk_1\n            references breweries,\n    abv        REAL,\n    ibu        REAL,\n    name       TEXT    not null,\n    style      TEXT,\n    ounces     REAL    not null\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "books",
            "toxicology",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "professional_basketball",
            "college_completion",
            "language_corpus",
            "trains",
            "sales_in_weather",
            "craftbeer",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "law_episode_ext",
        "tables": [
            {
                "name": "Episode",
                "sql": "CREATE TABLE Episode\n(\n    episode_id       TEXT\n            primary key,\n    series           TEXT,\n    season           INTEGER,\n    episode          INTEGER,\n    number_in_series INTEGER,\n    title            TEXT,\n    summary          TEXT,\n    air_date         DATE,\n    episode_image    TEXT,\n    rating           REAL,\n    votes            INTEGER\n)"
            },
            {
                "name": "Keyword",
                "sql": "CREATE TABLE Keyword\n(\n    episode_id TEXT,\n    keyword    TEXT,\n    primary key (episode_id, keyword),\n    foreign key (episode_id) references Episode(episode_id)\n)"
            },
            {
                "name": "Person",
                "sql": "CREATE TABLE Person\n(\n    person_id     TEXT\n            primary key,\n    name          TEXT,\n    birthdate     DATE,\n    birth_name    TEXT,\n    birth_place   TEXT,\n    birth_region  TEXT,\n    birth_country TEXT,\n    height_meters REAL,\n    nickname      TEXT\n)"
            },
            {
                "name": "Award",
                "sql": "CREATE TABLE Award\n(\n    award_id       INTEGER\n            primary key,\n    organization   TEXT,\n    year           INTEGER,\n    award_category TEXT,\n    award          TEXT,\n    series         TEXT,\n    episode_id     TEXT,\n    person_id      TEXT,\n    role           TEXT,\n    result         TEXT,\n    foreign key (episode_id) references Episode(episode_id),\n    foreign key (person_id) references Person(person_id)\n)"
            },
            {
                "name": "Credit",
                "sql": "CREATE TABLE Credit\n(\n    episode_id TEXT,\n    person_id  TEXT,\n    category   TEXT,\n    role       TEXT,\n    credited   TEXT,\n    primary key (episode_id, person_id),\n    foreign key (episode_id) references Episode(episode_id),\n    foreign key (person_id) references Person(person_id)\n)"
            },
            {
                "name": "Vote",
                "sql": "CREATE TABLE Vote\n(\n    episode_id TEXT,\n    stars      INTEGER,\n    votes      INTEGER,\n    percent    REAL,\n    foreign key (episode_id) references Episode(episode_id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "law_episode",
            "toxicology",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "food_inspection",
            "menu",
            "disney",
            "app_store"
        ]
    },
    {
        "name": "codebase_comments_ext",
        "tables": [
            {
                "name": "Method",
                "sql": "CREATE TABLE \"Method\"\n(\n    Id            INTEGER not null\n        primary key autoincrement,\n    Name          TEXT,\n    FullComment   TEXT,\n    Summary       TEXT,\n    ApiCalls      TEXT,\n    CommentIsXml  INTEGER,\n    SampledAt     INTEGER,\n    SolutionId    INTEGER,\n    Lang          TEXT,\n    NameTokenized TEXT\n)"
            },
            {
                "name": "MethodParameter",
                "sql": "CREATE TABLE \"MethodParameter\"\n(\n    Id       INTEGER not null\n        primary key autoincrement,\n    MethodId TEXT,\n    Type     TEXT,\n    Name     TEXT\n)"
            },
            {
                "name": "Repo",
                "sql": "CREATE TABLE Repo\n(\n    Id            INTEGER not null\n        primary key autoincrement,\n    Url           TEXT,\n    Stars         INTEGER,\n    Forks         INTEGER,\n    Watchers      INTEGER,\n    ProcessedTime INTEGER\n)"
            },
            {
                "name": "Solution",
                "sql": "CREATE TABLE Solution\n(\n    Id            INTEGER not null\n        primary key autoincrement,\n    RepoId        INTEGER,\n    Path          TEXT,\n    ProcessedTime INTEGER,\n    WasCompiled   INTEGER\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "codebase_comments",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "public_review_platform_ext",
        "tables": [
            {
                "name": "Attributes",
                "sql": "CREATE TABLE Attributes\n(\n    attribute_id   INTEGER\n        constraint Attributes_pk\n            primary key,\n    attribute_name TEXT\n)"
            },
            {
                "name": "Categories",
                "sql": "CREATE TABLE Categories\n(\n    category_id   INTEGER\n        constraint Categories_pk\n            primary key,\n    category_name TEXT\n)"
            },
            {
                "name": "Compliments",
                "sql": "CREATE TABLE Compliments\n(\n    compliment_id   INTEGER\n        constraint Compliments_pk\n            primary key,\n    compliment_type TEXT\n)"
            },
            {
                "name": "Days",
                "sql": "CREATE TABLE Days\n(\n    day_id      INTEGER\n        constraint Days_pk\n            primary key,\n    day_of_week TEXT\n)"
            },
            {
                "name": "Years",
                "sql": "CREATE TABLE Years\n(\n    year_id     INTEGER\n        constraint Years_pk\n            primary key,\n    actual_year INTEGER\n)"
            },
            {
                "name": "Business_Attributes",
                "sql": "CREATE TABLE \"Business_Attributes\"\n(\n    attribute_id    INTEGER\n        constraint Business_Attributes_Attributes_attribute_id_fk\n            references Attributes,\n    business_id     INTEGER\n        constraint Business_Attributes_Business_business_id_fk\n            references Business,\n    attribute_value TEXT,\n    constraint Business_Attributes_pk\n        primary key (attribute_id, business_id)\n)"
            },
            {
                "name": "Business_Categories",
                "sql": "CREATE TABLE \"Business_Categories\"\n(\n    business_id INTEGER\n        constraint Business_Categories_Business_business_id_fk\n            references Business,\n    category_id INTEGER\n        constraint Business_Categories_Categories_category_id_fk\n            references Categories,\n    constraint Business_Categories_pk\n        primary key (business_id, category_id)\n)"
            },
            {
                "name": "Business_Hours",
                "sql": "CREATE TABLE \"Business_Hours\"\n(\n    business_id  INTEGER\n        constraint Business_Hours_Business_business_id_fk\n            references Business,\n    day_id       INTEGER\n        constraint Business_Hours_Days_day_id_fk\n            references Days,\n    opening_time TEXT,\n    closing_time TEXT,\n    constraint Business_Hours_pk\n        primary key (business_id, day_id)\n)"
            },
            {
                "name": "Checkins",
                "sql": "CREATE TABLE \"Checkins\"\n(\n    business_id   INTEGER\n        constraint Checkins_Business_business_id_fk\n            references Business,\n    day_id        INTEGER\n        constraint Checkins_Days_day_id_fk\n            references Days,\n    label_time_0  TEXT,\n    label_time_1  TEXT,\n    label_time_2  TEXT,\n    label_time_3  TEXT,\n    label_time_4  TEXT,\n    label_time_5  TEXT,\n    label_time_6  TEXT,\n    label_time_7  TEXT,\n    label_time_8  TEXT,\n    label_time_9  TEXT,\n    label_time_10 TEXT,\n    label_time_11 TEXT,\n    label_time_12 TEXT,\n    label_time_13 TEXT,\n    label_time_14 TEXT,\n    label_time_15 TEXT,\n    label_time_16 TEXT,\n    label_time_17 TEXT,\n    label_time_18 TEXT,\n    label_time_19 TEXT,\n    label_time_20 TEXT,\n    label_time_21 TEXT,\n    label_time_22 TEXT,\n    label_time_23 TEXT,\n    constraint Checkins_pk\n        primary key (business_id, day_id)\n)"
            },
            {
                "name": "Elite",
                "sql": "CREATE TABLE \"Elite\"\n(\n    user_id INTEGER\n        constraint Elite_Users_user_id_fk\n            references Users,\n    year_id INTEGER\n        constraint Elite_Years_year_id_fk\n            references Years,\n    constraint Elite_pk\n        primary key (user_id, year_id)\n)"
            },
            {
                "name": "Reviews",
                "sql": "CREATE TABLE \"Reviews\"\n(\n    business_id         INTEGER\n        constraint Reviews_Business_business_id_fk\n            references Business,\n    user_id             INTEGER\n        constraint Reviews_Users_user_id_fk\n            references Users,\n    review_stars        INTEGER,\n    review_votes_funny  TEXT,\n    review_votes_useful TEXT,\n    review_votes_cool   TEXT,\n    review_length       TEXT,\n    constraint Reviews_pk\n        primary key (business_id, user_id)\n)"
            },
            {
                "name": "Tips",
                "sql": "CREATE TABLE \"Tips\"\n(\n    business_id INTEGER\n        constraint Tips_Business_business_id_fk\n            references Business,\n    user_id     INTEGER\n        constraint Tips_Users_user_id_fk\n            references Users,\n    likes       INTEGER,\n    tip_length  TEXT,\n    constraint Tips_pk\n        primary key (business_id, user_id)\n)"
            },
            {
                "name": "Users_Compliments",
                "sql": "CREATE TABLE \"Users_Compliments\"\n(\n    compliment_id         INTEGER\n        constraint Users_Compliments_Compliments_compliment_id_fk\n            references Compliments,\n    user_id               INTEGER\n        constraint Users_Compliments_Users_user_id_fk\n            references Users,\n    number_of_compliments TEXT,\n    constraint Users_Compliments_pk\n        primary key (compliment_id, user_id)\n)"
            },
            {
                "name": "Business",
                "sql": "CREATE TABLE \"Business\"\n(\n    business_id  INTEGER\n        constraint Business_pk\n            primary key,\n    active       TEXT,\n    city         TEXT,\n    state        TEXT,\n    stars        REAL,\n    review_count TEXT\n)"
            },
            {
                "name": "Users",
                "sql": "CREATE TABLE \"Users\"\n(\n    user_id                 INTEGER\n        constraint Users_pk\n            primary key,\n    user_yelping_since_year INTEGER,\n    user_average_stars      TEXT,\n    user_votes_funny        TEXT,\n    user_votes_useful       TEXT,\n    user_votes_cool         TEXT,\n    user_review_count       TEXT,\n    user_fans               TEXT\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            }
        ],
        "original": [
            "public_review_platform",
            "toxicology",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "disney"
        ]
    },
    {
        "name": "ice_hockey_draft_ext",
        "tables": [
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "ice_hockey_draft",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "sales_in_weather_ext",
        "tables": [
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "sales_in_weather",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "talkingdata_ext",
        "tables": [
            {
                "name": "app_all",
                "sql": "CREATE TABLE `app_all`\n(\n    `app_id` INTEGER NOT NULL,\n    PRIMARY KEY (`app_id`)\n)"
            },
            {
                "name": "app_events",
                "sql": "CREATE TABLE `app_events` (\n  `event_id` INTEGER NOT NULL,\n  `app_id` INTEGER NOT NULL,\n  `is_installed` INTEGER NOT NULL,\n  `is_active` INTEGER NOT NULL,\n  PRIMARY KEY (`event_id`,`app_id`),\n  FOREIGN KEY (`event_id`) REFERENCES `events` (`event_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "app_events_relevant",
                "sql": "CREATE TABLE `app_events_relevant` (\n  `event_id` INTEGER NOT NULL,\n  `app_id` INTEGER NOT NULL,\n  `is_installed` INTEGER DEFAULT NULL,\n  `is_active` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`event_id`,`app_id`),\n  FOREIGN KEY (`event_id`) REFERENCES `events_relevant` (`event_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`app_id`) REFERENCES `app_all` (`app_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "app_labels",
                "sql": "CREATE TABLE `app_labels` (\n  `app_id` INTEGER NOT NULL,\n  `label_id` INTEGER NOT NULL,\n  FOREIGN KEY (`label_id`) REFERENCES `label_categories` (`label_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`app_id`) REFERENCES `app_all` (`app_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "events",
                "sql": "CREATE TABLE `events` (\n  `event_id` INTEGER NOT NULL,\n  `device_id` INTEGER DEFAULT NULL,\n  `timestamp` DATETIME DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  PRIMARY KEY (`event_id`)\n)"
            },
            {
                "name": "events_relevant",
                "sql": "CREATE TABLE `events_relevant` (\n  `event_id` INTEGER NOT NULL,\n  `device_id` INTEGER DEFAULT NULL,\n  `timestamp` DATETIME NOT NULL,\n  `longitude` REAL NOT NULL,\n  `latitude` REAL NOT NULL,\n  PRIMARY KEY (`event_id`),\n  FOREIGN KEY (`device_id`) REFERENCES `gender_age` (`device_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "gender_age",
                "sql": "CREATE TABLE `gender_age` (\n  `device_id` INTEGER NOT NULL,\n  `gender` TEXT DEFAULT NULL,\n  `age` INTEGER DEFAULT NULL,\n  `group` TEXT DEFAULT NULL,\n  PRIMARY KEY (`device_id`),\n  FOREIGN KEY (`device_id`) REFERENCES `phone_brand_device_model2` (`device_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "gender_age_test",
                "sql": "CREATE TABLE `gender_age_test` (\n  `device_id` INTEGER NOT NULL,\n  PRIMARY KEY (`device_id`)\n)"
            },
            {
                "name": "gender_age_train",
                "sql": "CREATE TABLE `gender_age_train` (\n  `device_id` INTEGER NOT NULL,\n  `gender` TEXT DEFAULT NULL,\n  `age` INTEGER DEFAULT NULL,\n  `group` TEXT DEFAULT NULL,\n  PRIMARY KEY (`device_id`)\n)"
            },
            {
                "name": "label_categories",
                "sql": "CREATE TABLE `label_categories` (\n  `label_id` INTEGER NOT NULL,\n  `category` TEXT DEFAULT NULL,\n  PRIMARY KEY (`label_id`)\n)"
            },
            {
                "name": "phone_brand_device_model2",
                "sql": "CREATE TABLE `phone_brand_device_model2` (\n  `device_id` INTEGER NOT NULL,\n  `phone_brand` TEXT NOT NULL,\n  `device_model` TEXT NOT NULL,\n  PRIMARY KEY (`device_id`,`phone_brand`,`device_model`)\n)"
            },
            {
                "name": "sample_submission",
                "sql": "CREATE TABLE `sample_submission` (\n  `device_id` INTEGER NOT NULL,\n  `F23-` REAL DEFAULT NULL,\n  `F24-26` REAL DEFAULT NULL,\n  `F27-28` REAL DEFAULT NULL,\n  `F29-32` REAL DEFAULT NULL,\n  `F33-42` REAL DEFAULT NULL,\n  `F43+` REAL DEFAULT NULL,\n  `M22-` REAL DEFAULT NULL,\n  `M23-26` REAL DEFAULT NULL,\n  `M27-28` REAL DEFAULT NULL,\n  `M29-31` REAL DEFAULT NULL,\n  `M32-38` REAL DEFAULT NULL,\n  `M39+` REAL DEFAULT NULL,\n  PRIMARY KEY (`device_id`)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Player_Attributes",
                "sql": "CREATE TABLE \"Player_Attributes\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_fifa_api_id`\tINTEGER,\n\t`player_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`overall_rating`\tINTEGER,\n\t`potential`\tINTEGER,\n\t`preferred_foot`\tTEXT,\n\t`attacking_work_rate`\tTEXT,\n\t`defensive_work_rate`\tTEXT,\n\t`crossing`\tINTEGER,\n\t`finishing`\tINTEGER,\n\t`heading_accuracy`\tINTEGER,\n\t`short_passing`\tINTEGER,\n\t`volleys`\tINTEGER,\n\t`dribbling`\tINTEGER,\n\t`curve`\tINTEGER,\n\t`free_kick_accuracy`\tINTEGER,\n\t`long_passing`\tINTEGER,\n\t`ball_control`\tINTEGER,\n\t`acceleration`\tINTEGER,\n\t`sprint_speed`\tINTEGER,\n\t`agility`\tINTEGER,\n\t`reactions`\tINTEGER,\n\t`balance`\tINTEGER,\n\t`shot_power`\tINTEGER,\n\t`jumping`\tINTEGER,\n\t`stamina`\tINTEGER,\n\t`strength`\tINTEGER,\n\t`long_shots`\tINTEGER,\n\t`aggression`\tINTEGER,\n\t`interceptions`\tINTEGER,\n\t`positioning`\tINTEGER,\n\t`vision`\tINTEGER,\n\t`penalties`\tINTEGER,\n\t`marking`\tINTEGER,\n\t`standing_tackle`\tINTEGER,\n\t`sliding_tackle`\tINTEGER,\n\t`gk_diving`\tINTEGER,\n\t`gk_handling`\tINTEGER,\n\t`gk_kicking`\tINTEGER,\n\t`gk_positioning`\tINTEGER,\n\t`gk_reflexes`\tINTEGER,\n\tFOREIGN KEY(`player_fifa_api_id`) REFERENCES `Player`(`player_fifa_api_id`),\n\tFOREIGN KEY(`player_api_id`) REFERENCES `Player`(`player_api_id`)\n)"
            },
            {
                "name": "Player",
                "sql": "CREATE TABLE `Player` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_api_id`\tINTEGER UNIQUE,\n\t`player_name`\tTEXT,\n\t`player_fifa_api_id`\tINTEGER UNIQUE,\n\t`birthday`\tTEXT,\n\t`height`\tINTEGER,\n\t`weight`\tINTEGER\n)"
            },
            {
                "name": "League",
                "sql": "CREATE TABLE `League` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`country_id`\tINTEGER,\n\t`name`\tTEXT UNIQUE,\n\tFOREIGN KEY(`country_id`) REFERENCES `country`(`id`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`name`\tTEXT UNIQUE\n)"
            },
            {
                "name": "Team",
                "sql": "CREATE TABLE \"Team\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_api_id`\tINTEGER UNIQUE,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_long_name`\tTEXT,\n\t`team_short_name`\tTEXT\n)"
            },
            {
                "name": "Team_Attributes",
                "sql": "CREATE TABLE `Team_Attributes` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`buildUpPlaySpeed`\tINTEGER,\n\t`buildUpPlaySpeedClass`\tTEXT,\n\t`buildUpPlayDribbling`\tINTEGER,\n\t`buildUpPlayDribblingClass`\tTEXT,\n\t`buildUpPlayPassing`\tINTEGER,\n\t`buildUpPlayPassingClass`\tTEXT,\n\t`buildUpPlayPositioningClass`\tTEXT,\n\t`chanceCreationPassing`\tINTEGER,\n\t`chanceCreationPassingClass`\tTEXT,\n\t`chanceCreationCrossing`\tINTEGER,\n\t`chanceCreationCrossingClass`\tTEXT,\n\t`chanceCreationShooting`\tINTEGER,\n\t`chanceCreationShootingClass`\tTEXT,\n\t`chanceCreationPositioningClass`\tTEXT,\n\t`defencePressure`\tINTEGER,\n\t`defencePressureClass`\tTEXT,\n\t`defenceAggression`\tINTEGER,\n\t`defenceAggressionClass`\tTEXT,\n\t`defenceTeamWidth`\tINTEGER,\n\t`defenceTeamWidthClass`\tTEXT,\n\t`defenceDefenderLineClass`\tTEXT,\n\tFOREIGN KEY(`team_fifa_api_id`) REFERENCES `Team`(`team_fifa_api_id`),\n\tFOREIGN KEY(`team_api_id`) REFERENCES `Team`(`team_api_id`)\n)"
            },
            {
                "name": "Match",
                "sql": "CREATE TABLE \"Match\"\n(\n    id               INTEGER\n        primary key autoincrement,\n    country_id       INTEGER\n        references Country,\n    league_id        INTEGER\n        references League,\n    season           TEXT,\n    stage            INTEGER,\n    date             TEXT,\n    match_api_id     INTEGER\n        unique,\n    home_team_api_id INTEGER\n        references Team (team_api_id),\n    away_team_api_id INTEGER\n        references Team (team_api_id),\n    home_team_goal   INTEGER,\n    away_team_goal   INTEGER,\n    home_player_X1   INTEGER,\n    home_player_X2   INTEGER,\n    home_player_X3   INTEGER,\n    home_player_X4   INTEGER,\n    home_player_X5   INTEGER,\n    home_player_X6   INTEGER,\n    home_player_X7   INTEGER,\n    home_player_X8   INTEGER,\n    home_player_X9   INTEGER,\n    home_player_X10  INTEGER,\n    home_player_X11  INTEGER,\n    away_player_X1   INTEGER,\n    away_player_X2   INTEGER,\n    away_player_X3   INTEGER,\n    away_player_X4   INTEGER,\n    away_player_X5   INTEGER,\n    away_player_X6   INTEGER,\n    away_player_X7   INTEGER,\n    away_player_X8   INTEGER,\n    away_player_X9   INTEGER,\n    away_player_X10  INTEGER,\n    away_player_X11  INTEGER,\n    home_player_Y1   INTEGER,\n    home_player_Y2   INTEGER,\n    home_player_Y3   INTEGER,\n    home_player_Y4   INTEGER,\n    home_player_Y5   INTEGER,\n    home_player_Y6   INTEGER,\n    home_player_Y7   INTEGER,\n    home_player_Y8   INTEGER,\n    home_player_Y9   INTEGER,\n    home_player_Y10  INTEGER,\n    home_player_Y11  INTEGER,\n    away_player_Y1   INTEGER,\n    away_player_Y2   INTEGER,\n    away_player_Y3   INTEGER,\n    away_player_Y4   INTEGER,\n    away_player_Y5   INTEGER,\n    away_player_Y6   INTEGER,\n    away_player_Y7   INTEGER,\n    away_player_Y8   INTEGER,\n    away_player_Y9   INTEGER,\n    away_player_Y10  INTEGER,\n    away_player_Y11  INTEGER,\n    home_player_1    INTEGER\n        references Player (player_api_id),\n    home_player_2    INTEGER\n        references Player (player_api_id),\n    home_player_3    INTEGER\n        references Player (player_api_id),\n    home_player_4    INTEGER\n        references Player (player_api_id),\n    home_player_5    INTEGER\n        references Player (player_api_id),\n    home_player_6    INTEGER\n        references Player (player_api_id),\n    home_player_7    INTEGER\n        references Player (player_api_id),\n    home_player_8    INTEGER\n        references Player (player_api_id),\n    home_player_9    INTEGER\n        references Player (player_api_id),\n    home_player_10   INTEGER\n        references Player (player_api_id),\n    home_player_11   INTEGER\n        references Player (player_api_id),\n    away_player_1    INTEGER\n        references Player (player_api_id),\n    away_player_2    INTEGER\n        references Player (player_api_id),\n    away_player_3    INTEGER\n        references Player (player_api_id),\n    away_player_4    INTEGER\n        references Player (player_api_id),\n    away_player_5    INTEGER\n        references Player (player_api_id),\n    away_player_6    INTEGER\n        references Player (player_api_id),\n    away_player_7    INTEGER\n        references Player (player_api_id),\n    away_player_8    INTEGER\n        references Player (player_api_id),\n    away_player_9    INTEGER\n        references Player (player_api_id),\n    away_player_10   INTEGER\n        references Player (player_api_id),\n    away_player_11   INTEGER\n        references Player (player_api_id),\n    goal             TEXT,\n    shoton           TEXT,\n    shotoff          TEXT,\n    foulcommit       TEXT,\n    card             TEXT,\n    \"cross\"          TEXT,\n    corner           TEXT,\n    possession       TEXT,\n    B365H            REAL,\n    B365D            REAL,\n    B365A            REAL,\n    BWH              REAL,\n    BWD              REAL,\n    BWA              REAL,\n    IWH              REAL,\n    IWD              REAL,\n    IWA              REAL,\n    LBH              REAL,\n    LBD              REAL,\n    LBA              REAL,\n    PSH              REAL,\n    PSD              REAL,\n    PSA              REAL,\n    WHH              REAL,\n    WHD              REAL,\n    WHA              REAL,\n    SJH              REAL,\n    SJD              REAL,\n    SJA              REAL,\n    VCH              REAL,\n    VCD              REAL,\n    VCA              REAL,\n    GBH              REAL,\n    GBD              REAL,\n    GBA              REAL,\n    BSH              REAL,\n    BSD              REAL,\n    BSA              REAL\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "Author",
                "sql": "CREATE TABLE \"Author\"\n(\n    Id          INTEGER\n        constraint Author_pk\n            primary key,\n    Name        TEXT,\n    Affiliation TEXT\n)"
            },
            {
                "name": "Conference",
                "sql": "CREATE TABLE \"Conference\"\n(\n    Id        INTEGER\n        constraint Conference_pk\n            primary key,\n    ShortName TEXT,\n    FullName  TEXT,\n    HomePage  TEXT\n)"
            },
            {
                "name": "Journal",
                "sql": "CREATE TABLE \"Journal\"\n(\n    Id        INTEGER\n        constraint Journal_pk\n            primary key,\n    ShortName TEXT,\n    FullName  TEXT,\n    HomePage  TEXT\n)"
            },
            {
                "name": "Paper",
                "sql": "CREATE TABLE Paper\n(\n    Id           INTEGER\n            primary key,\n    Title        TEXT,\n    Year         INTEGER,\n    ConferenceId INTEGER,\n    JournalId    INTEGER,\n    Keyword      TEXT,\n    foreign key (ConferenceId) references Conference(Id),\n    foreign key (JournalId) references Journal(Id)\n)"
            },
            {
                "name": "PaperAuthor",
                "sql": "CREATE TABLE PaperAuthor\n(\n    PaperId     INTEGER,\n    AuthorId    INTEGER,\n    Name        TEXT,\n    Affiliation TEXT,\n    foreign key (PaperId) references Paper(Id),\n    foreign key (AuthorId) references Author(Id)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "talkingdata",
            "toxicology",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "european_football_2",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "college_completion",
            "restaurant",
            "trains",
            "authors",
            "sales_in_weather",
            "menu",
            "disney",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "cars_ext",
        "tables": [
            {
                "name": "country",
                "sql": "CREATE TABLE country\n(\n    origin  INTEGER\n            primary key,\n    country TEXT\n)"
            },
            {
                "name": "price",
                "sql": "CREATE TABLE price\n(\n    ID    INTEGER\n            primary key,\n    price REAL\n)"
            },
            {
                "name": "data",
                "sql": "CREATE TABLE data\n(\n    ID           INTEGER\n            primary key,\n    mpg          REAL,\n    cylinders    INTEGER,\n    displacement REAL,\n    horsepower   INTEGER,\n    weight       INTEGER,\n    acceleration REAL,\n    model        INTEGER,\n    car_name     TEXT,\n    foreign key (ID) references price(ID)\n)"
            },
            {
                "name": "production",
                "sql": "CREATE TABLE production\n(\n    ID         INTEGER,\n    model_year INTEGER,\n    country    INTEGER,\n    primary key (ID, model_year),\n    foreign key (country) references country(origin),\n    foreign key (ID) references data(ID),\n    foreign key (ID) references price(ID)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "cars",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "restaurant",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "craftbeer_ext",
        "tables": [
            {
                "name": "breweries",
                "sql": "CREATE TABLE breweries\n(\n    id    INTEGER          not null\n        primary key,\n    name  TEXT null,\n    city  TEXT null,\n    state TEXT null\n)"
            },
            {
                "name": "beers",
                "sql": "CREATE TABLE \"beers\"\n(\n    id         INTEGER not null\n        primary key,\n    brewery_id INTEGER not null\n        constraint beers_ibfk_1\n            references breweries,\n    abv        REAL,\n    ibu        REAL,\n    name       TEXT    not null,\n    style      TEXT,\n    ounces     REAL    not null\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "awards_players",
                "sql": "CREATE TABLE awards_players\n(\n    playerID TEXT not null,\n    award    TEXT not null,\n    year     INTEGER          not null,\n    lgID     TEXT null,\n    note     TEXT null,\n    pos      TEXT null,\n    primary key (playerID, year, award),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "coaches",
                "sql": "CREATE TABLE coaches\n(\n    coachID     TEXT not null,\n    year        INTEGER          not null,\n    tmID        TEXT not null,\n    lgID        TEXT null,\n    stint       INTEGER          not null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    post_wins   INTEGER          null,\n    post_losses INTEGER          null,\n    primary key (coachID, year, tmID, stint),\n    foreign key (tmID, year) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "draft",
                "sql": "CREATE TABLE draft\n(\n    id             INTEGER default 0 not null\n        primary key,\n    draftYear      INTEGER           null,\n    draftRound     INTEGER           null,\n    draftSelection INTEGER           null,\n    draftOverall   INTEGER          null,\n    tmID           TEXT  null,\n    firstName      TEXT  null,\n    lastName       TEXT  null,\n    suffixName     TEXT  null,\n    playerID       TEXT  null,\n    draftFrom      TEXT  null,\n    lgID           TEXT  null,\n    foreign key (tmID, draftYear) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "player_allstar",
                "sql": "CREATE TABLE player_allstar\n(\n    playerID        TEXT not null,\n    last_name       TEXT null,\n    first_name      TEXT null,\n    season_id       INTEGER          not null,\n    conference      TEXT null,\n    league_id       TEXT null,\n    games_played    INTEGER          null,\n    minutes         INTEGER          null,\n    points          INTEGER          null,\n    o_rebounds      INTEGER          null,\n    d_rebounds      INTEGER          null,\n    rebounds        INTEGER          null,\n    assists         INTEGER          null,\n    steals          INTEGER          null,\n    blocks          INTEGER          null,\n    turnovers       INTEGER          null,\n    personal_fouls  INTEGER          null,\n    fg_attempted    INTEGER          null,\n    fg_made         INTEGER          null,\n    ft_attempted    INTEGER          null,\n    ft_made         INTEGER          null,\n    three_attempted INTEGER          null,\n    three_made      INTEGER          null,\n    primary key (playerID, season_id),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "players",
                "sql": "CREATE TABLE players\n(\n    playerID      TEXT not null\n        primary key,\n    useFirst      TEXT null,\n    firstName     TEXT null,\n    middleName    TEXT null,\n    lastName      TEXT null,\n    nameGiven     TEXT null,\n    fullGivenName TEXT null,\n    nameSuffix    TEXT null,\n    nameNick      TEXT null,\n    pos           TEXT null,\n    firstseason   INTEGER          null,\n    lastseason    INTEGER         null,\n    height        REAL        null,\n    weight        INTEGER         null,\n    college       TEXT null,\n    collegeOther  TEXT null,\n    birthDate     DATE         null,\n    birthCity     TEXT null,\n    birthState    TEXT null,\n    birthCountry  TEXT null,\n    highSchool    TEXT null,\n    hsCity        TEXT null,\n    hsState       TEXT null,\n    hsCountry     TEXT null,\n    deathDate     DATE         null,\n    race          TEXT null\n)"
            },
            {
                "name": "teams",
                "sql": "CREATE TABLE teams\n(\n    year        INTEGER          not null,\n    lgID        TEXT null,\n    tmID        TEXT not null,\n    franchID    TEXT null,\n    confID      TEXT null,\n    divID       TEXT null,\n    `rank`      INTEGER          null,\n    confRank    INTEGER          null,\n    playoff     TEXT null,\n    name        TEXT null,\n    o_fgm       INTEGER          null,\n--     o_fga       int          null,\n    o_ftm       INTEGER          null,\n--     o_fta       int          null,\n--     o_3pm       int          null,\n--     o_3pa       int          null,\n--     o_oreb      int          null,\n--     o_dreb      int          null,\n--     o_reb       int          null,\n--     o_asts      int          null,\n--     o_pf        int          null,\n--     o_stl       int          null,\n--     o_to        int          null,\n--     o_blk       int          null,\n     o_pts       INTEGER          null,\n--     d_fgm       int          null,\n--     d_fga       int          null,\n--     d_ftm       int          null,\n--     d_fta       int          null,\n--     d_3pm       int          null,\n--     d_3pa       int          null,\n--     d_oreb      int          null,\n--     d_dreb      int          null,\n--     d_reb       int          null,\n--     d_asts      int          null,\n--     d_pf        int          null,\n--     d_stl       int          null,\n--     d_to        int          null,\n--     d_blk       int          null,\n     d_pts       INTEGER          null,\n--     o_tmRebound int          null,\n--     d_tmRebound int          null,\n    homeWon     INTEGER          null,\n    homeLost    INTEGER          null,\n    awayWon     INTEGER          null,\n    awayLost    INTEGER          null,\n--     neutWon     int          null,\n--     neutLoss    int          null,\n--     confWon     int          null,\n--     confLoss    int          null,\n--     divWon      int          null,\n--     divLoss     int          null,\n--     pace        int          null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    games       INTEGER          null,\n--     min         int          null,\n    arena       TEXT null,\n--     attendance  int          null,\n--     bbtmID      varchar(255) null,\n    primary key (year, tmID)\n)"
            },
            {
                "name": "awards_coaches",
                "sql": "CREATE TABLE \"awards_coaches\"\n(\n    id      INTEGER\n        primary key autoincrement,\n    year    INTEGER,\n    coachID TEXT,\n    award   TEXT,\n    lgID    TEXT,\n    note    TEXT,\n    foreign key (coachID, year) references coaches (coachID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "players_teams",
                "sql": "CREATE TABLE \"players_teams\"\n(\n    id                 INTEGER\n        primary key autoincrement,\n    playerID           TEXT not null\n        references players\n            on update cascade on delete cascade,\n    year               INTEGER,\n    stint              INTEGER,\n    tmID               TEXT,\n    lgID               TEXT,\n    GP                 INTEGER,\n    GS                 INTEGER,\n    minutes            INTEGER,\n    points             INTEGER,\n    oRebounds          INTEGER,\n    dRebounds          INTEGER,\n    rebounds           INTEGER,\n    assists            INTEGER,\n    steals             INTEGER,\n    blocks             INTEGER,\n    turnovers          INTEGER,\n    PF                 INTEGER,\n    fgAttempted        INTEGER,\n    fgMade             INTEGER,\n    ftAttempted        INTEGER,\n    ftMade             INTEGER,\n    threeAttempted     INTEGER,\n    threeMade          INTEGER,\n    PostGP             INTEGER,\n    PostGS             INTEGER,\n    PostMinutes        INTEGER,\n    PostPoints         INTEGER,\n    PostoRebounds      INTEGER,\n    PostdRebounds      INTEGER,\n    PostRebounds       INTEGER,\n    PostAssists        INTEGER,\n    PostSteals         INTEGER,\n    PostBlocks         INTEGER,\n    PostTurnovers      INTEGER,\n    PostPF             INTEGER,\n    PostfgAttempted    INTEGER,\n    PostfgMade         INTEGER,\n    PostftAttempted    INTEGER,\n    PostftMade         INTEGER,\n    PostthreeAttempted INTEGER,\n    PostthreeMade      INTEGER,\n    note               TEXT,\n    foreign key (tmID, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "series_post",
                "sql": "CREATE TABLE \"series_post\"\n(\n    id         INTEGER\n        primary key autoincrement,\n    year       INTEGER,\n    round      TEXT,\n    series     TEXT,\n    tmIDWinner TEXT,\n    lgIDWinner TEXT,\n    tmIDLoser  TEXT,\n    lgIDLoser  TEXT,\n    W          INTEGER,\n    L          INTEGER,\n    foreign key (tmIDWinner, year) references teams (tmID, year)\n        on update cascade on delete cascade,\n    foreign key (tmIDLoser, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "langs",
                "sql": "CREATE TABLE langs(lid    INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lang   TEXT UNIQUE,\n                            locale TEXT UNIQUE,\n                            pages  INTEGER DEFAULT 0,  -- total pages in this language\n                            words  INTEGER DEFAULT 0)"
            },
            {
                "name": "pages",
                "sql": "CREATE TABLE pages(pid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                            page INTEGER DEFAULT NULL, -- wikipedia page id\n                            revision INTEGER DEFAULT NULL, -- wikipedia revision page id\n                            title TEXT,\n                            words INTEGER DEFAULT 0, -- number of different words in this page\n                            UNIQUE(lid,page,title))"
            },
            {
                "name": "words",
                "sql": "CREATE TABLE words(wid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            word        TEXT UNIQUE,\n                            occurrences INTEGER DEFAULT 0)"
            },
            {
                "name": "langs_words",
                "sql": "CREATE TABLE langs_words(lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER, -- repetitions of this word in this language\n                                        PRIMARY KEY(lid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "pages_words",
                "sql": "CREATE TABLE pages_words(pid INTEGER REFERENCES pages(pid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER DEFAULT 0, -- times this word appears into this page\n                                        PRIMARY KEY(pid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "biwords",
                "sql": "CREATE TABLE biwords(lid    INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w1st   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w2nd   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                occurrences INTEGER DEFAULT 0, -- times this pair appears in this language/page\n                                PRIMARY KEY(lid,w1st,w2nd))\n                                WITHOUT ROWID"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "craftbeer",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "professional_basketball",
            "college_completion",
            "world",
            "restaurant",
            "language_corpus",
            "trains",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "citeseer_ext",
        "tables": [
            {
                "name": "cites",
                "sql": "CREATE TABLE cites\n(\n    cited_paper_id  TEXT not null,\n    citing_paper_id TEXT not null,\n    primary key (cited_paper_id, citing_paper_id)\n)"
            },
            {
                "name": "paper",
                "sql": "CREATE TABLE paper\n(\n    paper_id    TEXT  not null\n        primary key,\n    class_label TEXT not null\n)"
            },
            {
                "name": "content",
                "sql": "CREATE TABLE content\n(\n    paper_id     TEXT not null,\n    word_cited_id TEXT not null,\n    primary key (paper_id, word_cited_id),\n    foreign key (paper_id) references paper(paper_id)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "Ingredient",
                "sql": "CREATE TABLE Ingredient\n(\n    ingredient_id INTEGER\n            primary key,\n    category      TEXT,\n    name          TEXT,\n    plural        TEXT\n)"
            },
            {
                "name": "Recipe",
                "sql": "CREATE TABLE Recipe\n(\n    recipe_id  INTEGER\n            primary key,\n    title      TEXT,\n    subtitle   TEXT,\n    servings   INTEGER,\n    yield_unit TEXT,\n    prep_min   INTEGER,\n    cook_min   INTEGER,\n    stnd_min   INTEGER,\n    source     TEXT,\n    intro      TEXT,\n    directions TEXT\n)"
            },
            {
                "name": "Nutrition",
                "sql": "CREATE TABLE Nutrition\n(\n    recipe_id     INTEGER\n            primary key,\n    protein       REAL,\n    carbo         REAL,\n    alcohol       REAL,\n    total_fat     REAL,\n    sat_fat       REAL,\n    cholestrl     REAL,\n    sodium        REAL,\n    iron          REAL,\n    vitamin_c     REAL,\n    vitamin_a     REAL,\n    fiber         REAL,\n    pcnt_cal_carb REAL,\n    pcnt_cal_fat  REAL,\n    pcnt_cal_prot REAL,\n    calories      REAL,\n    foreign key (recipe_id) references Recipe(recipe_id)\n)"
            },
            {
                "name": "Quantity",
                "sql": "CREATE TABLE Quantity\n(\n    quantity_id   INTEGER\n            primary key,\n    recipe_id     INTEGER,\n    ingredient_id INTEGER,\n    max_qty       REAL,\n    min_qty       REAL,\n    unit          TEXT,\n    preparation   TEXT,\n    optional      TEXT,\n    foreign key (recipe_id) references Recipe(recipe_id),\n    foreign key (ingredient_id) references Ingredient(ingredient_id),\n    foreign key (recipe_id) references Nutrition(recipe_id)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "runs",
                "sql": "CREATE TABLE runs (\n        run_at text not null,\n        max_rowid integer not null,\n        reviews_added integer not null\n    )"
            },
            {
                "name": "podcasts",
                "sql": "CREATE TABLE podcasts (\n        podcast_id text primary key,\n        itunes_id integer not null,\n        slug text not null,\n        itunes_url text not null,\n        title text not null\n    )"
            },
            {
                "name": "reviews",
                "sql": "CREATE TABLE \"reviews\"\n(\n    podcast_id TEXT    not null\n        constraint reviews_podcasts_podcast_id_fk\n            references podcasts,\n    title      TEXT    not null,\n    content    TEXT    not null,\n    rating     INTEGER not null,\n    author_id  TEXT    not null,\n    created_at TEXT    not null\n)"
            },
            {
                "name": "categories",
                "sql": "CREATE TABLE \"categories\"\n(\n    podcast_id TEXT not null\n        constraint categories_podcasts_podcast_id_fk\n            references podcasts,\n    category   TEXT not null,\n    constraint \"PRIMARY\"\n        primary key (podcast_id, category)\n)"
            },
            {
                "name": "actor",
                "sql": "CREATE TABLE actor\n(\n    ActorID           INTEGER\n        constraint actor_pk\n            primary key,\n    Name              TEXT,\n    \"Date of Birth\"   DATE,\n    \"Birth City\"      TEXT,\n    \"Birth Country\"   TEXT,\n    \"Height (Inches)\" INTEGER,\n    Biography         TEXT,\n    Gender            TEXT,\n    Ethnicity         TEXT,\n    NetWorth          TEXT\n)"
            },
            {
                "name": "movie",
                "sql": "CREATE TABLE movie\n(\n    MovieID        INTEGER\n        constraint movie_pk\n            primary key,\n    Title          TEXT,\n    \"MPAA Rating\"  TEXT,\n    Budget         INTEGER,\n    Gross          INTEGER,\n    \"Release Date\" TEXT,\n    Genre          TEXT,\n    Runtime        INTEGER,\n    Rating         REAL,\n    \"Rating Count\" INTEGER,\n    Summary        TEXT\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    MovieID          INTEGER,\n    ActorID          INTEGER,\n    \"Character Name\" TEXT,\n    creditOrder      INTEGER,\n    pay              TEXT,\n    screentime       TEXT,\n    primary key (MovieID, ActorID),\n    foreign key (ActorID) references actor(ActorID),\n    foreign key (MovieID) references movie(MovieID)\n)"
            }
        ],
        "original": [
            "citeseer",
            "student_club",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "cookbook",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "music_platform_2",
            "movie"
        ]
    },
    {
        "name": "book_publishing_company_ext",
        "tables": [
            {
                "name": "authors",
                "sql": "CREATE TABLE authors\n(\n    au_id    TEXT\n        primary key,\n    au_lname TEXT not null,\n    au_fname TEXT not null,\n    phone    TEXT    not null,\n    address  TEXT,\n    city     TEXT,\n    state    TEXT,\n    zip      TEXT,\n    contract TEXT     not null\n)"
            },
            {
                "name": "jobs",
                "sql": "CREATE TABLE jobs\n(\n    job_id   INTEGER\n        primary key,\n    job_desc TEXT not null,\n    min_lvl  INTEGER     not null,\n    max_lvl  INTEGER     not null\n)"
            },
            {
                "name": "publishers",
                "sql": "CREATE TABLE publishers\n(\n    pub_id   TEXT\n        primary key,\n    pub_name TEXT,\n    city     TEXT,\n    state    TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "employee",
                "sql": "CREATE TABLE employee\n(\n    emp_id    TEXT\n        primary key,\n    fname     TEXT not null,\n    minit     TEXT,\n    lname     TEXT not null,\n    job_id    INTEGER     not null,\n    job_lvl   INTEGER,\n    pub_id    TEXT     not null,\n    hire_date DATETIME    not null,\n    foreign key (job_id) references jobs(job_id)\n            on update cascade on delete cascade,\n    foreign key (pub_id) references publishers(pub_id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "pub_info",
                "sql": "CREATE TABLE pub_info\n(\n    pub_id  TEXT\n        primary key,\n    logo    BLOB,\n    pr_info TEXT,\n    foreign key (pub_id) references publishers(pub_id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "stores",
                "sql": "CREATE TABLE stores\n(\n    stor_id     TEXT\n        primary key,\n    stor_name    TEXT,\n    stor_address TEXT,\n    city         TEXT,\n    state        TEXT,\n    zip          TEXT\n)"
            },
            {
                "name": "discounts",
                "sql": "CREATE TABLE discounts\n(\n    discounttype TEXT   not null,\n    stor_id      TEXT,\n    lowqty       INTEGER,\n    highqty      INTEGER,\n    discount     REAL not null,\n    foreign key (stor_id)  references stores(stor_id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "titles",
                "sql": "CREATE TABLE titles\n(\n    title_id  TEXT\n        primary key,\n    title     TEXT not null,\n    type      TEXT    not null,\n    pub_id    TEXT,\n    price     REAL,\n    advance   REAL,\n    royalty   INTEGER,\n    ytd_sales INTEGER,\n    notes     TEXT,\n    pubdate   DATETIME    not null,\n    foreign key (pub_id) references publishers(pub_id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "roysched",
                "sql": "CREATE TABLE roysched\n(\n    title_id TEXT not null,\n    lorange  INTEGER,\n    hirange  INTEGER,\n    royalty  INTEGER,\n    foreign key (title_id)  references titles(title_id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sales",
                "sql": "CREATE TABLE sales\n(\n    stor_id  TEXT     not null,\n    ord_num  TEXT  not null,\n    ord_date DATETIME    not null,\n    qty      INTEGER     not null,\n    payterms TEXT  not null,\n    title_id TEXT   not null,\n    primary key (stor_id, ord_num, title_id),\n    foreign key (stor_id)   references stores(stor_id)\n            on update cascade on delete cascade,\n    foreign key (title_id)  references titles(title_id)\n            on update cascade on delete cascade\n\n)"
            },
            {
                "name": "titleauthor",
                "sql": "CREATE TABLE titleauthor\n(\n    au_id      TEXT not null,\n    title_id   TEXT  not null,\n    au_ord     INTEGER,\n    royaltyper INTEGER,\n    primary key (au_id, title_id),\n    foreign key (au_id) references authors(au_id)\n            on update cascade on delete cascade,\n    foreign key (title_id)    references titles (title_id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Player_Attributes",
                "sql": "CREATE TABLE \"Player_Attributes\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_fifa_api_id`\tINTEGER,\n\t`player_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`overall_rating`\tINTEGER,\n\t`potential`\tINTEGER,\n\t`preferred_foot`\tTEXT,\n\t`attacking_work_rate`\tTEXT,\n\t`defensive_work_rate`\tTEXT,\n\t`crossing`\tINTEGER,\n\t`finishing`\tINTEGER,\n\t`heading_accuracy`\tINTEGER,\n\t`short_passing`\tINTEGER,\n\t`volleys`\tINTEGER,\n\t`dribbling`\tINTEGER,\n\t`curve`\tINTEGER,\n\t`free_kick_accuracy`\tINTEGER,\n\t`long_passing`\tINTEGER,\n\t`ball_control`\tINTEGER,\n\t`acceleration`\tINTEGER,\n\t`sprint_speed`\tINTEGER,\n\t`agility`\tINTEGER,\n\t`reactions`\tINTEGER,\n\t`balance`\tINTEGER,\n\t`shot_power`\tINTEGER,\n\t`jumping`\tINTEGER,\n\t`stamina`\tINTEGER,\n\t`strength`\tINTEGER,\n\t`long_shots`\tINTEGER,\n\t`aggression`\tINTEGER,\n\t`interceptions`\tINTEGER,\n\t`positioning`\tINTEGER,\n\t`vision`\tINTEGER,\n\t`penalties`\tINTEGER,\n\t`marking`\tINTEGER,\n\t`standing_tackle`\tINTEGER,\n\t`sliding_tackle`\tINTEGER,\n\t`gk_diving`\tINTEGER,\n\t`gk_handling`\tINTEGER,\n\t`gk_kicking`\tINTEGER,\n\t`gk_positioning`\tINTEGER,\n\t`gk_reflexes`\tINTEGER,\n\tFOREIGN KEY(`player_fifa_api_id`) REFERENCES `Player`(`player_fifa_api_id`),\n\tFOREIGN KEY(`player_api_id`) REFERENCES `Player`(`player_api_id`)\n)"
            },
            {
                "name": "Player",
                "sql": "CREATE TABLE `Player` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_api_id`\tINTEGER UNIQUE,\n\t`player_name`\tTEXT,\n\t`player_fifa_api_id`\tINTEGER UNIQUE,\n\t`birthday`\tTEXT,\n\t`height`\tINTEGER,\n\t`weight`\tINTEGER\n)"
            },
            {
                "name": "League",
                "sql": "CREATE TABLE `League` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`country_id`\tINTEGER,\n\t`name`\tTEXT UNIQUE,\n\tFOREIGN KEY(`country_id`) REFERENCES `country`(`id`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`name`\tTEXT UNIQUE\n)"
            },
            {
                "name": "Team",
                "sql": "CREATE TABLE \"Team\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_api_id`\tINTEGER UNIQUE,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_long_name`\tTEXT,\n\t`team_short_name`\tTEXT\n)"
            },
            {
                "name": "Team_Attributes",
                "sql": "CREATE TABLE `Team_Attributes` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`buildUpPlaySpeed`\tINTEGER,\n\t`buildUpPlaySpeedClass`\tTEXT,\n\t`buildUpPlayDribbling`\tINTEGER,\n\t`buildUpPlayDribblingClass`\tTEXT,\n\t`buildUpPlayPassing`\tINTEGER,\n\t`buildUpPlayPassingClass`\tTEXT,\n\t`buildUpPlayPositioningClass`\tTEXT,\n\t`chanceCreationPassing`\tINTEGER,\n\t`chanceCreationPassingClass`\tTEXT,\n\t`chanceCreationCrossing`\tINTEGER,\n\t`chanceCreationCrossingClass`\tTEXT,\n\t`chanceCreationShooting`\tINTEGER,\n\t`chanceCreationShootingClass`\tTEXT,\n\t`chanceCreationPositioningClass`\tTEXT,\n\t`defencePressure`\tINTEGER,\n\t`defencePressureClass`\tTEXT,\n\t`defenceAggression`\tINTEGER,\n\t`defenceAggressionClass`\tTEXT,\n\t`defenceTeamWidth`\tINTEGER,\n\t`defenceTeamWidthClass`\tTEXT,\n\t`defenceDefenderLineClass`\tTEXT,\n\tFOREIGN KEY(`team_fifa_api_id`) REFERENCES `Team`(`team_fifa_api_id`),\n\tFOREIGN KEY(`team_api_id`) REFERENCES `Team`(`team_api_id`)\n)"
            },
            {
                "name": "Match",
                "sql": "CREATE TABLE \"Match\"\n(\n    id               INTEGER\n        primary key autoincrement,\n    country_id       INTEGER\n        references Country,\n    league_id        INTEGER\n        references League,\n    season           TEXT,\n    stage            INTEGER,\n    date             TEXT,\n    match_api_id     INTEGER\n        unique,\n    home_team_api_id INTEGER\n        references Team (team_api_id),\n    away_team_api_id INTEGER\n        references Team (team_api_id),\n    home_team_goal   INTEGER,\n    away_team_goal   INTEGER,\n    home_player_X1   INTEGER,\n    home_player_X2   INTEGER,\n    home_player_X3   INTEGER,\n    home_player_X4   INTEGER,\n    home_player_X5   INTEGER,\n    home_player_X6   INTEGER,\n    home_player_X7   INTEGER,\n    home_player_X8   INTEGER,\n    home_player_X9   INTEGER,\n    home_player_X10  INTEGER,\n    home_player_X11  INTEGER,\n    away_player_X1   INTEGER,\n    away_player_X2   INTEGER,\n    away_player_X3   INTEGER,\n    away_player_X4   INTEGER,\n    away_player_X5   INTEGER,\n    away_player_X6   INTEGER,\n    away_player_X7   INTEGER,\n    away_player_X8   INTEGER,\n    away_player_X9   INTEGER,\n    away_player_X10  INTEGER,\n    away_player_X11  INTEGER,\n    home_player_Y1   INTEGER,\n    home_player_Y2   INTEGER,\n    home_player_Y3   INTEGER,\n    home_player_Y4   INTEGER,\n    home_player_Y5   INTEGER,\n    home_player_Y6   INTEGER,\n    home_player_Y7   INTEGER,\n    home_player_Y8   INTEGER,\n    home_player_Y9   INTEGER,\n    home_player_Y10  INTEGER,\n    home_player_Y11  INTEGER,\n    away_player_Y1   INTEGER,\n    away_player_Y2   INTEGER,\n    away_player_Y3   INTEGER,\n    away_player_Y4   INTEGER,\n    away_player_Y5   INTEGER,\n    away_player_Y6   INTEGER,\n    away_player_Y7   INTEGER,\n    away_player_Y8   INTEGER,\n    away_player_Y9   INTEGER,\n    away_player_Y10  INTEGER,\n    away_player_Y11  INTEGER,\n    home_player_1    INTEGER\n        references Player (player_api_id),\n    home_player_2    INTEGER\n        references Player (player_api_id),\n    home_player_3    INTEGER\n        references Player (player_api_id),\n    home_player_4    INTEGER\n        references Player (player_api_id),\n    home_player_5    INTEGER\n        references Player (player_api_id),\n    home_player_6    INTEGER\n        references Player (player_api_id),\n    home_player_7    INTEGER\n        references Player (player_api_id),\n    home_player_8    INTEGER\n        references Player (player_api_id),\n    home_player_9    INTEGER\n        references Player (player_api_id),\n    home_player_10   INTEGER\n        references Player (player_api_id),\n    home_player_11   INTEGER\n        references Player (player_api_id),\n    away_player_1    INTEGER\n        references Player (player_api_id),\n    away_player_2    INTEGER\n        references Player (player_api_id),\n    away_player_3    INTEGER\n        references Player (player_api_id),\n    away_player_4    INTEGER\n        references Player (player_api_id),\n    away_player_5    INTEGER\n        references Player (player_api_id),\n    away_player_6    INTEGER\n        references Player (player_api_id),\n    away_player_7    INTEGER\n        references Player (player_api_id),\n    away_player_8    INTEGER\n        references Player (player_api_id),\n    away_player_9    INTEGER\n        references Player (player_api_id),\n    away_player_10   INTEGER\n        references Player (player_api_id),\n    away_player_11   INTEGER\n        references Player (player_api_id),\n    goal             TEXT,\n    shoton           TEXT,\n    shotoff          TEXT,\n    foulcommit       TEXT,\n    card             TEXT,\n    \"cross\"          TEXT,\n    corner           TEXT,\n    possession       TEXT,\n    B365H            REAL,\n    B365D            REAL,\n    B365A            REAL,\n    BWH              REAL,\n    BWD              REAL,\n    BWA              REAL,\n    IWH              REAL,\n    IWD              REAL,\n    IWA              REAL,\n    LBH              REAL,\n    LBD              REAL,\n    LBA              REAL,\n    PSH              REAL,\n    PSD              REAL,\n    PSA              REAL,\n    WHH              REAL,\n    WHD              REAL,\n    WHA              REAL,\n    SJH              REAL,\n    SJD              REAL,\n    SJA              REAL,\n    VCH              REAL,\n    VCD              REAL,\n    VCA              REAL,\n    GBH              REAL,\n    GBD              REAL,\n    GBA              REAL,\n    BSH              REAL,\n    BSD              REAL,\n    BSA              REAL\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "book_publishing_company",
            "toxicology",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "european_football_2",
            "mental_health_survey",
            "legislator",
            "shooting",
            "image_and_language",
            "college_completion",
            "trains",
            "menu",
            "disney",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "social_media_ext",
        "tables": [
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    LocationID INTEGER\n        constraint location_pk\n            primary key,\n    Country    TEXT,\n    State      TEXT,\n    StateCode  TEXT,\n    City       TEXT\n)"
            },
            {
                "name": "user",
                "sql": "CREATE TABLE user\n(\n    UserID TEXT\n        constraint user_pk\n            primary key,\n    Gender TEXT\n)"
            },
            {
                "name": "twitter",
                "sql": "CREATE TABLE twitter\n(\n    TweetID         TEXT\n            primary key,\n    Weekday         TEXT,\n    Hour         INTEGER,\n    Day          INTEGER,\n    Lang         TEXT,\n    IsReshare    TEXT,\n    Reach        INTEGER,\n    RetweetCount INTEGER,\n    Likes        INTEGER,\n    Klout        INTEGER,\n    Sentiment    REAL,\n    \"text\"         TEXT,\n    LocationID   INTEGER,\n    UserID       TEXT,\n    foreign key (LocationID) references location(LocationID),\n    foreign key (UserID) references user(UserID)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "social_media",
            "toxicology",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "disney",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "simpson_episodes_ext",
        "tables": [
            {
                "name": "Episode",
                "sql": "CREATE TABLE \"Episode\"\n(\n    episode_id       TEXT\n        constraint Episode_pk\n            primary key,\n    season           INTEGER,\n    episode          INTEGER,\n    number_in_series INTEGER,\n    title            TEXT,\n    summary          TEXT,\n    air_date         TEXT,\n    episode_image    TEXT,\n    rating           REAL,\n    votes            INTEGER\n)"
            },
            {
                "name": "Person",
                "sql": "CREATE TABLE Person\n(\n    name          TEXT\n        constraint Person_pk\n            primary key,\n    birthdate     TEXT,\n    birth_name    TEXT,\n    birth_place   TEXT,\n    birth_region  TEXT,\n    birth_country TEXT,\n    height_meters REAL,\n    nickname      TEXT\n)"
            },
            {
                "name": "Award",
                "sql": "CREATE TABLE Award\n(\n    award_id       INTEGER\n            primary key,\n    organization   TEXT,\n    year           INTEGER,\n    award_category TEXT,\n    award          TEXT,\n    person         TEXT,\n    role           TEXT,\n    episode_id     TEXT,\n    season         TEXT,\n    song           TEXT,\n    result         TEXT,\n    foreign key (person) references Person(name),\n    foreign key (episode_id) references Episode(episode_id)\n)"
            },
            {
                "name": "Character_Award",
                "sql": "CREATE TABLE Character_Award\n(\n    award_id  INTEGER,\n    character TEXT,\n    foreign key (award_id) references Award(award_id)\n)"
            },
            {
                "name": "Credit",
                "sql": "CREATE TABLE Credit\n(\n    episode_id TEXT,\n    category   TEXT,\n    person     TEXT,\n    role       TEXT,\n    credited   TEXT,\n    foreign key (episode_id) references Episode(episode_id),\n    foreign key (person) references Person(name)\n)"
            },
            {
                "name": "Keyword",
                "sql": "CREATE TABLE Keyword\n(\n    episode_id TEXT,\n    keyword    TEXT,\n    primary key (episode_id, keyword),\n    foreign key (episode_id) references Episode(episode_id)\n)"
            },
            {
                "name": "Vote",
                "sql": "CREATE TABLE Vote\n(\n    episode_id TEXT,\n    stars      INTEGER,\n    votes      INTEGER,\n    percent    REAL,\n    foreign key (episode_id) references Episode(episode_id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "simpson_episodes",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "food_inspection",
            "menu",
            "app_store"
        ]
    },
    {
        "name": "regional_sales_ext",
        "tables": [
            {
                "name": "Customers",
                "sql": "CREATE TABLE Customers\n(\n    CustomerID       INTEGER\n        constraint Customers_pk\n            primary key,\n    \"Customer Names\" TEXT\n)"
            },
            {
                "name": "Products",
                "sql": "CREATE TABLE Products\n(\n    ProductID      INTEGER\n        constraint Products_pk\n            primary key,\n    \"Product Name\" TEXT\n)"
            },
            {
                "name": "Regions",
                "sql": "CREATE TABLE Regions\n(\n    StateCode TEXT\n        constraint Regions_pk\n            primary key,\n    State     TEXT,\n    Region    TEXT\n)"
            },
            {
                "name": "Sales Team",
                "sql": "CREATE TABLE \"Sales Team\"\n(\n    SalesTeamID  INTEGER\n        constraint \"Sales Team_pk\"\n            primary key,\n    \"Sales Team\" TEXT,\n    Region       TEXT\n)"
            },
            {
                "name": "Store Locations",
                "sql": "CREATE TABLE \"Store Locations\"\n(\n    StoreID            INTEGER\n        constraint \"Store Locations_pk\"\n            primary key,\n    \"City Name\"        TEXT,\n    County             TEXT,\n    StateCode          TEXT\n        constraint \"Store Locations_Regions_StateCode_fk\"\n            references Regions(StateCode),\n    State              TEXT,\n    Type               TEXT,\n    Latitude           REAL,\n    Longitude          REAL,\n    AreaCode           INTEGER,\n    Population         INTEGER,\n    \"Household Income\" INTEGER,\n    \"Median Income\"    INTEGER,\n    \"Land Area\"        INTEGER,\n    \"Water Area\"       INTEGER,\n    \"Time Zone\"        TEXT\n)"
            },
            {
                "name": "Sales Orders",
                "sql": "CREATE TABLE \"Sales Orders\"\n(\n    OrderNumber        TEXT\n        constraint \"Sales Orders_pk\"\n            primary key,\n    \"Sales Channel\"    TEXT,\n    WarehouseCode      TEXT,\n    ProcuredDate       TEXT,\n    OrderDate          TEXT,\n    ShipDate           TEXT,\n    DeliveryDate       TEXT,\n    CurrencyCode       TEXT,\n    _SalesTeamID       INTEGER\n        constraint \"Sales Orders_Sales Team_SalesTeamID_fk\"\n            references \"Sales Team\"(SalesTeamID),\n    _CustomerID        INTEGER\n        constraint \"Sales Orders_Customers_CustomerID_fk\"\n            references Customers(CustomerID),\n    _StoreID           INTEGER\n        constraint \"Sales Orders_Store Locations_StoreID_fk\"\n            references \"Store Locations\"(StoreID),\n    _ProductID         INTEGER\n        constraint \"Sales Orders_Products_ProductID_fk\"\n            references Products(ProductID),\n    \"Order Quantity\"   INTEGER,\n    \"Discount Applied\" REAL,\n    \"Unit Price\"       TEXT,\n    \"Unit Cost\"        TEXT\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "Method",
                "sql": "CREATE TABLE \"Method\"\n(\n    Id            INTEGER not null\n        primary key autoincrement,\n    Name          TEXT,\n    FullComment   TEXT,\n    Summary       TEXT,\n    ApiCalls      TEXT,\n    CommentIsXml  INTEGER,\n    SampledAt     INTEGER,\n    SolutionId    INTEGER,\n    Lang          TEXT,\n    NameTokenized TEXT\n)"
            },
            {
                "name": "MethodParameter",
                "sql": "CREATE TABLE \"MethodParameter\"\n(\n    Id       INTEGER not null\n        primary key autoincrement,\n    MethodId TEXT,\n    Type     TEXT,\n    Name     TEXT\n)"
            },
            {
                "name": "Repo",
                "sql": "CREATE TABLE Repo\n(\n    Id            INTEGER not null\n        primary key autoincrement,\n    Url           TEXT,\n    Stars         INTEGER,\n    Forks         INTEGER,\n    Watchers      INTEGER,\n    ProcessedTime INTEGER\n)"
            },
            {
                "name": "Solution",
                "sql": "CREATE TABLE Solution\n(\n    Id            INTEGER not null\n        primary key autoincrement,\n    RepoId        INTEGER,\n    Path          TEXT,\n    ProcessedTime INTEGER,\n    WasCompiled   INTEGER\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "regional_sales",
            "toxicology",
            "student_club",
            "superhero",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "world",
            "trains",
            "codebase_comments",
            "ice_hockey_draft",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "music_platform_2_ext",
        "tables": [
            {
                "name": "runs",
                "sql": "CREATE TABLE runs (\n        run_at text not null,\n        max_rowid integer not null,\n        reviews_added integer not null\n    )"
            },
            {
                "name": "podcasts",
                "sql": "CREATE TABLE podcasts (\n        podcast_id text primary key,\n        itunes_id integer not null,\n        slug text not null,\n        itunes_url text not null,\n        title text not null\n    )"
            },
            {
                "name": "reviews",
                "sql": "CREATE TABLE \"reviews\"\n(\n    podcast_id TEXT    not null\n        constraint reviews_podcasts_podcast_id_fk\n            references podcasts,\n    title      TEXT    not null,\n    content    TEXT    not null,\n    rating     INTEGER not null,\n    author_id  TEXT    not null,\n    created_at TEXT    not null\n)"
            },
            {
                "name": "categories",
                "sql": "CREATE TABLE \"categories\"\n(\n    podcast_id TEXT not null\n        constraint categories_podcasts_podcast_id_fk\n            references podcasts,\n    category   TEXT not null,\n    constraint \"PRIMARY\"\n        primary key (podcast_id, category)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "actor",
                "sql": "CREATE TABLE actor\n(\n    ActorID           INTEGER\n        constraint actor_pk\n            primary key,\n    Name              TEXT,\n    \"Date of Birth\"   DATE,\n    \"Birth City\"      TEXT,\n    \"Birth Country\"   TEXT,\n    \"Height (Inches)\" INTEGER,\n    Biography         TEXT,\n    Gender            TEXT,\n    Ethnicity         TEXT,\n    NetWorth          TEXT\n)"
            },
            {
                "name": "movie",
                "sql": "CREATE TABLE movie\n(\n    MovieID        INTEGER\n        constraint movie_pk\n            primary key,\n    Title          TEXT,\n    \"MPAA Rating\"  TEXT,\n    Budget         INTEGER,\n    Gross          INTEGER,\n    \"Release Date\" TEXT,\n    Genre          TEXT,\n    Runtime        INTEGER,\n    Rating         REAL,\n    \"Rating Count\" INTEGER,\n    Summary        TEXT\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    MovieID          INTEGER,\n    ActorID          INTEGER,\n    \"Character Name\" TEXT,\n    creditOrder      INTEGER,\n    pay              TEXT,\n    screentime       TEXT,\n    primary key (MovieID, ActorID),\n    foreign key (ActorID) references actor(ActorID),\n    foreign key (MovieID) references movie(MovieID)\n)"
            }
        ],
        "original": [
            "music_platform_2",
            "toxicology",
            "student_club",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie"
        ]
    },
    {
        "name": "movie_3_ext",
        "tables": [
            {
                "name": "film_text",
                "sql": "CREATE TABLE film_text\n(\n    film_id     INTEGER     not null\n        primary key,\n    title       TEXT not null,\n    description TEXT         null\n)"
            },
            {
                "name": "actor",
                "sql": "CREATE TABLE \"actor\"\n(\n    actor_id    INTEGER\n        primary key autoincrement,\n    first_name  TEXT                               not null,\n    last_name   TEXT                               not null,\n    last_update DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "address",
                "sql": "CREATE TABLE \"address\"\n(\n    address_id  INTEGER\n        primary key autoincrement,\n    address     TEXT                               not null,\n    address2    TEXT,\n    district    TEXT                               not null,\n    city_id     INTEGER                            not null\n        references city\n            on update cascade,\n    postal_code TEXT,\n    phone       TEXT                               not null,\n    last_update DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "category",
                "sql": "CREATE TABLE \"category\"\n(\n    category_id INTEGER\n        primary key autoincrement,\n    name        TEXT                               not null,\n    last_update DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "city",
                "sql": "CREATE TABLE \"city\"\n(\n    city_id     INTEGER\n        primary key autoincrement,\n    city        TEXT                               not null,\n    country_id  INTEGER                            not null\n        references country\n            on update cascade,\n    last_update DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "country",
                "sql": "CREATE TABLE \"country\"\n(\n    country_id  INTEGER\n        primary key autoincrement,\n    country     TEXT                               not null,\n    last_update DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "customer",
                "sql": "CREATE TABLE \"customer\"\n(\n    customer_id INTEGER\n        primary key autoincrement,\n    store_id    INTEGER                            not null\n        references store\n            on update cascade,\n    first_name  TEXT                               not null,\n    last_name   TEXT                               not null,\n    email       TEXT,\n    address_id  INTEGER                            not null\n        references address\n            on update cascade,\n    active      INTEGER  default 1                 not null,\n    create_date DATETIME                           not null,\n    last_update DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "film",
                "sql": "CREATE TABLE \"film\"\n(\n    film_id              INTEGER\n        primary key autoincrement,\n    title                TEXT                               not null,\n    description          TEXT,\n    release_year         TEXT,\n    language_id          INTEGER                            not null\n        references language\n            on update cascade,\n    original_language_id INTEGER\n        references language\n            on update cascade,\n    rental_duration      INTEGER  default 3                 not null,\n    rental_rate          REAL     default 4.99              not null,\n    length               INTEGER,\n    replacement_cost     REAL     default 19.99             not null,\n    rating               TEXT     default 'G',\n    special_features     TEXT,\n    last_update          DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "film_actor",
                "sql": "CREATE TABLE \"film_actor\"\n(\n    actor_id    INTEGER                            not null\n        references actor\n            on update cascade,\n    film_id     INTEGER                            not null\n        references film\n            on update cascade,\n    last_update DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (actor_id, film_id)\n)"
            },
            {
                "name": "film_category",
                "sql": "CREATE TABLE \"film_category\"\n(\n    film_id     INTEGER                            not null\n        references film\n            on update cascade,\n    category_id INTEGER                            not null\n        references category\n            on update cascade,\n    last_update DATETIME default CURRENT_TIMESTAMP not null,\n    primary key (film_id, category_id)\n)"
            },
            {
                "name": "inventory",
                "sql": "CREATE TABLE \"inventory\"\n(\n    inventory_id INTEGER\n        primary key autoincrement,\n    film_id      INTEGER                            not null\n        references film\n            on update cascade,\n    store_id     INTEGER                            not null\n        references store\n            on update cascade,\n    last_update  DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "language",
                "sql": "CREATE TABLE \"language\"\n(\n    language_id INTEGER\n        primary key autoincrement,\n    name        TEXT                               not null,\n    last_update DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "payment",
                "sql": "CREATE TABLE \"payment\"\n(\n    payment_id   INTEGER\n        primary key autoincrement,\n    customer_id  INTEGER                            not null\n        references customer\n            on update cascade,\n    staff_id     INTEGER                            not null\n        references staff\n            on update cascade,\n    rental_id    INTEGER\n                                                    references rental\n                                                        on update cascade on delete set null,\n    amount       REAL                               not null,\n    payment_date DATETIME                           not null,\n    last_update  DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "rental",
                "sql": "CREATE TABLE \"rental\"\n(\n    rental_id    INTEGER\n        primary key autoincrement,\n    rental_date  DATETIME                           not null,\n    inventory_id INTEGER                            not null\n        references inventory\n            on update cascade,\n    customer_id  INTEGER                            not null\n        references customer\n            on update cascade,\n    return_date  DATETIME,\n    staff_id     INTEGER                            not null\n        references staff\n            on update cascade,\n    last_update  DATETIME default CURRENT_TIMESTAMP not null,\n    unique (rental_date, inventory_id, customer_id)\n)"
            },
            {
                "name": "staff",
                "sql": "CREATE TABLE \"staff\"\n(\n    staff_id    INTEGER\n        primary key autoincrement,\n    first_name  TEXT                               not null,\n    last_name   TEXT                               not null,\n    address_id  INTEGER                            not null\n        references address\n            on update cascade,\n    picture     BLOB,\n    email       TEXT,\n    store_id    INTEGER                            not null\n        references store\n            on update cascade,\n    active      INTEGER  default 1                 not null,\n    username    TEXT                               not null,\n    password    TEXT,\n    last_update DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "store",
                "sql": "CREATE TABLE \"store\"\n(\n    store_id         INTEGER\n        primary key autoincrement,\n    manager_staff_id INTEGER                            not null\n        unique\n        references staff\n            on update cascade,\n    address_id       INTEGER                            not null\n        references address\n            on update cascade,\n    last_update      DATETIME default CURRENT_TIMESTAMP not null\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "all_prevalences",
                "sql": "CREATE TABLE all_prevalences\n(\n    ITEM                    TEXT\n            primary key,\n    \"POPULATION TYPE\"       TEXT,\n    OCCURRENCES             INTEGER,\n    \"POPULATION COUNT\"      INTEGER,\n    \"PREVALENCE RATE\"       REAL,\n    \"PREVALENCE PERCENTAGE\" REAL\n)"
            },
            {
                "name": "patients",
                "sql": "CREATE TABLE patients\n(\n    patient    TEXT\n            primary key,\n    birthdate  DATE,\n    deathdate  DATE,\n    ssn        TEXT,\n    drivers    TEXT,\n    passport   TEXT,\n    prefix     TEXT,\n    first      TEXT,\n    last       TEXT,\n    suffix     TEXT,\n    maiden     TEXT,\n    marital    TEXT,\n    race       TEXT,\n    ethnicity  TEXT,\n    gender     TEXT,\n    birthplace TEXT,\n    address    TEXT\n)"
            },
            {
                "name": "encounters",
                "sql": "CREATE TABLE encounters\n(\n    ID                TEXT\n            primary key,\n    DATE              DATE,\n    PATIENT           TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "allergies",
                "sql": "CREATE TABLE allergies\n(\n    START       TEXT,\n    STOP        TEXT,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "careplans",
                "sql": "CREATE TABLE careplans\n(\n    ID                TEXT,\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              REAL,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "conditions",
                "sql": "CREATE TABLE conditions\n(\n    START       DATE,\n    STOP        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient),\n    foreign key (DESCRIPTION) references all_prevalences(ITEM)\n)"
            },
            {
                "name": "immunizations",
                "sql": "CREATE TABLE immunizations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (DATE, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "medications",
                "sql": "CREATE TABLE medications\n(\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    primary key (START, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "observations",
                "sql": "CREATE TABLE observations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        TEXT,\n    DESCRIPTION TEXT,\n    VALUE       REAL,\n    UNITS       TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "procedures",
                "sql": "CREATE TABLE procedures\n(\n    DATE              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "claims",
                "sql": "CREATE TABLE \"claims\"\n(\n    ID             TEXT\n        primary key,\n    PATIENT        TEXT\n        references patients,\n    BILLABLEPERIOD DATE,\n    ORGANIZATION   TEXT,\n    ENCOUNTER      TEXT\n        references encounters,\n    DIAGNOSIS      TEXT,\n    TOTAL          INTEGER\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "people",
                "sql": "CREATE TABLE people\n(\n    \"Customer ID\"   TEXT,\n    \"Customer Name\" TEXT,\n    Segment         TEXT,\n    Country         TEXT,\n    City            TEXT,\n    State           TEXT,\n    \"Postal Code\"   INTEGER,\n    Region          TEXT,\n    primary key (\"Customer ID\", Region)\n)"
            },
            {
                "name": "product",
                "sql": "CREATE TABLE product\n(\n    \"Product ID\"   TEXT,\n    \"Product Name\" TEXT,\n    Category       TEXT,\n    \"Sub-Category\" TEXT,\n    Region         TEXT,\n    primary key (\"Product ID\", Region)\n)"
            },
            {
                "name": "central_superstore",
                "sql": "CREATE TABLE central_superstore\n(\n    \"Row ID\"      INTEGER\n            primary key,\n    \"Order ID\"    TEXT,\n    \"Order Date\"  DATE,\n    \"Ship Date\"   DATE,\n    \"Ship Mode\"   TEXT,\n    \"Customer ID\" TEXT,\n    Region        TEXT,\n    \"Product ID\"  TEXT,\n    Sales         REAL,\n    Quantity      INTEGER,\n    Discount      REAL,\n    Profit        REAL,\n    foreign key (\"Customer ID\", Region) references people(\"Customer ID\",Region),\n    foreign key (\"Product ID\", Region) references product(\"Product ID\",Region)\n)"
            },
            {
                "name": "east_superstore",
                "sql": "CREATE TABLE east_superstore\n(\n    \"Row ID\"      INTEGER\n            primary key,\n    \"Order ID\"    TEXT,\n    \"Order Date\"  DATE,\n    \"Ship Date\"   DATE,\n    \"Ship Mode\"   TEXT,\n    \"Customer ID\" TEXT,\n    Region        TEXT,\n    \"Product ID\"  TEXT,\n    Sales         REAL,\n    Quantity      INTEGER,\n    Discount      REAL,\n    Profit        REAL,\n    foreign key (\"Customer ID\", Region) references people(\"Customer ID\",Region),\n    foreign key (\"Product ID\", Region) references product(\"Product ID\",Region)\n)"
            },
            {
                "name": "south_superstore",
                "sql": "CREATE TABLE south_superstore\n(\n    \"Row ID\"      INTEGER\n            primary key,\n    \"Order ID\"    TEXT,\n    \"Order Date\"  DATE,\n    \"Ship Date\"   DATE,\n    \"Ship Mode\"   TEXT,\n    \"Customer ID\" TEXT,\n    Region        TEXT,\n    \"Product ID\"  TEXT,\n    Sales         REAL,\n    Quantity      INTEGER,\n    Discount      REAL,\n    Profit        REAL,\n    foreign key (\"Customer ID\", Region) references people(\"Customer ID\",Region),\n    foreign key (\"Product ID\", Region) references product(\"Product ID\",Region)\n)"
            },
            {
                "name": "west_superstore",
                "sql": "CREATE TABLE west_superstore\n(\n    \"Row ID\"      INTEGER\n            primary key,\n    \"Order ID\"    TEXT,\n    \"Order Date\"  DATE,\n    \"Ship Date\"   DATE,\n    \"Ship Mode\"   TEXT,\n    \"Customer ID\" TEXT,\n    Region        TEXT,\n    \"Product ID\"  TEXT,\n    Sales         REAL,\n    Quantity      INTEGER,\n    Discount      REAL,\n    Profit        REAL,\n    foreign key (\"Customer ID\", Region) references people(\"Customer ID\",Region),\n    foreign key (\"Product ID\", Region) references product(\"Product ID\",Region)\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "movie_3",
            "toxicology",
            "student_club",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "synthea",
            "airline",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "food_inspection",
            "menu",
            "superstore",
            "app_store"
        ]
    },
    {
        "name": "shakespeare_ext",
        "tables": [
            {
                "name": "chapters",
                "sql": "CREATE TABLE \"chapters\"\n(\n    id          INTEGER\n        primary key autoincrement,\n    Act         INTEGER not null,\n    Scene       INTEGER not null,\n    Description TEXT    not null,\n    work_id     INTEGER not null\n        references works\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE \"characters\"\n(\n    id          INTEGER\n        primary key autoincrement,\n    CharName    TEXT not null,\n    Abbrev      TEXT not null,\n    Description TEXT not null\n)"
            },
            {
                "name": "paragraphs",
                "sql": "CREATE TABLE \"paragraphs\"\n(\n    id           INTEGER\n        primary key autoincrement,\n    ParagraphNum INTEGER           not null,\n    PlainText    TEXT              not null,\n    character_id INTEGER           not null\n        references characters,\n    chapter_id   INTEGER default 0 not null\n        references chapters\n)"
            },
            {
                "name": "works",
                "sql": "CREATE TABLE \"works\"\n(\n    id        INTEGER\n        primary key autoincrement,\n    Title     TEXT    not null,\n    LongTitle TEXT    not null,\n    Date      INTEGER not null,\n    GenreType TEXT    not null\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "breweries",
                "sql": "CREATE TABLE breweries\n(\n    id    INTEGER          not null\n        primary key,\n    name  TEXT null,\n    city  TEXT null,\n    state TEXT null\n)"
            },
            {
                "name": "beers",
                "sql": "CREATE TABLE \"beers\"\n(\n    id         INTEGER not null\n        primary key,\n    brewery_id INTEGER not null\n        constraint beers_ibfk_1\n            references breweries,\n    abv        REAL,\n    ibu        REAL,\n    name       TEXT    not null,\n    style      TEXT,\n    ounces     REAL    not null\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "shakespeare",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "craftbeer",
            "menu",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "retail_world_ext",
        "tables": [
            {
                "name": "Categories",
                "sql": "CREATE TABLE Categories\n(\n    CategoryID INTEGER PRIMARY KEY AUTOINCREMENT,\n    CategoryName TEXT,\n    Description TEXT\n)"
            },
            {
                "name": "Customers",
                "sql": "CREATE TABLE Customers\n(\n    CustomerID INTEGER PRIMARY KEY AUTOINCREMENT,\n    CustomerName TEXT,\n    ContactName TEXT,\n    Address TEXT,\n    City TEXT,\n    PostalCode TEXT,\n    Country TEXT\n)"
            },
            {
                "name": "Employees",
                "sql": "CREATE TABLE Employees\n(\n    EmployeeID INTEGER PRIMARY KEY AUTOINCREMENT,\n    LastName TEXT,\n    FirstName TEXT,\n    BirthDate DATE,\n    Photo TEXT,\n    Notes TEXT\n)"
            },
            {
                "name": "Shippers",
                "sql": "CREATE TABLE Shippers(\n    ShipperID INTEGER PRIMARY KEY AUTOINCREMENT,\n    ShipperName TEXT,\n    Phone TEXT\n)"
            },
            {
                "name": "Suppliers",
                "sql": "CREATE TABLE Suppliers(\n    SupplierID INTEGER PRIMARY KEY AUTOINCREMENT,\n    SupplierName TEXT,\n    ContactName TEXT,\n    Address TEXT,\n    City TEXT,\n    PostalCode TEXT,\n    Country TEXT,\n    Phone TEXT\n)"
            },
            {
                "name": "Products",
                "sql": "CREATE TABLE Products(\n    ProductID INTEGER PRIMARY KEY AUTOINCREMENT,\n    ProductName TEXT,\n    SupplierID INTEGER,\n    CategoryID INTEGER,\n    Unit TEXT,\n    Price REAL DEFAULT 0,\n\tFOREIGN KEY (CategoryID) REFERENCES Categories (CategoryID),\n\tFOREIGN KEY (SupplierID) REFERENCES Suppliers (SupplierID)\n)"
            },
            {
                "name": "Orders",
                "sql": "CREATE TABLE Orders(\n    OrderID INTEGER PRIMARY KEY AUTOINCREMENT,\n    CustomerID INTEGER,\n    EmployeeID INTEGER,\n    OrderDate DATETIME,\n    ShipperID INTEGER,\n    FOREIGN KEY (EmployeeID) REFERENCES Employees (EmployeeID),\n    FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID),\n    FOREIGN KEY (ShipperID) REFERENCES Shippers (ShipperID)\n)"
            },
            {
                "name": "OrderDetails",
                "sql": "CREATE TABLE OrderDetails(\n    OrderDetailID INTEGER PRIMARY KEY AUTOINCREMENT,\n    OrderID INTEGER,\n    ProductID INTEGER,\n    Quantity INTEGER,\n\tFOREIGN KEY (OrderID) REFERENCES Orders (OrderID),\n\tFOREIGN KEY (ProductID) REFERENCES Products (ProductID)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "retail_world",
            "toxicology",
            "student_club",
            "superhero",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "food_inspection_ext",
        "tables": [
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "course",
                "sql": "CREATE TABLE course\n(\n    course_id   INTEGER\n        constraint course_pk\n            primary key,\n    courseLevel TEXT\n)"
            },
            {
                "name": "person",
                "sql": "CREATE TABLE person\n(\n    p_id           INTEGER\n        constraint person_pk\n            primary key,\n    professor      INTEGER,\n    student        INTEGER,\n    hasPosition    TEXT,\n    inPhase        TEXT,\n    yearsInProgram TEXT\n)"
            },
            {
                "name": "advisedBy",
                "sql": "CREATE TABLE \"advisedBy\"\n(\n    p_id       INTEGER,\n    p_id_dummy INTEGER,\n    constraint advisedBy_pk\n        primary key (p_id, p_id_dummy),\n    constraint advisedBy_person_p_id_p_id_fk\n        foreign key (p_id, p_id_dummy) references person (p_id, p_id)\n)"
            },
            {
                "name": "taughtBy",
                "sql": "CREATE TABLE taughtBy\n(\n    course_id INTEGER,\n    p_id      INTEGER,\n    primary key (course_id, p_id),\n    foreign key (p_id) references person(p_id),\n    foreign key (course_id) references course(course_id)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "food_inspection",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "computer_student",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "movielens_ext",
        "tables": [
            {
                "name": "users",
                "sql": "CREATE TABLE users\n(\n    userid     INTEGER default 0 not null\n        primary key,\n    age        TEXT    not null,\n    u_gender   TEXT    not null,\n    occupation TEXT   not null\n)"
            },
            {
                "name": "directors",
                "sql": "CREATE TABLE \"directors\"\n(\n    directorid  INTEGER not null\n        primary key,\n    d_quality   INTEGER not null,\n    avg_revenue INTEGER not null\n)"
            },
            {
                "name": "actors",
                "sql": "CREATE TABLE \"actors\"\n(\n    actorid   INTEGER not null\n        primary key,\n    a_gender  TEXT    not null,\n    a_quality INTEGER not null\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movieid     INTEGER default 0 not null\n        primary key,\n    year        INTEGER           not null,\n    isEnglish   TEXT              not null,\n    country     TEXT              not null,\n    runningtime INTEGER           not null\n)"
            },
            {
                "name": "movies2actors",
                "sql": "CREATE TABLE \"movies2actors\"\n(\n    movieid  INTEGER not null\n        references movies\n            on update cascade on delete cascade,\n    actorid  INTEGER not null\n        references actors\n            on update cascade on delete cascade,\n    cast_num INTEGER not null,\n    primary key (movieid, actorid)\n)"
            },
            {
                "name": "movies2directors",
                "sql": "CREATE TABLE \"movies2directors\"\n(\n    movieid    INTEGER not null\n        references movies\n            on update cascade on delete cascade,\n    directorid INTEGER not null\n        references directors\n            on update cascade on delete cascade,\n    genre      TEXT    not null,\n    primary key (movieid, directorid)\n)"
            },
            {
                "name": "u2base",
                "sql": "CREATE TABLE \"u2base\"\n(\n    userid  INTEGER default 0 not null\n        references users\n            on update cascade on delete cascade,\n    movieid INTEGER           not null\n        references movies\n            on update cascade on delete cascade,\n    rating  TEXT              not null,\n    primary key (userid, movieid)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "movielens",
            "toxicology",
            "student_club",
            "superhero",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "food_inspection",
            "menu",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "menu_ext",
        "tables": [
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "menu",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "movie_platform"
        ]
    },
    {
        "name": "disney_ext",
        "tables": [
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "disney",
            "toxicology",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "chicago_crime_ext",
        "tables": [
            {
                "name": "Community_Area",
                "sql": "CREATE TABLE Community_Area\n(\n    community_area_no   INTEGER\n            primary key,\n    community_area_name TEXT,\n    side                TEXT,\n    population          TEXT\n)"
            },
            {
                "name": "District",
                "sql": "CREATE TABLE District\n(\n    district_no   INTEGER\n            primary key,\n    district_name TEXT,\n    address       TEXT,\n    zip_code      INTEGER,\n    commander     TEXT,\n    email         TEXT,\n    phone         TEXT,\n    fax           TEXT,\n    tty           TEXT,\n    twitter       TEXT\n)"
            },
            {
                "name": "FBI_Code",
                "sql": "CREATE TABLE FBI_Code\n(\n    fbi_code_no   TEXT\n            primary key,\n    title         TEXT,\n    description   TEXT,\n    crime_against TEXT\n)"
            },
            {
                "name": "IUCR",
                "sql": "CREATE TABLE IUCR\n(\n    iucr_no               TEXT\n            primary key,\n    primary_description   TEXT,\n    secondary_description TEXT,\n    index_code            TEXT\n)"
            },
            {
                "name": "Neighborhood",
                "sql": "CREATE TABLE Neighborhood\n(\n    neighborhood_name TEXT\n            primary key,\n    community_area_no INTEGER,\n    foreign key (community_area_no) references Community_Area(community_area_no)\n)"
            },
            {
                "name": "Ward",
                "sql": "CREATE TABLE Ward\n(\n    ward_no                INTEGER\n            primary key,\n    alderman_first_name    TEXT,\n    alderman_last_name     TEXT,\n    alderman_name_suffix   TEXT,\n    ward_office_address    TEXT,\n    ward_office_zip        TEXT,\n    ward_email             TEXT,\n    ward_office_phone      TEXT,\n    ward_office_fax        TEXT,\n    city_hall_office_room  INTEGER,\n    city_hall_office_phone TEXT,\n    city_hall_office_fax   TEXT,\n    Population             INTEGER\n)"
            },
            {
                "name": "Crime",
                "sql": "CREATE TABLE Crime\n(\n    report_no            INTEGER\n            primary key,\n    case_number          TEXT,\n    date                 TEXT,\n    block                TEXT,\n    iucr_no              TEXT,\n    location_description TEXT,\n    arrest               TEXT,\n    domestic             TEXT,\n    beat                 INTEGER,\n    district_no          INTEGER,\n    ward_no              INTEGER,\n    community_area_no    INTEGER,\n    fbi_code_no          TEXT,\n    latitude             TEXT,\n    longitude            TEXT,\n    foreign key (ward_no) references Ward(ward_no),\n    foreign key (iucr_no) references IUCR(iucr_no),\n    foreign key (district_no) references District(district_no),\n    foreign key (community_area_no) references Community_Area(community_area_no),\n    foreign key (fbi_code_no) references FBI_Code(fbi_code_no)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE \"Country\"\n(\n    CountryCode                                TEXT not null\n        primary key,\n    ShortName                                  TEXT,\n    TableName                                  TEXT,\n    LongName                                   TEXT,\n    Alpha2Code                                 TEXT,\n    CurrencyUnit                               TEXT,\n    SpecialNotes                               TEXT,\n    Region                                     TEXT,\n    IncomeGroup                                TEXT,\n    Wb2Code                                    TEXT,\n    NationalAccountsBaseYear                   TEXT,\n    NationalAccountsReferenceYear              TEXT,\n    SnaPriceValuation                          TEXT,\n    LendingCategory                            TEXT,\n    OtherGroups                                TEXT,\n    SystemOfNationalAccounts                   TEXT,\n    AlternativeConversionFactor                TEXT,\n    PppSurveyYear                              TEXT,\n    BalanceOfPaymentsManualInUse               TEXT,\n    ExternalDebtReportingStatus                TEXT,\n    SystemOfTrade                              TEXT,\n    GovernmentAccountingConcept                TEXT,\n    ImfDataDisseminationStandard               TEXT,\n    LatestPopulationCensus                     TEXT,\n    LatestHouseholdSurvey                      TEXT,\n    SourceOfMostRecentIncomeAndExpenditureData TEXT,\n    VitalRegistrationComplete                  TEXT,\n    LatestAgriculturalCensus                   TEXT,\n    LatestIndustrialData                       INTEGER,\n    LatestTradeData                            INTEGER,\n    LatestWaterWithdrawalData                  INTEGER\n)"
            },
            {
                "name": "Series",
                "sql": "CREATE TABLE \"Series\"\n(\n    SeriesCode                       TEXT not null\n        primary key,\n    Topic                            TEXT,\n    IndicatorName                    TEXT,\n    ShortDefinition                  TEXT,\n    LongDefinition                   TEXT,\n    UnitOfMeasure                    TEXT,\n    Periodicity                      TEXT,\n    BasePeriod                       TEXT,\n    OtherNotes                       INTEGER,\n    AggregationMethod                TEXT,\n    LimitationsAndExceptions         TEXT,\n    NotesFromOriginalSource          TEXT,\n    GeneralComments                  TEXT,\n    Source                           TEXT,\n    StatisticalConceptAndMethodology TEXT,\n    DevelopmentRelevance             TEXT,\n    RelatedSourceLinks               TEXT,\n    OtherWebLinks                    INTEGER,\n    RelatedIndicators                INTEGER,\n    LicenseType                      TEXT\n)"
            },
            {
                "name": "CountryNotes",
                "sql": "CREATE TABLE CountryNotes\n(\n    Countrycode TEXT NOT NULL ,\n    Seriescode  TEXT NOT NULL ,\n    Description TEXT,\n    primary key (Countrycode, Seriescode),\n    FOREIGN KEY (Seriescode) REFERENCES Series(SeriesCode),\n    FOREIGN KEY (Countrycode) REFERENCES Country(CountryCode)\n)"
            },
            {
                "name": "Footnotes",
                "sql": "CREATE TABLE Footnotes\n(\n    Countrycode TEXT NOT NULL ,\n    Seriescode  TEXT NOT NULL ,\n    Year        TEXT,\n    Description TEXT,\n    primary key (Countrycode, Seriescode, Year),\n    FOREIGN KEY (Seriescode) REFERENCES Series(SeriesCode),\n    FOREIGN KEY (Countrycode) REFERENCES Country(CountryCode)\n)"
            },
            {
                "name": "Indicators",
                "sql": "CREATE TABLE Indicators\n(\n    CountryName   TEXT,\n    CountryCode   TEXT NOT NULL ,\n    IndicatorName TEXT,\n    IndicatorCode TEXT NOT NULL ,\n    Year          INTEGER NOT NULL ,\n    Value         INTEGER,\n    primary key (CountryCode, IndicatorCode, Year),\n    FOREIGN KEY (CountryCode) REFERENCES Country(CountryCode)\n)"
            },
            {
                "name": "SeriesNotes",
                "sql": "CREATE TABLE SeriesNotes\n(\n    Seriescode  TEXT not null ,\n    Year        TEXT not null ,\n    Description TEXT,\n    primary key (Seriescode, Year),\n    foreign key (Seriescode) references Series(SeriesCode)\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "chicago_crime",
            "toxicology",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "image_and_language",
            "college_completion",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "disney",
            "music_tracker",
            "world_development_indicators",
            "app_store"
        ]
    },
    {
        "name": "mondial_geo_ext",
        "tables": [
            {
                "name": "borders",
                "sql": "CREATE TABLE \"borders\"\n(\n    Country1 TEXT default '' not null\n        constraint borders_ibfk_1\n            references country,\n    Country2 TEXT default '' not null\n        constraint borders_ibfk_2\n            references country,\n    Length   REAL,\n    primary key (Country1, Country2)\n)"
            },
            {
                "name": "city",
                "sql": "CREATE TABLE \"city\"\n(\n    Name       TEXT default '' not null,\n    Country    TEXT default '' not null\n        constraint city_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Province   TEXT default '' not null,\n    Population INTEGER,\n    Longitude  REAL,\n    Latitude   REAL,\n    primary key (Name, Province),\n    constraint city_ibfk_2\n        foreign key (Province, Country) references province\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "continent",
                "sql": "CREATE TABLE \"continent\"\n(\n    Name TEXT default '' not null\n        primary key,\n    Area REAL\n)"
            },
            {
                "name": "country",
                "sql": "CREATE TABLE \"country\"\n(\n    Name       TEXT            not null\n        constraint ix_county_Name\n            unique,\n    Code       TEXT default '' not null\n        primary key,\n    Capital    TEXT,\n    Province   TEXT,\n    Area       REAL,\n    Population INTEGER\n)"
            },
            {
                "name": "desert",
                "sql": "CREATE TABLE \"desert\"\n(\n    Name      TEXT default '' not null\n        primary key,\n    Area      REAL,\n    Longitude REAL,\n    Latitude  REAL\n)"
            },
            {
                "name": "economy",
                "sql": "CREATE TABLE \"economy\"\n(\n    Country     TEXT default '' not null\n        primary key\n        constraint economy_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    GDP         REAL,\n    Agriculture REAL,\n    Service     REAL,\n    Industry    REAL,\n    Inflation   REAL\n)"
            },
            {
                "name": "encompasses",
                "sql": "CREATE TABLE \"encompasses\"\n(\n    Country    TEXT not null\n        constraint encompasses_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Continent  TEXT not null\n        constraint encompasses_ibfk_2\n            references continent\n            on update cascade on delete cascade,\n    Percentage REAL,\n    primary key (Country, Continent)\n)"
            },
            {
                "name": "ethnicGroup",
                "sql": "CREATE TABLE \"ethnicGroup\"\n(\n    Country    TEXT default '' not null\n        constraint ethnicGroup_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Name       TEXT default '' not null,\n    Percentage REAL,\n    primary key (Name, Country)\n)"
            },
            {
                "name": "geo_desert",
                "sql": "CREATE TABLE \"geo_desert\"\n(\n    Desert   TEXT default '' not null\n        constraint geo_desert_ibfk_3\n            references desert\n            on update cascade on delete cascade,\n    Country  TEXT default '' not null\n        constraint geo_desert_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Province TEXT default '' not null,\n    primary key (Province, Country, Desert),\n    constraint geo_desert_ibfk_2\n        foreign key (Province, Country) references province\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "geo_estuary",
                "sql": "CREATE TABLE \"geo_estuary\"\n(\n    River    TEXT default '' not null\n        constraint geo_estuary_ibfk_3\n            references river\n            on update cascade on delete cascade,\n    Country  TEXT default '' not null\n        constraint geo_estuary_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Province TEXT default '' not null,\n    primary key (Province, Country, River),\n    constraint geo_estuary_ibfk_2\n        foreign key (Province, Country) references province\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "geo_island",
                "sql": "CREATE TABLE \"geo_island\"\n(\n    Island   TEXT default '' not null\n        constraint geo_island_ibfk_3\n            references island\n            on update cascade on delete cascade,\n    Country  TEXT default '' not null\n        constraint geo_island_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Province TEXT default '' not null,\n    primary key (Province, Country, Island),\n    constraint geo_island_ibfk_2\n        foreign key (Province, Country) references province\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "geo_lake",
                "sql": "CREATE TABLE \"geo_lake\"\n(\n    Lake     TEXT default '' not null\n        constraint geo_lake_ibfk_3\n            references lake\n            on update cascade on delete cascade,\n    Country  TEXT default '' not null\n        constraint geo_lake_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Province TEXT default '' not null,\n    primary key (Province, Country, Lake),\n    constraint geo_lake_ibfk_2\n        foreign key (Province, Country) references province\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "geo_mountain",
                "sql": "CREATE TABLE \"geo_mountain\"\n(\n    Mountain TEXT default '' not null\n        constraint geo_mountain_ibfk_3\n            references mountain\n            on update cascade on delete cascade,\n    Country  TEXT default '' not null\n        constraint geo_mountain_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Province TEXT default '' not null,\n    primary key (Province, Country, Mountain),\n    constraint geo_mountain_ibfk_2\n        foreign key (Province, Country) references province\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "geo_river",
                "sql": "CREATE TABLE \"geo_river\"\n(\n    River    TEXT default '' not null\n        constraint geo_river_ibfk_3\n            references river\n            on update cascade on delete cascade,\n    Country  TEXT default '' not null\n        constraint geo_river_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Province TEXT default '' not null,\n    primary key (Province, Country, River),\n    constraint geo_river_ibfk_2\n        foreign key (Province, Country) references province\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "geo_sea",
                "sql": "CREATE TABLE \"geo_sea\"\n(\n    Sea      TEXT default '' not null\n        constraint geo_sea_ibfk_3\n            references sea\n            on update cascade on delete cascade,\n    Country  TEXT default '' not null\n        constraint geo_sea_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Province TEXT default '' not null,\n    primary key (Province, Country, Sea),\n    constraint geo_sea_ibfk_2\n        foreign key (Province, Country) references province\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "geo_source",
                "sql": "CREATE TABLE \"geo_source\"\n(\n    River    TEXT default '' not null\n        constraint geo_source_ibfk_3\n            references river\n            on update cascade on delete cascade,\n    Country  TEXT default '' not null\n        constraint geo_source_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Province TEXT default '' not null,\n    primary key (Province, Country, River),\n    constraint geo_source_ibfk_2\n        foreign key (Province, Country) references province\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "island",
                "sql": "CREATE TABLE \"island\"\n(\n    Name      TEXT default '' not null\n        primary key,\n    Islands   TEXT,\n    Area      REAL,\n    Height    REAL,\n    Type      TEXT,\n    Longitude REAL,\n    Latitude  REAL\n)"
            },
            {
                "name": "islandIn",
                "sql": "CREATE TABLE \"islandIn\"\n(\n    Island TEXT\n        constraint islandIn_ibfk_4\n            references island\n            on update cascade on delete cascade,\n    Sea    TEXT\n        constraint islandIn_ibfk_3\n            references sea\n            on update cascade on delete cascade,\n    Lake   TEXT\n        constraint islandIn_ibfk_1\n            references lake\n            on update cascade on delete cascade,\n    River  TEXT\n        constraint islandIn_ibfk_2\n            references river\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "isMember",
                "sql": "CREATE TABLE \"isMember\"\n(\n    Country      TEXT default '' not null\n        constraint isMember_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Organization TEXT default '' not null\n        constraint isMember_ibfk_2\n            references organization\n            on update cascade on delete cascade,\n    Type         TEXT default 'member',\n    primary key (Country, Organization)\n)"
            },
            {
                "name": "lake",
                "sql": "CREATE TABLE \"lake\"\n(\n    Name      TEXT default '' not null\n        primary key,\n    Area      REAL,\n    Depth     REAL,\n    Altitude  REAL,\n    Type      TEXT,\n    River     TEXT,\n    Longitude REAL,\n    Latitude  REAL\n)"
            },
            {
                "name": "language",
                "sql": "CREATE TABLE \"language\"\n(\n    Country    TEXT default '' not null\n        constraint language_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Name       TEXT default '' not null,\n    Percentage REAL,\n    primary key (Name, Country)\n)"
            },
            {
                "name": "located",
                "sql": "CREATE TABLE \"located\"\n(\n    City     TEXT,\n    Province TEXT,\n    Country  TEXT\n        constraint located_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    River    TEXT\n        constraint located_ibfk_3\n            references river\n            on update cascade on delete cascade,\n    Lake     TEXT\n        constraint located_ibfk_4\n            references lake\n            on update cascade on delete cascade,\n    Sea      TEXT\n        constraint located_ibfk_5\n            references sea\n            on update cascade on delete cascade,\n    constraint located_ibfk_2\n        foreign key (City, Province) references city\n            on update cascade on delete cascade,\n    constraint located_ibfk_6\n        foreign key (Province, Country) references province\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "locatedOn",
                "sql": "CREATE TABLE \"locatedOn\"\n(\n    City     TEXT default '' not null,\n    Province TEXT default '' not null,\n    Country  TEXT default '' not null\n        constraint locatedOn_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Island   TEXT default '' not null\n        constraint locatedOn_ibfk_2\n            references island\n            on update cascade on delete cascade,\n    primary key (City, Province, Country, Island),\n    constraint locatedOn_ibfk_3\n        foreign key (City, Province) references city\n            on update cascade on delete cascade,\n    constraint locatedOn_ibfk_4\n        foreign key (Province, Country) references province\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "mergesWith",
                "sql": "CREATE TABLE \"mergesWith\"\n(\n    Sea1 TEXT default '' not null\n        constraint mergesWith_ibfk_1\n            references sea\n            on update cascade on delete cascade,\n    Sea2 TEXT default '' not null\n        constraint mergesWith_ibfk_2\n            references sea\n            on update cascade on delete cascade,\n    primary key (Sea1, Sea2)\n)"
            },
            {
                "name": "mountain",
                "sql": "CREATE TABLE \"mountain\"\n(\n    Name      TEXT default '' not null\n        primary key,\n    Mountains TEXT,\n    Height    REAL,\n    Type      TEXT,\n    Longitude REAL,\n    Latitude  REAL\n)"
            },
            {
                "name": "mountainOnIsland",
                "sql": "CREATE TABLE \"mountainOnIsland\"\n(\n    Mountain TEXT default '' not null\n        constraint mountainOnIsland_ibfk_2\n            references mountain\n            on update cascade on delete cascade,\n    Island   TEXT default '' not null\n        constraint mountainOnIsland_ibfk_1\n            references island\n            on update cascade on delete cascade,\n    primary key (Mountain, Island)\n)"
            },
            {
                "name": "organization",
                "sql": "CREATE TABLE \"organization\"\n(\n    Abbreviation TEXT not null\n        primary key,\n    Name         TEXT not null\n        constraint ix_organization_OrgNameUnique\n            unique,\n    City         TEXT,\n    Country      TEXT\n        constraint organization_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Province     TEXT,\n    Established  DATE,\n    constraint organization_ibfk_2\n        foreign key (City, Province) references city\n            on update cascade on delete cascade,\n    constraint organization_ibfk_3\n        foreign key (Province, Country) references province\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "politics",
                "sql": "CREATE TABLE \"politics\"\n(\n    Country      TEXT default '' not null\n        primary key\n        constraint politics_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Independence DATE,\n    Dependent    TEXT\n        constraint politics_ibfk_2\n            references country\n            on update cascade on delete cascade,\n    Government   TEXT\n)"
            },
            {
                "name": "population",
                "sql": "CREATE TABLE \"population\"\n(\n    Country           TEXT default '' not null\n        primary key\n        constraint population_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Population_Growth REAL,\n    Infant_Mortality  REAL\n)"
            },
            {
                "name": "province",
                "sql": "CREATE TABLE \"province\"\n(\n    Name       TEXT not null,\n    Country    TEXT not null\n        constraint province_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Population INTEGER,\n    Area       REAL,\n    Capital    TEXT,\n    CapProv    TEXT,\n    primary key (Name, Country)\n)"
            },
            {
                "name": "religion",
                "sql": "CREATE TABLE \"religion\"\n(\n    Country    TEXT default '' not null\n        constraint religion_ibfk_1\n            references country\n            on update cascade on delete cascade,\n    Name       TEXT default '' not null,\n    Percentage REAL,\n    primary key (Name, Country)\n)"
            },
            {
                "name": "river",
                "sql": "CREATE TABLE \"river\"\n(\n    Name             TEXT default '' not null\n        primary key,\n    River            TEXT,\n    Lake             TEXT\n        constraint river_ibfk_1\n            references lake\n            on update cascade on delete cascade,\n    Sea              TEXT,\n    Length           REAL,\n    SourceLongitude  REAL,\n    SourceLatitude   REAL,\n    Mountains        TEXT,\n    SourceAltitude   REAL,\n    EstuaryLongitude REAL,\n    EstuaryLatitude  REAL\n)"
            },
            {
                "name": "sea",
                "sql": "CREATE TABLE \"sea\"\n(\n    Name  TEXT default '' not null\n        primary key,\n    Depth REAL\n)"
            },
            {
                "name": "target",
                "sql": "CREATE TABLE \"target\"\n(\n    Country TEXT not null\n        primary key\n        constraint target_Country_fkey\n            references country\n            on update cascade on delete cascade,\n    Target  TEXT\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "runs",
                "sql": "CREATE TABLE runs (\n        run_at text not null,\n        max_rowid integer not null,\n        reviews_added integer not null\n    )"
            },
            {
                "name": "podcasts",
                "sql": "CREATE TABLE podcasts (\n        podcast_id text primary key,\n        itunes_id integer not null,\n        slug text not null,\n        itunes_url text not null,\n        title text not null\n    )"
            },
            {
                "name": "reviews",
                "sql": "CREATE TABLE \"reviews\"\n(\n    podcast_id TEXT    not null\n        constraint reviews_podcasts_podcast_id_fk\n            references podcasts,\n    title      TEXT    not null,\n    content    TEXT    not null,\n    rating     INTEGER not null,\n    author_id  TEXT    not null,\n    created_at TEXT    not null\n)"
            },
            {
                "name": "categories",
                "sql": "CREATE TABLE \"categories\"\n(\n    podcast_id TEXT not null\n        constraint categories_podcasts_podcast_id_fk\n            references podcasts,\n    category   TEXT not null,\n    constraint \"PRIMARY\"\n        primary key (podcast_id, category)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "actor",
                "sql": "CREATE TABLE actor\n(\n    ActorID           INTEGER\n        constraint actor_pk\n            primary key,\n    Name              TEXT,\n    \"Date of Birth\"   DATE,\n    \"Birth City\"      TEXT,\n    \"Birth Country\"   TEXT,\n    \"Height (Inches)\" INTEGER,\n    Biography         TEXT,\n    Gender            TEXT,\n    Ethnicity         TEXT,\n    NetWorth          TEXT\n)"
            },
            {
                "name": "movie",
                "sql": "CREATE TABLE movie\n(\n    MovieID        INTEGER\n        constraint movie_pk\n            primary key,\n    Title          TEXT,\n    \"MPAA Rating\"  TEXT,\n    Budget         INTEGER,\n    Gross          INTEGER,\n    \"Release Date\" TEXT,\n    Genre          TEXT,\n    Runtime        INTEGER,\n    Rating         REAL,\n    \"Rating Count\" INTEGER,\n    Summary        TEXT\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    MovieID          INTEGER,\n    ActorID          INTEGER,\n    \"Character Name\" TEXT,\n    creditOrder      INTEGER,\n    pay              TEXT,\n    screentime       TEXT,\n    primary key (MovieID, ActorID),\n    foreign key (ActorID) references actor(ActorID),\n    foreign key (MovieID) references movie(MovieID)\n)"
            }
        ],
        "original": [
            "mondial_geo",
            "toxicology",
            "student_club",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "image_and_language",
            "college_completion",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "music_platform_2",
            "menu",
            "movie"
        ]
    },
    {
        "name": "olympics_ext",
        "tables": [
            {
                "name": "city",
                "sql": "CREATE TABLE city\n(\n    id        INTEGER not null\n            primary key,\n    city_name TEXT default NULL\n)"
            },
            {
                "name": "games",
                "sql": "CREATE TABLE games\n(\n    id         INTEGER not null\n            primary key,\n    games_year INTEGER          default NULL,\n    games_name TEXT default NULL,\n    season     TEXT default NULL\n)"
            },
            {
                "name": "games_city",
                "sql": "CREATE TABLE games_city\n(\n    games_id INTEGER default NULL,\n    city_id  INTEGER default NULL,\n    foreign key (city_id) references city(id),\n    foreign key (games_id) references games(id)\n)"
            },
            {
                "name": "medal",
                "sql": "CREATE TABLE medal\n(\n    id         INTEGER not null\n            primary key,\n    medal_name TEXT default NULL\n)"
            },
            {
                "name": "noc_region",
                "sql": "CREATE TABLE noc_region\n(\n    id          INTEGER not null\n            primary key,\n    noc         TEXT   default NULL,\n    region_name TEXT default NULL\n)"
            },
            {
                "name": "person",
                "sql": "CREATE TABLE person\n(\n    id        INTEGER not null\n        primary key,\n    full_name TEXT default NULL,\n    gender    TEXT  default NULL,\n    height    INTEGER          default NULL,\n    weight    INTEGER          default NULL\n)"
            },
            {
                "name": "games_competitor",
                "sql": "CREATE TABLE games_competitor\n(\n    id        INTEGER not null\n            primary key,\n    games_id  INTEGER default NULL,\n    person_id INTEGER default NULL,\n    age       INTEGER default NULL,\n    foreign key (games_id) references games(id),\n    foreign key (person_id) references person(id)\n)"
            },
            {
                "name": "person_region",
                "sql": "CREATE TABLE person_region\n(\n    person_id INTEGER default NULL,\n    region_id INTEGER default NULL,\n    foreign key (person_id) references person(id),\n    foreign key (region_id) references noc_region(id)\n)"
            },
            {
                "name": "sport",
                "sql": "CREATE TABLE sport\n(\n    id         INTEGER not null\n            primary key,\n    sport_name TEXT default NULL\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    id         INTEGER not null\n            primary key,\n    sport_id   INTEGER          default NULL,\n    event_name TEXT default NULL,\n    foreign key (sport_id) references sport(id)\n)"
            },
            {
                "name": "competitor_event",
                "sql": "CREATE TABLE competitor_event\n(\n    event_id      INTEGER default NULL,\n    competitor_id INTEGER default NULL,\n    medal_id      INTEGER default NULL,\n    foreign key (competitor_id) references games_competitor(id),\n    foreign key (event_id) references event(id),\n    foreign key (medal_id) references medal(id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "all_prevalences",
                "sql": "CREATE TABLE all_prevalences\n(\n    ITEM                    TEXT\n            primary key,\n    \"POPULATION TYPE\"       TEXT,\n    OCCURRENCES             INTEGER,\n    \"POPULATION COUNT\"      INTEGER,\n    \"PREVALENCE RATE\"       REAL,\n    \"PREVALENCE PERCENTAGE\" REAL\n)"
            },
            {
                "name": "patients",
                "sql": "CREATE TABLE patients\n(\n    patient    TEXT\n            primary key,\n    birthdate  DATE,\n    deathdate  DATE,\n    ssn        TEXT,\n    drivers    TEXT,\n    passport   TEXT,\n    prefix     TEXT,\n    first      TEXT,\n    last       TEXT,\n    suffix     TEXT,\n    maiden     TEXT,\n    marital    TEXT,\n    race       TEXT,\n    ethnicity  TEXT,\n    gender     TEXT,\n    birthplace TEXT,\n    address    TEXT\n)"
            },
            {
                "name": "encounters",
                "sql": "CREATE TABLE encounters\n(\n    ID                TEXT\n            primary key,\n    DATE              DATE,\n    PATIENT           TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "allergies",
                "sql": "CREATE TABLE allergies\n(\n    START       TEXT,\n    STOP        TEXT,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "careplans",
                "sql": "CREATE TABLE careplans\n(\n    ID                TEXT,\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              REAL,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "conditions",
                "sql": "CREATE TABLE conditions\n(\n    START       DATE,\n    STOP        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient),\n    foreign key (DESCRIPTION) references all_prevalences(ITEM)\n)"
            },
            {
                "name": "immunizations",
                "sql": "CREATE TABLE immunizations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        INTEGER,\n    DESCRIPTION TEXT,\n    primary key (DATE, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "medications",
                "sql": "CREATE TABLE medications\n(\n    START             DATE,\n    STOP              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    primary key (START, PATIENT, ENCOUNTER, CODE),\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "observations",
                "sql": "CREATE TABLE observations\n(\n    DATE        DATE,\n    PATIENT     TEXT,\n    ENCOUNTER   TEXT,\n    CODE        TEXT,\n    DESCRIPTION TEXT,\n    VALUE       REAL,\n    UNITS       TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "procedures",
                "sql": "CREATE TABLE procedures\n(\n    DATE              DATE,\n    PATIENT           TEXT,\n    ENCOUNTER         TEXT,\n    CODE              INTEGER,\n    DESCRIPTION       TEXT,\n    REASONCODE        INTEGER,\n    REASONDESCRIPTION TEXT,\n    foreign key (ENCOUNTER) references encounters(ID),\n    foreign key (PATIENT) references patients(patient)\n)"
            },
            {
                "name": "claims",
                "sql": "CREATE TABLE \"claims\"\n(\n    ID             TEXT\n        primary key,\n    PATIENT        TEXT\n        references patients,\n    BILLABLEPERIOD DATE,\n    ORGANIZATION   TEXT,\n    ENCOUNTER      TEXT\n        references encounters,\n    DIAGNOSIS      TEXT,\n    TOTAL          INTEGER\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "CBSA",
                "sql": "CREATE TABLE CBSA\n(\n    CBSA      INTEGER\n            primary key,\n    CBSA_name TEXT,\n    CBSA_type TEXT\n)"
            },
            {
                "name": "state",
                "sql": "CREATE TABLE state\n(\n    abbreviation TEXT\n            primary key,\n    name         TEXT\n)"
            },
            {
                "name": "congress",
                "sql": "CREATE TABLE congress\n(\n    cognress_rep_id TEXT\n            primary key,\n    first_name      TEXT,\n    last_name       TEXT,\n    CID             TEXT,\n    party           TEXT,\n    state           TEXT,\n    abbreviation    TEXT,\n    House           TEXT,\n    District        INTEGER,\n    land_area       REAL,\n    foreign key (abbreviation) references state(abbreviation)\n)"
            },
            {
                "name": "zip_data",
                "sql": "CREATE TABLE zip_data\n(\n    zip_code                         INTEGER\n            primary key,\n    city                             TEXT,\n    state                            TEXT,\n    multi_county                     TEXT,\n    type                             TEXT,\n    organization                     TEXT,\n    time_zone                        TEXT,\n    daylight_savings                 TEXT,\n    latitude                         REAL,\n    longitude                        REAL,\n    elevation                        INTEGER,\n    state_fips                       INTEGER,\n    county_fips                      INTEGER,\n    region                           TEXT,\n    division                         TEXT,\n    population_2020                  INTEGER,\n    population_2010                  INTEGER,\n    households                       INTEGER,\n    avg_house_value                  INTEGER,\n    avg_income_per_household         INTEGER,\n    persons_per_household            REAL,\n    white_population                 INTEGER,\n    black_population                 INTEGER,\n    hispanic_population              INTEGER,\n    asian_population                 INTEGER,\n    american_indian_population       INTEGER,\n    hawaiian_population              INTEGER,\n    other_population                 INTEGER,\n    male_population                  INTEGER,\n    female_population                INTEGER,\n    median_age                       REAL,\n    male_median_age                  REAL,\n    female_median_age                REAL,\n    residential_mailboxes            INTEGER,\n    business_mailboxes               INTEGER,\n    total_delivery_receptacles       INTEGER,\n    businesses                       INTEGER,\n    \"1st_quarter_payroll\"            INTEGER,\n    annual_payroll                   INTEGER,\n    employees                        INTEGER,\n    water_area                       REAL,\n    land_area                        REAL,\n    single_family_delivery_units     INTEGER,\n    multi_family_delivery_units      INTEGER,\n    total_beneficiaries              INTEGER,\n    retired_workers                  INTEGER,\n    disabled_workers                 INTEGER,\n    parents_and_widowed              INTEGER,\n    spouses                          INTEGER,\n    children                         INTEGER,\n    over_65                          INTEGER,\n    monthly_benefits_all             INTEGER,\n    monthly_benefits_retired_workers INTEGER,\n    monthly_benefits_widowed         INTEGER,\n    CBSA                             INTEGER,\n    foreign key (state) references state(abbreviation),\n    foreign key (CBSA) references CBSA(CBSA)\n)"
            },
            {
                "name": "alias",
                "sql": "CREATE TABLE alias\n(\n    zip_code INTEGER\n            primary key,\n    alias    TEXT,\n    foreign key (zip_code) references zip_data(zip_code)\n)"
            },
            {
                "name": "area_code",
                "sql": "CREATE TABLE area_code\n(\n    zip_code  INTEGER,\n    area_code INTEGER,\n    primary key (zip_code, area_code),\n    foreign key (zip_code) references zip_data(zip_code)\n)"
            },
            {
                "name": "avoid",
                "sql": "CREATE TABLE avoid\n(\n    zip_code  INTEGER,\n    bad_alias TEXT,\n    primary key (zip_code, bad_alias),\n    foreign key (zip_code) references zip_data(zip_code)\n)"
            },
            {
                "name": "country",
                "sql": "CREATE TABLE country\n(\n    zip_code INTEGER,\n    county   TEXT,\n    state    TEXT,\n    primary key (zip_code, county),\n    foreign key (zip_code) references zip_data(zip_code),\n    foreign key (state) references state(abbreviation)\n)"
            },
            {
                "name": "zip_congress",
                "sql": "CREATE TABLE zip_congress\n(\n    zip_code INTEGER,\n    district TEXT,\n    primary key (zip_code, district),\n    foreign key (district) references congress(cognress_rep_id),\n    foreign key (zip_code) references zip_data(zip_code)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "olympics",
            "toxicology",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "synthea",
            "airline",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "sales_in_weather",
            "food_inspection",
            "menu",
            "disney",
            "address",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "food_inspection_2_ext",
        "tables": [
            {
                "name": "employee",
                "sql": "CREATE TABLE employee\n(\n    employee_id INTEGER\n            primary key,\n    first_name  TEXT,\n    last_name   TEXT,\n    address     TEXT,\n    city        TEXT,\n    state       TEXT,\n    zip         INTEGER,\n    phone       TEXT,\n    title       TEXT,\n    salary      INTEGER,\n    supervisor  INTEGER,\n    foreign key (supervisor) references employee(employee_id)\n)"
            },
            {
                "name": "establishment",
                "sql": "CREATE TABLE establishment\n(\n    license_no    INTEGER\n            primary key,\n    dba_name      TEXT,\n    aka_name      TEXT,\n    facility_type TEXT,\n    risk_level    INTEGER,\n    address       TEXT,\n    city          TEXT,\n    state         TEXT,\n    zip           INTEGER,\n    latitude      REAL,\n    longitude     REAL,\n    ward          INTEGER\n)"
            },
            {
                "name": "inspection",
                "sql": "CREATE TABLE inspection\n(\n    inspection_id   INTEGER\n            primary key,\n    inspection_date DATE,\n    inspection_type TEXT,\n    results         TEXT,\n    employee_id     INTEGER,\n    license_no      INTEGER,\n    followup_to     INTEGER,\n    foreign key (employee_id) references employee(employee_id),\n    foreign key (license_no) references establishment(license_no),\n    foreign key (followup_to) references inspection(inspection_id)\n)"
            },
            {
                "name": "inspection_point",
                "sql": "CREATE TABLE inspection_point\n(\n    point_id    INTEGER\n            primary key,\n    Description TEXT,\n    category    TEXT,\n    code        TEXT,\n    fine        INTEGER,\n    point_level TEXT\n)"
            },
            {
                "name": "violation",
                "sql": "CREATE TABLE violation\n(\n    inspection_id     INTEGER,\n    point_id          INTEGER,\n    fine              INTEGER,\n    inspector_comment TEXT,\n    primary key (inspection_id, point_id),\n    foreign key (inspection_id) references inspection(inspection_id),\n    foreign key (point_id) references inspection_point(point_id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "food_inspection_2",
            "toxicology",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "disney",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "address_ext",
        "tables": [
            {
                "name": "CBSA",
                "sql": "CREATE TABLE CBSA\n(\n    CBSA      INTEGER\n            primary key,\n    CBSA_name TEXT,\n    CBSA_type TEXT\n)"
            },
            {
                "name": "state",
                "sql": "CREATE TABLE state\n(\n    abbreviation TEXT\n            primary key,\n    name         TEXT\n)"
            },
            {
                "name": "congress",
                "sql": "CREATE TABLE congress\n(\n    cognress_rep_id TEXT\n            primary key,\n    first_name      TEXT,\n    last_name       TEXT,\n    CID             TEXT,\n    party           TEXT,\n    state           TEXT,\n    abbreviation    TEXT,\n    House           TEXT,\n    District        INTEGER,\n    land_area       REAL,\n    foreign key (abbreviation) references state(abbreviation)\n)"
            },
            {
                "name": "zip_data",
                "sql": "CREATE TABLE zip_data\n(\n    zip_code                         INTEGER\n            primary key,\n    city                             TEXT,\n    state                            TEXT,\n    multi_county                     TEXT,\n    type                             TEXT,\n    organization                     TEXT,\n    time_zone                        TEXT,\n    daylight_savings                 TEXT,\n    latitude                         REAL,\n    longitude                        REAL,\n    elevation                        INTEGER,\n    state_fips                       INTEGER,\n    county_fips                      INTEGER,\n    region                           TEXT,\n    division                         TEXT,\n    population_2020                  INTEGER,\n    population_2010                  INTEGER,\n    households                       INTEGER,\n    avg_house_value                  INTEGER,\n    avg_income_per_household         INTEGER,\n    persons_per_household            REAL,\n    white_population                 INTEGER,\n    black_population                 INTEGER,\n    hispanic_population              INTEGER,\n    asian_population                 INTEGER,\n    american_indian_population       INTEGER,\n    hawaiian_population              INTEGER,\n    other_population                 INTEGER,\n    male_population                  INTEGER,\n    female_population                INTEGER,\n    median_age                       REAL,\n    male_median_age                  REAL,\n    female_median_age                REAL,\n    residential_mailboxes            INTEGER,\n    business_mailboxes               INTEGER,\n    total_delivery_receptacles       INTEGER,\n    businesses                       INTEGER,\n    \"1st_quarter_payroll\"            INTEGER,\n    annual_payroll                   INTEGER,\n    employees                        INTEGER,\n    water_area                       REAL,\n    land_area                        REAL,\n    single_family_delivery_units     INTEGER,\n    multi_family_delivery_units      INTEGER,\n    total_beneficiaries              INTEGER,\n    retired_workers                  INTEGER,\n    disabled_workers                 INTEGER,\n    parents_and_widowed              INTEGER,\n    spouses                          INTEGER,\n    children                         INTEGER,\n    over_65                          INTEGER,\n    monthly_benefits_all             INTEGER,\n    monthly_benefits_retired_workers INTEGER,\n    monthly_benefits_widowed         INTEGER,\n    CBSA                             INTEGER,\n    foreign key (state) references state(abbreviation),\n    foreign key (CBSA) references CBSA(CBSA)\n)"
            },
            {
                "name": "alias",
                "sql": "CREATE TABLE alias\n(\n    zip_code INTEGER\n            primary key,\n    alias    TEXT,\n    foreign key (zip_code) references zip_data(zip_code)\n)"
            },
            {
                "name": "area_code",
                "sql": "CREATE TABLE area_code\n(\n    zip_code  INTEGER,\n    area_code INTEGER,\n    primary key (zip_code, area_code),\n    foreign key (zip_code) references zip_data(zip_code)\n)"
            },
            {
                "name": "avoid",
                "sql": "CREATE TABLE avoid\n(\n    zip_code  INTEGER,\n    bad_alias TEXT,\n    primary key (zip_code, bad_alias),\n    foreign key (zip_code) references zip_data(zip_code)\n)"
            },
            {
                "name": "country",
                "sql": "CREATE TABLE country\n(\n    zip_code INTEGER,\n    county   TEXT,\n    state    TEXT,\n    primary key (zip_code, county),\n    foreign key (zip_code) references zip_data(zip_code),\n    foreign key (state) references state(abbreviation)\n)"
            },
            {
                "name": "zip_congress",
                "sql": "CREATE TABLE zip_congress\n(\n    zip_code INTEGER,\n    district TEXT,\n    primary key (zip_code, district),\n    foreign key (district) references congress(cognress_rep_id),\n    foreign key (zip_code) references zip_data(zip_code)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "address",
            "toxicology",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "disney",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "beer_factory_ext",
        "tables": [
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID            INTEGER\n            primary key,\n    First                 TEXT,\n    Last                  TEXT,\n    StreetAddress         TEXT,\n    City                  TEXT,\n    State                 TEXT,\n    ZipCode               INTEGER,\n    Email                 TEXT,\n    PhoneNumber           TEXT,\n    FirstPurchaseDate     DATE,\n    SubscribedToEmailList TEXT,\n    Gender                TEXT\n)"
            },
            {
                "name": "geolocation",
                "sql": "CREATE TABLE geolocation\n(\n    LocationID INTEGER\n            primary key,\n    Latitude   REAL,\n    Longitude  REAL,\n    foreign key (LocationID) references location(LocationID)\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    LocationID    INTEGER\n            primary key,\n    LocationName  TEXT,\n    StreetAddress TEXT,\n    City          TEXT,\n    State         TEXT,\n    ZipCode       INTEGER,\n    foreign key (LocationID) references geolocation(LocationID)\n)"
            },
            {
                "name": "rootbeerbrand",
                "sql": "CREATE TABLE rootbeerbrand\n(\n    BrandID             INTEGER\n            primary key,\n    BrandName           TEXT,\n    FirstBrewedYear     INTEGER,\n    BreweryName         TEXT,\n    City                TEXT,\n    State               TEXT,\n    Country             TEXT,\n    Description         TEXT,\n    CaneSugar           TEXT,\n    CornSyrup           TEXT,\n    Honey               TEXT,\n    ArtificialSweetener TEXT,\n    Caffeinated         TEXT,\n    Alcoholic           TEXT,\n    AvailableInCans     TEXT,\n    AvailableInBottles  TEXT,\n    AvailableInKegs     TEXT,\n    Website             TEXT,\n    FacebookPage        TEXT,\n    Twitter             TEXT,\n    WholesaleCost       REAL,\n    CurrentRetailPrice  REAL\n)"
            },
            {
                "name": "rootbeer",
                "sql": "CREATE TABLE rootbeer\n(\n    RootBeerID    INTEGER\n            primary key,\n    BrandID       INTEGER,\n    ContainerType TEXT,\n    LocationID    INTEGER,\n    PurchaseDate  DATE,\n    foreign key (LocationID) references geolocation(LocationID),\n    foreign key (LocationID) references location(LocationID),\n    foreign key (BrandID) references rootbeerbrand(BrandID)\n)"
            },
            {
                "name": "rootbeerreview",
                "sql": "CREATE TABLE rootbeerreview\n(\n    CustomerID INTEGER,\n    BrandID    INTEGER,\n    StarRating INTEGER,\n    ReviewDate DATE,\n    Review     TEXT,\n    primary key (CustomerID, BrandID),\n    foreign key (CustomerID) references customers(CustomerID),\n    foreign key (BrandID) references rootbeerbrand(BrandID)\n)"
            },
            {
                "name": "transaction",
                "sql": "CREATE TABLE \"transaction\"\n(\n    TransactionID    INTEGER\n            primary key,\n    CreditCardNumber INTEGER,\n    CustomerID       INTEGER,\n    TransactionDate  DATE,\n    CreditCardType   TEXT,\n    LocationID       INTEGER,\n    RootBeerID       INTEGER,\n    PurchasePrice    REAL,\n    foreign key (CustomerID) references customers(CustomerID),\n    foreign key (LocationID) references location(LocationID),\n    foreign key (RootBeerID) references rootbeer(RootBeerID)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "course",
                "sql": "CREATE TABLE course\n(\n    course_id   INTEGER\n        constraint course_pk\n            primary key,\n    courseLevel TEXT\n)"
            },
            {
                "name": "person",
                "sql": "CREATE TABLE person\n(\n    p_id           INTEGER\n        constraint person_pk\n            primary key,\n    professor      INTEGER,\n    student        INTEGER,\n    hasPosition    TEXT,\n    inPhase        TEXT,\n    yearsInProgram TEXT\n)"
            },
            {
                "name": "advisedBy",
                "sql": "CREATE TABLE \"advisedBy\"\n(\n    p_id       INTEGER,\n    p_id_dummy INTEGER,\n    constraint advisedBy_pk\n        primary key (p_id, p_id_dummy),\n    constraint advisedBy_person_p_id_p_id_fk\n        foreign key (p_id, p_id_dummy) references person (p_id, p_id)\n)"
            },
            {
                "name": "taughtBy",
                "sql": "CREATE TABLE taughtBy\n(\n    course_id INTEGER,\n    p_id      INTEGER,\n    primary key (course_id, p_id),\n    foreign key (p_id) references person(p_id),\n    foreign key (course_id) references course(course_id)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "beer_factory",
            "toxicology",
            "student_club",
            "superhero",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "trains",
            "computer_student",
            "ice_hockey_draft",
            "sales_in_weather",
            "food_inspection",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "movie_platform_ext",
        "tables": [
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            }
        ],
        "original": [
            "movie_platform",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu"
        ]
    },
    {
        "name": "hockey_ext",
        "tables": [
            {
                "name": "AwardsMisc",
                "sql": "CREATE TABLE AwardsMisc\n(\n    name  TEXT not null\n        primary key,\n    ID    TEXT,\n    award TEXT,\n    year  INTEGER,\n    lgID  TEXT,\n    note  TEXT\n)"
            },
            {
                "name": "HOF",
                "sql": "CREATE TABLE HOF\n(\n    year     INTEGER,\n    hofID    TEXT not null\n        primary key,\n    name     TEXT,\n    category TEXT\n)"
            },
            {
                "name": "Teams",
                "sql": "CREATE TABLE Teams\n(\n    year       INTEGER          not null,\n    lgID       TEXT,\n    tmID       TEXT not null,\n    franchID   TEXT,\n    confID     TEXT,\n    divID      TEXT,\n    rank       INTEGER,\n    playoff    TEXT,\n    G          INTEGER,\n    W          INTEGER,\n    L          INTEGER,\n    T          INTEGER,\n    OTL        TEXT,\n    Pts        INTEGER,\n    SoW        TEXT,\n    SoL        TEXT,\n    GF         INTEGER,\n    GA         INTEGER,\n    name       TEXT,\n    PIM        TEXT,\n    BenchMinor TEXT,\n    PPG        TEXT,\n    PPC       TEXT,\n    SHA        TEXT,\n    PKG       TEXT,\n    PKC        TEXT,\n    SHF        TEXT,\n    primary key (year, tmID)\n)"
            },
            {
                "name": "Coaches",
                "sql": "CREATE TABLE Coaches\n(\n    coachID TEXT    not null,\n    year    INTEGER not null,\n    tmID    TEXT    not null,\n    lgID    TEXT,\n    stint   INTEGER not null,\n    notes   TEXT,\n    g       INTEGER,\n    w       INTEGER,\n    l       INTEGER,\n    t       INTEGER,\n    postg   TEXT,\n    postw   TEXT,\n    postl   TEXT,\n    postt   TEXT,\n    primary key (coachID, year, tmID, stint),\n    foreign key (year, tmID) references Teams (year, tmID)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "AwardsCoaches",
                "sql": "CREATE TABLE AwardsCoaches\n(\n    coachID TEXT,\n    award   TEXT,\n    year    INTEGER,\n    lgID    TEXT,\n    note    TEXT,\n    foreign key (coachID) references Coaches (coachID)\n)"
            },
            {
                "name": "Master",
                "sql": "CREATE TABLE Master\n(\n    playerID     TEXT,\n    coachID      TEXT,\n    hofID        TEXT,\n    firstName    TEXT,\n    lastName     TEXT not null,\n    nameNote     TEXT,\n    nameGiven    TEXT,\n    nameNick     TEXT,\n    height       TEXT,\n    weight       TEXT,\n    shootCatch   TEXT,\n    legendsID    TEXT,\n    ihdbID       TEXT,\n    hrefID       TEXT,\n    firstNHL     TEXT,\n    lastNHL      TEXT,\n    firstWHA     TEXT,\n    lastWHA     TEXT,\n    pos          TEXT,\n    birthYear    TEXT,\n    birthMon     TEXT,\n    birthDay     TEXT,\n    birthCountry TEXT,\n    birthState   TEXT,\n    birthCity    TEXT,\n    deathYear    TEXT,\n    deathMon     TEXT,\n    deathDay     TEXT,\n    deathCountry TEXT,\n    deathState   TEXT,\n    deathCity    TEXT,\n    foreign key (coachID) references Coaches (coachID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "AwardsPlayers",
                "sql": "CREATE TABLE AwardsPlayers\n(\n    playerID TEXT    not null,\n    award    TEXT    not null,\n    year     INTEGER not null,\n    lgID     TEXT,\n    note     TEXT,\n    pos      TEXT,\n    primary key (playerID, award, year),\n    foreign key (playerID) references Master (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "CombinedShutouts",
                "sql": "CREATE TABLE CombinedShutouts\n(\n    year      INTEGER,\n    month     INTEGER,\n    date      INTEGER,\n    tmID      TEXT,\n    oppID     TEXT,\n    \"R/P\"     TEXT,\n    IDgoalie1 TEXT,\n    IDgoalie2 TEXT,\n    foreign key (IDgoalie1) references Master (playerID)\n            on update cascade on delete cascade,\n    foreign key (IDgoalie2) references  Master (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Goalies",
                "sql": "CREATE TABLE Goalies\n(\n    playerID TEXT    not null,\n    year     INTEGER not null,\n    stint    INTEGER not null,\n    tmID     TEXT,\n    lgID     TEXT,\n    GP       TEXT,\n    Min      TEXT,\n    W        TEXT,\n    L        TEXT,\n    \"T/OL\"   TEXT,\n    ENG      TEXT,\n    SHO      TEXT,\n    GA       TEXT,\n    SA       TEXT,\n    PostGP   TEXT,\n    PostMin  TEXT,\n    PostW    TEXT,\n    PostL    TEXT,\n    PostT    TEXT,\n    PostENG  TEXT,\n    PostSHO  TEXT,\n    PostGA   TEXT,\n    PostSA   TEXT,\n    primary key (playerID, year, stint),\n    foreign key (year, tmID) references Teams (year, tmID)\n        on update cascade on delete cascade,\n    foreign key (playerID) references Master (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "GoaliesSC",
                "sql": "CREATE TABLE GoaliesSC\n(\n    playerID TEXT    not null,\n    year     INTEGER not null,\n    tmID     TEXT,\n    lgID     TEXT,\n    GP       INTEGER,\n    Min      INTEGER,\n    W        INTEGER,\n    L        INTEGER,\n    T        INTEGER,\n    SHO      INTEGER,\n    GA       INTEGER,\n    primary key (playerID, year),\n    foreign key (year, tmID) references Teams (year, tmID)\n        on update cascade on delete cascade,\n    foreign key (playerID) references Master (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "GoaliesShootout",
                "sql": "CREATE TABLE GoaliesShootout\n(\n    playerID TEXT,\n    year     INTEGER,\n    stint    INTEGER,\n    tmID     TEXT,\n    W        INTEGER,\n    L        INTEGER,\n    SA       INTEGER,\n    GA       INTEGER,\n    foreign key (year, tmID) references Teams (year, tmID)\n        on update cascade on delete cascade,\n    foreign key (playerID)  references Master (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Scoring",
                "sql": "CREATE TABLE Scoring\n(\n    playerID  TEXT,\n    year      INTEGER,\n    stint     INTEGER,\n    tmID      TEXT,\n    lgID      TEXT,\n    pos       TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    Pts       INTEGER,\n    PIM       INTEGER,\n    \"+/-\"     TEXT,\n    PPG       TEXT,\n    PPA       TEXT,\n    SHG       TEXT,\n    SHA       TEXT,\n    GWG       TEXT,\n    GTG       TEXT,\n    SOG       TEXT,\n    PostGP    TEXT,\n    PostG     TEXT,\n    PostA     TEXT,\n    PostPts   TEXT,\n    PostPIM   TEXT,\n    \"Post+/-\" TEXT,\n    PostPPG   TEXT,\n    PostPPA   TEXT,\n    PostSHG   TEXT,\n    PostSHA   TEXT,\n    PostGWG  TEXT,\n    PostSOG   TEXT,\n    foreign key (year, tmID) references Teams (year, tmID)\n        on update cascade on delete cascade,\n    foreign key (playerID) references Master (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "ScoringSC",
                "sql": "CREATE TABLE ScoringSC\n(\n    playerID TEXT,\n    year     INTEGER,\n    tmID     TEXT,\n    lgID     TEXT,\n    pos      TEXT,\n    GP       INTEGER,\n    G        INTEGER,\n    A        INTEGER,\n    Pts      INTEGER,\n    PIM      INTEGER,\n    foreign key (year, tmID) references Teams (year, tmID)\n        on update cascade on delete cascade,\n    foreign key (playerID) references Master (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "ScoringShootout",
                "sql": "CREATE TABLE ScoringShootout\n(\n    playerID TEXT,\n    year     INTEGER,\n    stint    INTEGER,\n    tmID     TEXT,\n    S        INTEGER,\n    G        INTEGER,\n    GDG      INTEGER,\n     foreign key (year, tmID) references Teams (year, tmID)\n        on update cascade on delete cascade,\n    foreign key (playerID) references Master (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "ScoringSup",
                "sql": "CREATE TABLE ScoringSup\n(\n    playerID TEXT,\n    year     INTEGER,\n    PPA      TEXT,\n    SHA      TEXT,\n     foreign key (playerID) references Master (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "SeriesPost",
                "sql": "CREATE TABLE SeriesPost\n(\n    year        INTEGER,\n    round       TEXT,\n    series      TEXT,\n    tmIDWinner  TEXT,\n    lgIDWinner  TEXT,\n    tmIDLoser   TEXT,\n    lgIDLoser   TEXT,\n    W           INTEGER,\n    L           INTEGER,\n    T           INTEGER,\n    GoalsWinner INTEGER,\n    GoalsLoser  INTEGER,\n    note        TEXT,\n    foreign key (year, tmIDWinner) references Teams (year, tmID)\n        on update cascade on delete cascade,\n    foreign key (year, tmIDLoser) references Teams (year, tmID)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "TeamSplits",
                "sql": "CREATE TABLE TeamSplits\n(\n    year  INTEGER          not null,\n    lgID  TEXT,\n    tmID  TEXT not null,\n    hW    INTEGER,\n    hL    INTEGER,\n    hT    INTEGER,\n    hOTL  TEXT,\n    rW    INTEGER,\n    rL    INTEGER,\n    rT    INTEGER,\n    rOTL  TEXT,\n    SepW  TEXT,\n    SepL  TEXT,\n    SepT  TEXT,\n    SepOL TEXT,\n    OctW TEXT,\n    OctL  TEXT,\n    OctT  TEXT,\n    OctOL TEXT,\n    NovW  TEXT,\n    NovL  TEXT,\n    NovT  TEXT,\n    NovOL TEXT,\n    DecW  TEXT,\n    DecL  TEXT,\n    DecT  TEXT,\n    DecOL TEXT,\n    JanW  INTEGER,\n    JanL  INTEGER,\n    JanT  INTEGER,\n    JanOL TEXT,\n    FebW  INTEGER,\n    FebL  INTEGER,\n    FebT  INTEGER,\n    FebOL TEXT,\n    MarW  TEXT,\n    MarL  TEXT,\n    MarT  TEXT,\n    MarOL TEXT,\n    AprW  TEXT,\n    AprL  TEXT,\n    AprT  TEXT,\n    AprOL TEXT,\n    primary key (year, tmID),\n    foreign key (year, tmID) references Teams (year, tmID)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "TeamVsTeam",
                "sql": "CREATE TABLE TeamVsTeam\n(\n    year  INTEGER          not null,\n    lgID  TEXT,\n    tmID  TEXT not null,\n    oppID TEXT not null,\n    W     INTEGER,\n    L     INTEGER,\n    T     INTEGER,\n    OTL   TEXT,\n    primary key (year, tmID, oppID),\n    foreign key (year, tmID) references Teams (year, tmID)\n        on update cascade on delete cascade,\n    foreign key (oppID, year) references Teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "TeamsHalf",
                "sql": "CREATE TABLE TeamsHalf\n(\n    year INTEGER          not null,\n    lgID TEXT,\n    tmID TEXT not null,\n    half INTEGER          not null,\n    rank INTEGER,\n    G    INTEGER,\n    W    INTEGER,\n    L    INTEGER,\n    T    INTEGER,\n    GF   INTEGER,\n    GA   INTEGER,\n    primary key (year, tmID, half),\n    foreign key (tmID, year) references Teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "TeamsPost",
                "sql": "CREATE TABLE TeamsPost\n(\n    year       INTEGER          not null,\n    lgID       TEXT,\n    tmID       TEXT not null,\n    G          INTEGER,\n    W          INTEGER,\n    L          INTEGER,\n    T          INTEGER,\n    GF         INTEGER,\n    GA         INTEGER,\n    PIM        TEXT,\n    BenchMinor TEXT,\n    PPG        TEXT,\n    PPC        TEXT,\n    SHA        TEXT,\n    PKG        TEXT,\n    PKC        TEXT,\n    SHF        TEXT,\n    primary key (year, tmID),\n    foreign key (year, tmID) references Teams (year, tmID)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "TeamsSC",
                "sql": "CREATE TABLE TeamsSC\n(\n    year INTEGER          not null,\n    lgID TEXT,\n    tmID TEXT not null,\n    G    INTEGER,\n    W    INTEGER,\n    L    INTEGER,\n    T    INTEGER,\n    GF   INTEGER,\n    GA   INTEGER,\n    PIM  TEXT,\n    primary key (year, tmID),\n    foreign key (year, tmID) references Teams (year, tmID)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "abbrev",
                "sql": "CREATE TABLE abbrev\n(\n    Type     TEXT not null,\n    Code     TEXT not null,\n    Fullname TEXT,\n    primary key (Type, Code)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "langs",
                "sql": "CREATE TABLE langs(lid    INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lang   TEXT UNIQUE,\n                            locale TEXT UNIQUE,\n                            pages  INTEGER DEFAULT 0,  -- total pages in this language\n                            words  INTEGER DEFAULT 0)"
            },
            {
                "name": "pages",
                "sql": "CREATE TABLE pages(pid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                            page INTEGER DEFAULT NULL, -- wikipedia page id\n                            revision INTEGER DEFAULT NULL, -- wikipedia revision page id\n                            title TEXT,\n                            words INTEGER DEFAULT 0, -- number of different words in this page\n                            UNIQUE(lid,page,title))"
            },
            {
                "name": "words",
                "sql": "CREATE TABLE words(wid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            word        TEXT UNIQUE,\n                            occurrences INTEGER DEFAULT 0)"
            },
            {
                "name": "langs_words",
                "sql": "CREATE TABLE langs_words(lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER, -- repetitions of this word in this language\n                                        PRIMARY KEY(lid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "pages_words",
                "sql": "CREATE TABLE pages_words(pid INTEGER REFERENCES pages(pid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER DEFAULT 0, -- times this word appears into this page\n                                        PRIMARY KEY(pid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "biwords",
                "sql": "CREATE TABLE biwords(lid    INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w1st   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w2nd   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                occurrences INTEGER DEFAULT 0, -- times this pair appears in this language/page\n                                PRIMARY KEY(lid,w1st,w2nd))\n                                WITHOUT ROWID"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "breweries",
                "sql": "CREATE TABLE breweries\n(\n    id    INTEGER          not null\n        primary key,\n    name  TEXT null,\n    city  TEXT null,\n    state TEXT null\n)"
            },
            {
                "name": "beers",
                "sql": "CREATE TABLE \"beers\"\n(\n    id         INTEGER not null\n        primary key,\n    brewery_id INTEGER not null\n        constraint beers_ibfk_1\n            references breweries,\n    abv        REAL,\n    ibu        REAL,\n    name       TEXT    not null,\n    style      TEXT,\n    ounces     REAL    not null\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "hockey",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "world",
            "restaurant",
            "language_corpus",
            "trains",
            "sales_in_weather",
            "craftbeer",
            "menu",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "university_ext",
        "tables": [
            {
                "name": "country",
                "sql": "CREATE TABLE country\n(\n    id           INTEGER not null\n            primary key,\n    country_name TEXT default NULL\n)"
            },
            {
                "name": "ranking_system",
                "sql": "CREATE TABLE ranking_system\n(\n    id          INTEGER not null\n            primary key,\n    system_name TEXT default NULL\n)"
            },
            {
                "name": "ranking_criteria",
                "sql": "CREATE TABLE ranking_criteria\n(\n    id                INTEGER not null\n            primary key,\n    ranking_system_id INTEGER          default NULL,\n    criteria_name     TEXT default NULL,\n    foreign key (ranking_system_id) references ranking_system(id)\n)"
            },
            {
                "name": "university",
                "sql": "CREATE TABLE university\n(\n    id              INTEGER not null\n            primary key,\n    country_id      INTEGER          default NULL,\n    university_name TEXT default NULL,\n    foreign key (country_id) references country(id)\n)"
            },
            {
                "name": "university_ranking_year",
                "sql": "CREATE TABLE university_ranking_year\n(\n    university_id       INTEGER default NULL,\n    ranking_criteria_id INTEGER default NULL,\n    year                INTEGER default NULL,\n    score               INTEGER default NULL,\n    foreign key (ranking_criteria_id) references ranking_criteria(id),\n    foreign key (university_id) references university(id)\n)"
            },
            {
                "name": "university_year",
                "sql": "CREATE TABLE university_year\n(\n    university_id              INTEGER           default NULL,\n    year                       INTEGER           default NULL,\n    num_students               INTEGER           default NULL,\n    student_staff_ratio        REAL default NULL,\n    pct_international_students INTEGER           default NULL,\n    pct_female_students        INTEGER           default NULL,\n    foreign key (university_id) references university(id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "university",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "european_football_1",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "student_loan_ext",
        "tables": [
            {
                "name": "bool",
                "sql": "CREATE TABLE bool\n(\n    \"name\" TEXT default '' not null\n        primary key\n)"
            },
            {
                "name": "person",
                "sql": "CREATE TABLE person\n(\n    \"name\" TEXT default '' not null\n        primary key\n)"
            },
            {
                "name": "disabled",
                "sql": "CREATE TABLE disabled\n(\n    \"name\" TEXT default '' not null\n        primary key,\n        foreign key (\"name\") references person (\"name\")\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "enlist",
                "sql": "CREATE TABLE enlist\n(\n    \"name\"  TEXT not null,\n    organ TEXT not null,\n        foreign key (\"name\") references person (\"name\")\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "filed_for_bankrupcy",
                "sql": "CREATE TABLE filed_for_bankrupcy\n(\n    \"name\" TEXT default '' not null\n        primary key,\n        foreign key (\"name\") references person (\"name\")\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "longest_absense_from_school",
                "sql": "CREATE TABLE longest_absense_from_school\n(\n    \"name\"  TEXT default '' not null\n        primary key,\n    \"month\" INTEGER       default 0  null,\n        foreign key (\"name\") references person (\"name\")\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "male",
                "sql": "CREATE TABLE male\n(\n    \"name\" TEXT default '' not null\n        primary key,\n        foreign key (\"name\") references person (\"name\")\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "no_payment_due",
                "sql": "CREATE TABLE no_payment_due\n(\n    \"name\" TEXT default '' not null\n        primary key,\n    bool TEXT             null,\n        foreign key (\"name\") references person (\"name\")\n            on update cascade on delete cascade,\n        foreign key (bool) references bool (\"name\")\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "unemployed",
                "sql": "CREATE TABLE unemployed\n(\n    \"name\" TEXT default '' not null\n        primary key,\n        foreign key (\"name\") references person (\"name\")\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "enrolled",
                "sql": "CREATE TABLE `enrolled` (\n  `name` TEXT NOT NULL,\n  `school` TEXT NOT NULL,\n  `month` INTEGER NOT NULL DEFAULT 0,\n  PRIMARY KEY (`name`,`school`),\n  FOREIGN KEY (`name`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "businesses",
                "sql": "CREATE TABLE `businesses` (\n  `business_id` INTEGER NOT NULL,\n  `name` TEXT NOT NULL,\n  `address` TEXT DEFAULT NULL,\n  `city` TEXT DEFAULT NULL,\n  `postal_code` TEXT DEFAULT NULL,\n  `latitude` REAL DEFAULT NULL,\n  `longitude` REAL DEFAULT NULL,\n  `phone_number` INTEGER DEFAULT NULL,\n  `tax_code` TEXT DEFAULT NULL,\n  `business_certificate` INTEGER NOT NULL,\n  `application_date` DATE DEFAULT NULL,\n  `owner_name` TEXT NOT NULL,\n  `owner_address` TEXT DEFAULT NULL,\n  `owner_city` TEXT DEFAULT NULL,\n  `owner_state` TEXT DEFAULT NULL,\n  `owner_zip` TEXT DEFAULT NULL,\n  PRIMARY KEY (`business_id`)\n)"
            },
            {
                "name": "inspections",
                "sql": "CREATE TABLE `inspections` (\n  `business_id` INTEGER NOT NULL,\n  `score` INTEGER DEFAULT NULL,\n  `date` DATE NOT NULL,\n  `type` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "violations",
                "sql": "CREATE TABLE `violations` (\n  `business_id` INTEGER NOT NULL,\n  `date` DATE NOT NULL,\n  `violation_type_id` TEXT NOT NULL,\n  `risk_category` TEXT NOT NULL,\n  `description` TEXT NOT NULL,\n  FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    movie_title  TEXT\n            primary key,\n    release_date TEXT,\n    hero         TEXT,\n    villian      TEXT,\n    song         TEXT,\n    foreign key (hero) references \"voice-actors\"(character)\n)"
            },
            {
                "name": "director",
                "sql": "CREATE TABLE director\n(\n    name     TEXT\n            primary key,\n    director TEXT,\n    foreign key (name) references characters(movie_title)\n)"
            },
            {
                "name": "movies_total_gross",
                "sql": "CREATE TABLE movies_total_gross\n(\n    movie_title              TEXT,\n    release_date             TEXT,\n    genre                    TEXT,\n    MPAA_rating              TEXT,\n    total_gross              TEXT,\n    inflation_adjusted_gross TEXT,\n    primary key (movie_title, release_date),\n    foreign key (movie_title) references characters(movie_title)\n)"
            },
            {
                "name": "revenue",
                "sql": "CREATE TABLE revenue\n(\n    Year                              INTEGER\n            primary key,\n    \"Studio Entertainment[NI 1]\"      REAL,\n    \"Disney Consumer Products[NI 2]\"  REAL,\n    \"Disney Interactive[NI 3][Rev 1]\" INTEGER,\n    \"Walt Disney Parks and Resorts\"   REAL,\n    \"Disney Media Networks\"           TEXT,\n    Total                             INTEGER\n)"
            },
            {
                "name": "voice-actors",
                "sql": "CREATE TABLE \"voice-actors\"\n(\n    character     TEXT\n            primary key,\n    \"voice-actor\" TEXT,\n    movie         TEXT,\n    foreign key (movie) references characters(movie_title)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "student_loan",
            "toxicology",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "food_inspection",
            "menu",
            "disney",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "movie_ext",
        "tables": [
            {
                "name": "actor",
                "sql": "CREATE TABLE actor\n(\n    ActorID           INTEGER\n        constraint actor_pk\n            primary key,\n    Name              TEXT,\n    \"Date of Birth\"   DATE,\n    \"Birth City\"      TEXT,\n    \"Birth Country\"   TEXT,\n    \"Height (Inches)\" INTEGER,\n    Biography         TEXT,\n    Gender            TEXT,\n    Ethnicity         TEXT,\n    NetWorth          TEXT\n)"
            },
            {
                "name": "movie",
                "sql": "CREATE TABLE movie\n(\n    MovieID        INTEGER\n        constraint movie_pk\n            primary key,\n    Title          TEXT,\n    \"MPAA Rating\"  TEXT,\n    Budget         INTEGER,\n    Gross          INTEGER,\n    \"Release Date\" TEXT,\n    Genre          TEXT,\n    Runtime        INTEGER,\n    Rating         REAL,\n    \"Rating Count\" INTEGER,\n    Summary        TEXT\n)"
            },
            {
                "name": "characters",
                "sql": "CREATE TABLE characters\n(\n    MovieID          INTEGER,\n    ActorID          INTEGER,\n    \"Character Name\" TEXT,\n    creditOrder      INTEGER,\n    pay              TEXT,\n    screentime       TEXT,\n    primary key (MovieID, ActorID),\n    foreign key (ActorID) references actor(ActorID),\n    foreign key (MovieID) references movie(MovieID)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "movie",
            "toxicology",
            "student_club",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "music_tracker",
            "app_store"
        ]
    },
    {
        "name": "video_games_ext",
        "tables": [
            {
                "name": "genre",
                "sql": "CREATE TABLE genre\n(\n    id         INTEGER not null\n            primary key,\n    genre_name TEXT default NULL\n)"
            },
            {
                "name": "game",
                "sql": "CREATE TABLE game\n(\n    id        INTEGER not null\n            primary key,\n    genre_id  INTEGER          default NULL,\n    game_name TEXT default NULL,\n    foreign key (genre_id) references genre(id)\n)"
            },
            {
                "name": "platform",
                "sql": "CREATE TABLE platform\n(\n    id            INTEGER not null\n            primary key,\n    platform_name TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "game_publisher",
                "sql": "CREATE TABLE game_publisher\n(\n    id           INTEGER not null\n            primary key,\n    game_id      INTEGER default NULL,\n    publisher_id INTEGER default NULL,\n    foreign key (game_id) references game(id),\n    foreign key (publisher_id) references publisher(id)\n)"
            },
            {
                "name": "game_platform",
                "sql": "CREATE TABLE game_platform\n(\n    id                INTEGER not null\n            primary key,\n    game_publisher_id INTEGER default NULL,\n    platform_id       INTEGER default NULL,\n    release_year      INTEGER default NULL,\n    foreign key (game_publisher_id) references game_publisher(id),\n    foreign key (platform_id) references platform(id)\n)"
            },
            {
                "name": "region",
                "sql": "CREATE TABLE region\n(\n    id          INTEGER not null\n            primary key,\n    region_name TEXT default NULL\n)"
            },
            {
                "name": "region_sales",
                "sql": "CREATE TABLE region_sales\n(\n    region_id        INTEGER           default NULL,\n    game_platform_id INTEGER           default NULL,\n    num_sales        REAL default NULL,\n    foreign key (game_platform_id) references game_platform(id),\n    foreign key (region_id) references region(id)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "langs",
                "sql": "CREATE TABLE langs(lid    INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lang   TEXT UNIQUE,\n                            locale TEXT UNIQUE,\n                            pages  INTEGER DEFAULT 0,  -- total pages in this language\n                            words  INTEGER DEFAULT 0)"
            },
            {
                "name": "pages",
                "sql": "CREATE TABLE pages(pid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                            page INTEGER DEFAULT NULL, -- wikipedia page id\n                            revision INTEGER DEFAULT NULL, -- wikipedia revision page id\n                            title TEXT,\n                            words INTEGER DEFAULT 0, -- number of different words in this page\n                            UNIQUE(lid,page,title))"
            },
            {
                "name": "words",
                "sql": "CREATE TABLE words(wid INTEGER PRIMARY KEY AUTOINCREMENT,\n                            word        TEXT UNIQUE,\n                            occurrences INTEGER DEFAULT 0)"
            },
            {
                "name": "langs_words",
                "sql": "CREATE TABLE langs_words(lid INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER, -- repetitions of this word in this language\n                                        PRIMARY KEY(lid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "pages_words",
                "sql": "CREATE TABLE pages_words(pid INTEGER REFERENCES pages(pid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        wid INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                        occurrences INTEGER DEFAULT 0, -- times this word appears into this page\n                                        PRIMARY KEY(pid,wid))\n                                        WITHOUT ROWID"
            },
            {
                "name": "biwords",
                "sql": "CREATE TABLE biwords(lid    INTEGER REFERENCES langs(lid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w1st   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                w2nd   INTEGER REFERENCES words(wid) ON UPDATE CASCADE ON DELETE CASCADE,\n                                occurrences INTEGER DEFAULT 0, -- times this pair appears in this language/page\n                                PRIMARY KEY(lid,w1st,w2nd))\n                                WITHOUT ROWID"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "Method",
                "sql": "CREATE TABLE \"Method\"\n(\n    Id            INTEGER not null\n        primary key autoincrement,\n    Name          TEXT,\n    FullComment   TEXT,\n    Summary       TEXT,\n    ApiCalls      TEXT,\n    CommentIsXml  INTEGER,\n    SampledAt     INTEGER,\n    SolutionId    INTEGER,\n    Lang          TEXT,\n    NameTokenized TEXT\n)"
            },
            {
                "name": "MethodParameter",
                "sql": "CREATE TABLE \"MethodParameter\"\n(\n    Id       INTEGER not null\n        primary key autoincrement,\n    MethodId TEXT,\n    Type     TEXT,\n    Name     TEXT\n)"
            },
            {
                "name": "Repo",
                "sql": "CREATE TABLE Repo\n(\n    Id            INTEGER not null\n        primary key autoincrement,\n    Url           TEXT,\n    Stars         INTEGER,\n    Forks         INTEGER,\n    Watchers      INTEGER,\n    ProcessedTime INTEGER\n)"
            },
            {
                "name": "Solution",
                "sql": "CREATE TABLE Solution\n(\n    Id            INTEGER not null\n        primary key autoincrement,\n    RepoId        INTEGER,\n    Path          TEXT,\n    ProcessedTime INTEGER,\n    WasCompiled   INTEGER\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "breweries",
                "sql": "CREATE TABLE breweries\n(\n    id    INTEGER          not null\n        primary key,\n    name  TEXT null,\n    city  TEXT null,\n    state TEXT null\n)"
            },
            {
                "name": "beers",
                "sql": "CREATE TABLE \"beers\"\n(\n    id         INTEGER not null\n        primary key,\n    brewery_id INTEGER not null\n        constraint beers_ibfk_1\n            references breweries,\n    abv        REAL,\n    ibu        REAL,\n    name       TEXT    not null,\n    style      TEXT,\n    ounces     REAL    not null\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "video_games",
            "toxicology",
            "student_club",
            "debit_card_specializing",
            "california_schools",
            "thrombosis_prediction",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "language_corpus",
            "trains",
            "codebase_comments",
            "ice_hockey_draft",
            "craftbeer",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "donor_ext",
        "tables": [
            {
                "name": "essays",
                "sql": "CREATE TABLE \"essays\"\n(\n    projectid         TEXT,\n    teacher_acctid    TEXT,\n    title             TEXT,\n    short_description TEXT,\n    need_statement    TEXT,\n    essay             TEXT\n)"
            },
            {
                "name": "projects",
                "sql": "CREATE TABLE \"projects\"\n(\n    projectid                              TEXT not null\n        primary key,\n    teacher_acctid                         TEXT,\n    schoolid                               TEXT,\n    school_ncesid                          TEXT,\n    school_latitude                        REAL,\n    school_longitude                       REAL,\n    school_city                            TEXT,\n    school_state                           TEXT,\n    school_zip                             INTEGER,\n    school_metro                           TEXT,\n    school_district                        TEXT,\n    school_county                          TEXT,\n    school_charter                         TEXT,\n    school_magnet                          TEXT,\n    school_year_round                      TEXT,\n    school_nlns                            TEXT,\n    school_kipp                            TEXT,\n    school_charter_ready_promise           TEXT,\n    teacher_prefix                         TEXT,\n    teacher_teach_for_america              TEXT,\n    teacher_ny_teaching_fellow             TEXT,\n    primary_focus_subject                  TEXT,\n    primary_focus_area                     TEXT,\n    secondary_focus_subject                TEXT,\n    secondary_focus_area                   TEXT,\n    resource_type                          TEXT,\n    poverty_level                          TEXT,\n    grade_level                            TEXT,\n    fulfillment_labor_materials            REAL,\n    total_price_excluding_optional_support REAL,\n    total_price_including_optional_support REAL,\n    students_reached                       INTEGER,\n    eligible_double_your_impact_match      TEXT,\n    eligible_almost_home_match             TEXT,\n    date_posted                            DATE\n)"
            },
            {
                "name": "donations",
                "sql": "CREATE TABLE donations\n(\n    donationid                               TEXT not null\n            primary key,\n    projectid                               TEXT,\n    donor_acctid                             TEXT,\n    donor_city                               TEXT,\n    donor_state                              TEXT,\n    donor_zip                                TEXT,\n    is_teacher_acct                          TEXT,\n    donation_timestamp                       DATETIME,\n    donation_to_project                      REAL,\n    donation_optional_support                REAL,\n    donation_total                           REAL,\n    dollar_amount                            TEXT,\n    donation_included_optional_support       TEXT,\n    payment_method                           TEXT,\n    payment_included_acct_credit             TEXT,\n    payment_included_campaign_gift_card      TEXT,\n    payment_included_web_purchased_gift_card TEXT,\n    payment_was_promo_matched                TEXT,\n    via_giving_page                          TEXT,\n    for_honoree                              TEXT,\n    donation_message                         TEXT,\n    foreign key (projectid) references projects(projectid)\n)"
            },
            {
                "name": "resources",
                "sql": "CREATE TABLE resources\n(\n    resourceid            TEXT not null\n            primary key,\n    projectid             TEXT,\n    vendorid              INTEGER,\n    vendor_name           TEXT,\n    project_resource_type TEXT,\n    item_name             TEXT,\n    item_number           TEXT,\n    item_unit_price       REAL,\n    item_quantity         INTEGER,\n    foreign key (projectid) references projects(projectid)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "badges",
                "sql": "CREATE TABLE badges\n(\n    Id     INTEGER          not null\n        primary key,\n    UserId INTEGER          null,\n    Name   TEXT null,\n    Date   DATETIME     null,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "comments",
                "sql": "CREATE TABLE comments\n(\n    Id              INTEGER          not null\n        primary key,\n    PostId          INTEGER          null,\n    Score           INTEGER          null,\n    Text            TEXT     null,\n    CreationDate    DATETIME     null,\n    UserId          INTEGER          null,\n    UserDisplayName TEXT null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "postHistory",
                "sql": "CREATE TABLE postHistory\n(\n    Id                INTEGER          not null UNIQUE\n        primary key,\n    PostHistoryTypeId INTEGER          null,\n    PostId            INTEGER          null,\n    RevisionGUID      TEXT null,\n    CreationDate      DATETIME     null,\n    UserId            INTEGER          null,\n    Text              TEXT     null,\n    Comment           TEXT         null,\n    UserDisplayName   TEXT null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "postLinks",
                "sql": "CREATE TABLE postLinks\n(\n    Id            INTEGER      not null\n        primary key,\n    CreationDate  DATETIME null,\n    PostId        INTEGER      null,\n    RelatedPostId INTEGER      null,\n    LinkTypeId    INTEGER      null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (RelatedPostId) references posts (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "posts",
                "sql": "CREATE TABLE posts\n(\n    Id                    INTEGER          not null UNIQUE\n        primary key,\n    PostTypeId            INTEGER          null,\n    AcceptedAnswerId      INTEGER          null,\n    CreaionDate           DATETIME     null,\n    Score                 INTEGER          null,\n    ViewCount             INTEGER          null,\n    Body                  TEXT     null,\n    OwnerUserId           INTEGER          null,\n    LasActivityDate       DATETIME     null,\n    Title                 TEXT null,\n    Tags                  TEXT null,\n    AnswerCount           INTEGER          null,\n    CommentCount          INTEGER          null,\n    FavoriteCount         INTEGER          null,\n    LastEditorUserId      INTEGER          null,\n    LastEditDate          DATETIME     null,\n    CommunityOwnedDate    DATETIME    null,\n    ParentId              INTEGER          null,\n    ClosedDate            DATETIME     null,\n    OwnerDisplayName      TEXT null,\n    LastEditorDisplayName TEXT null,\n        foreign key (LastEditorUserId) references users (Id)\n            on update cascade on delete cascade,\n        foreign key (OwnerUserId) references users (Id)\n            on update cascade on delete cascade,\n        foreign key (ParentId) references posts (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE tags\n(\n    Id            INTEGER          not null\n        primary key,\n    TagName       TEXT null,\n    Count         INTEGER          null,\n    ExcerptPostId INTEGER          null,\n    WikiPostId    INTEGER          null,\n    foreign key (ExcerptPostId) references posts (Id)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "users",
                "sql": "CREATE TABLE users\n(\n    Id              INTEGER          not null UNIQUE\n        primary key,\n    Reputation      INTEGER          null,\n    CreationDate    DATETIME     null,\n    DisplayName     TEXT null,\n    LastAccessDate  DATETIME     null,\n    WebsiteUrl      TEXT null,\n    Location        TEXT null,\n    AboutMe         TEXT     null,\n    Views           INTEGER          null,\n    UpVotes         INTEGER          null,\n    DownVotes       INTEGER          null,\n    AccountId       INTEGER          null,\n    Age             INTEGER          null,\n    ProfileImageUrl TEXT null\n)"
            },
            {
                "name": "votes",
                "sql": "CREATE TABLE votes\n(\n    Id           INTEGER  not null\n        primary key,\n    PostId       INTEGER  null,\n    VoteTypeId   INTEGER  null,\n    CreationDate DATE null,\n    UserId       INTEGER  null,\n    BountyAmount INTEGER  null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "donor",
            "toxicology",
            "student_club",
            "superhero",
            "card_games",
            "codebase_community",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "app_store"
        ]
    },
    {
        "name": "bike_share_1_ext",
        "tables": [
            {
                "name": "station",
                "sql": "CREATE TABLE \"station\"\n(\n    id                INTEGER not null\n        primary key,\n    name              TEXT,\n    lat               REAL,\n    long              REAL,\n    dock_count        INTEGER,\n    city              TEXT,\n    installation_date TEXT\n)"
            },
            {
                "name": "status",
                "sql": "CREATE TABLE \"status\"\n(\n    station_id      INTEGER,\n    bikes_available INTEGER,\n    docks_available INTEGER,\n    time            TEXT\n)"
            },
            {
                "name": "trip",
                "sql": "CREATE TABLE \"trip\"\n(\n    id                 INTEGER not null\n        primary key,\n    duration           INTEGER,\n    start_date         TEXT,\n    start_station_name TEXT,\n    start_station_id   INTEGER,\n    end_date           TEXT,\n    end_station_name   TEXT,\n    end_station_id     INTEGER,\n    bike_id            INTEGER,\n    subscription_type  TEXT,\n    zip_code           INTEGER\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE \"weather\"\n(\n    date                           TEXT,\n    max_temperature_f              INTEGER,\n    mean_temperature_f             INTEGER,\n    min_temperature_f              INTEGER,\n    max_dew_point_f                INTEGER,\n    mean_dew_point_f               INTEGER,\n    min_dew_point_f                INTEGER,\n    max_humidity                   INTEGER,\n    mean_humidity                  INTEGER,\n    min_humidity                   INTEGER,\n    max_sea_level_pressure_inches  REAL,\n    mean_sea_level_pressure_inches REAL,\n    min_sea_level_pressure_inches  REAL,\n    max_visibility_miles           INTEGER,\n    mean_visibility_miles          INTEGER,\n    min_visibility_miles           INTEGER,\n    max_wind_Speed_mph             INTEGER,\n    mean_wind_speed_mph            INTEGER,\n    max_gust_speed_mph             INTEGER,\n    precipitation_inches           TEXT,\n    cloud_cover                    INTEGER,\n    events                         TEXT,\n    wind_dir_degrees               INTEGER,\n    zip_code                       TEXT\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "badges",
                "sql": "CREATE TABLE badges\n(\n    Id     INTEGER          not null\n        primary key,\n    UserId INTEGER          null,\n    Name   TEXT null,\n    Date   DATETIME     null,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "comments",
                "sql": "CREATE TABLE comments\n(\n    Id              INTEGER          not null\n        primary key,\n    PostId          INTEGER          null,\n    Score           INTEGER          null,\n    Text            TEXT     null,\n    CreationDate    DATETIME     null,\n    UserId          INTEGER          null,\n    UserDisplayName TEXT null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "postHistory",
                "sql": "CREATE TABLE postHistory\n(\n    Id                INTEGER          not null UNIQUE\n        primary key,\n    PostHistoryTypeId INTEGER          null,\n    PostId            INTEGER          null,\n    RevisionGUID      TEXT null,\n    CreationDate      DATETIME     null,\n    UserId            INTEGER          null,\n    Text              TEXT     null,\n    Comment           TEXT         null,\n    UserDisplayName   TEXT null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "postLinks",
                "sql": "CREATE TABLE postLinks\n(\n    Id            INTEGER      not null\n        primary key,\n    CreationDate  DATETIME null,\n    PostId        INTEGER      null,\n    RelatedPostId INTEGER      null,\n    LinkTypeId    INTEGER      null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (RelatedPostId) references posts (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "posts",
                "sql": "CREATE TABLE posts\n(\n    Id                    INTEGER          not null UNIQUE\n        primary key,\n    PostTypeId            INTEGER          null,\n    AcceptedAnswerId      INTEGER          null,\n    CreaionDate           DATETIME     null,\n    Score                 INTEGER          null,\n    ViewCount             INTEGER          null,\n    Body                  TEXT     null,\n    OwnerUserId           INTEGER          null,\n    LasActivityDate       DATETIME     null,\n    Title                 TEXT null,\n    Tags                  TEXT null,\n    AnswerCount           INTEGER          null,\n    CommentCount          INTEGER          null,\n    FavoriteCount         INTEGER          null,\n    LastEditorUserId      INTEGER          null,\n    LastEditDate          DATETIME     null,\n    CommunityOwnedDate    DATETIME    null,\n    ParentId              INTEGER          null,\n    ClosedDate            DATETIME     null,\n    OwnerDisplayName      TEXT null,\n    LastEditorDisplayName TEXT null,\n        foreign key (LastEditorUserId) references users (Id)\n            on update cascade on delete cascade,\n        foreign key (OwnerUserId) references users (Id)\n            on update cascade on delete cascade,\n        foreign key (ParentId) references posts (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE tags\n(\n    Id            INTEGER          not null\n        primary key,\n    TagName       TEXT null,\n    Count         INTEGER          null,\n    ExcerptPostId INTEGER          null,\n    WikiPostId    INTEGER          null,\n    foreign key (ExcerptPostId) references posts (Id)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "users",
                "sql": "CREATE TABLE users\n(\n    Id              INTEGER          not null UNIQUE\n        primary key,\n    Reputation      INTEGER          null,\n    CreationDate    DATETIME     null,\n    DisplayName     TEXT null,\n    LastAccessDate  DATETIME     null,\n    WebsiteUrl      TEXT null,\n    Location        TEXT null,\n    AboutMe         TEXT     null,\n    Views           INTEGER          null,\n    UpVotes         INTEGER          null,\n    DownVotes       INTEGER          null,\n    AccountId       INTEGER          null,\n    Age             INTEGER          null,\n    ProfileImageUrl TEXT null\n)"
            },
            {
                "name": "votes",
                "sql": "CREATE TABLE votes\n(\n    Id           INTEGER  not null\n        primary key,\n    PostId       INTEGER  null,\n    VoteTypeId   INTEGER  null,\n    CreationDate DATE null,\n    UserId       INTEGER  null,\n    BountyAmount INTEGER  null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "bike_share_1",
            "toxicology",
            "student_club",
            "superhero",
            "card_games",
            "codebase_community",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "ice_hockey_draft",
            "menu",
            "app_store"
        ]
    },
    {
        "name": "superstore_ext",
        "tables": [
            {
                "name": "people",
                "sql": "CREATE TABLE people\n(\n    \"Customer ID\"   TEXT,\n    \"Customer Name\" TEXT,\n    Segment         TEXT,\n    Country         TEXT,\n    City            TEXT,\n    State           TEXT,\n    \"Postal Code\"   INTEGER,\n    Region          TEXT,\n    primary key (\"Customer ID\", Region)\n)"
            },
            {
                "name": "product",
                "sql": "CREATE TABLE product\n(\n    \"Product ID\"   TEXT,\n    \"Product Name\" TEXT,\n    Category       TEXT,\n    \"Sub-Category\" TEXT,\n    Region         TEXT,\n    primary key (\"Product ID\", Region)\n)"
            },
            {
                "name": "central_superstore",
                "sql": "CREATE TABLE central_superstore\n(\n    \"Row ID\"      INTEGER\n            primary key,\n    \"Order ID\"    TEXT,\n    \"Order Date\"  DATE,\n    \"Ship Date\"   DATE,\n    \"Ship Mode\"   TEXT,\n    \"Customer ID\" TEXT,\n    Region        TEXT,\n    \"Product ID\"  TEXT,\n    Sales         REAL,\n    Quantity      INTEGER,\n    Discount      REAL,\n    Profit        REAL,\n    foreign key (\"Customer ID\", Region) references people(\"Customer ID\",Region),\n    foreign key (\"Product ID\", Region) references product(\"Product ID\",Region)\n)"
            },
            {
                "name": "east_superstore",
                "sql": "CREATE TABLE east_superstore\n(\n    \"Row ID\"      INTEGER\n            primary key,\n    \"Order ID\"    TEXT,\n    \"Order Date\"  DATE,\n    \"Ship Date\"   DATE,\n    \"Ship Mode\"   TEXT,\n    \"Customer ID\" TEXT,\n    Region        TEXT,\n    \"Product ID\"  TEXT,\n    Sales         REAL,\n    Quantity      INTEGER,\n    Discount      REAL,\n    Profit        REAL,\n    foreign key (\"Customer ID\", Region) references people(\"Customer ID\",Region),\n    foreign key (\"Product ID\", Region) references product(\"Product ID\",Region)\n)"
            },
            {
                "name": "south_superstore",
                "sql": "CREATE TABLE south_superstore\n(\n    \"Row ID\"      INTEGER\n            primary key,\n    \"Order ID\"    TEXT,\n    \"Order Date\"  DATE,\n    \"Ship Date\"   DATE,\n    \"Ship Mode\"   TEXT,\n    \"Customer ID\" TEXT,\n    Region        TEXT,\n    \"Product ID\"  TEXT,\n    Sales         REAL,\n    Quantity      INTEGER,\n    Discount      REAL,\n    Profit        REAL,\n    foreign key (\"Customer ID\", Region) references people(\"Customer ID\",Region),\n    foreign key (\"Product ID\", Region) references product(\"Product ID\",Region)\n)"
            },
            {
                "name": "west_superstore",
                "sql": "CREATE TABLE west_superstore\n(\n    \"Row ID\"      INTEGER\n            primary key,\n    \"Order ID\"    TEXT,\n    \"Order Date\"  DATE,\n    \"Ship Date\"   DATE,\n    \"Ship Mode\"   TEXT,\n    \"Customer ID\" TEXT,\n    Region        TEXT,\n    \"Product ID\"  TEXT,\n    Sales         REAL,\n    Quantity      INTEGER,\n    Discount      REAL,\n    Profit        REAL,\n    foreign key (\"Customer ID\", Region) references people(\"Customer ID\",Region),\n    foreign key (\"Product ID\", Region) references product(\"Product ID\",Region)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "superstore",
            "toxicology",
            "student_club",
            "superhero",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "music_tracker_ext",
        "tables": [
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "music_tracker",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "app_store"
        ]
    },
    {
        "name": "genes_ext",
        "tables": [
            {
                "name": "Classification",
                "sql": "CREATE TABLE Classification\n(\n    GeneID       TEXT   not null\n        primary key,\n    Localization TEXT not null\n)"
            },
            {
                "name": "Genes",
                "sql": "CREATE TABLE Genes\n(\n    GeneID       TEXT   not null,\n    Essential    TEXT not null,\n    Class        TEXT not null,\n    Complex      TEXT null,\n    Phenotype    TEXT not null,\n    Motif        TEXT not null,\n    Chromosome   INTEGER          not null,\n    Function     TEXT not null,\n    Localization TEXT not null,\n    foreign key (GeneID) references Classification (GeneID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Interactions",
                "sql": "CREATE TABLE Interactions\n(\n    GeneID1         TEXT     not null,\n    GeneID2         TEXT      not null,\n    Type            TEXT    not null,\n    Expression_Corr REAL not null,\n    primary key (GeneID1, GeneID2),\n    foreign key (GeneID1) references Classification (GeneID)\n            on update cascade on delete cascade,\n    foreign key (GeneID2) references Classification (GeneID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "Ingredient",
                "sql": "CREATE TABLE Ingredient\n(\n    ingredient_id INTEGER\n            primary key,\n    category      TEXT,\n    name          TEXT,\n    plural        TEXT\n)"
            },
            {
                "name": "Recipe",
                "sql": "CREATE TABLE Recipe\n(\n    recipe_id  INTEGER\n            primary key,\n    title      TEXT,\n    subtitle   TEXT,\n    servings   INTEGER,\n    yield_unit TEXT,\n    prep_min   INTEGER,\n    cook_min   INTEGER,\n    stnd_min   INTEGER,\n    source     TEXT,\n    intro      TEXT,\n    directions TEXT\n)"
            },
            {
                "name": "Nutrition",
                "sql": "CREATE TABLE Nutrition\n(\n    recipe_id     INTEGER\n            primary key,\n    protein       REAL,\n    carbo         REAL,\n    alcohol       REAL,\n    total_fat     REAL,\n    sat_fat       REAL,\n    cholestrl     REAL,\n    sodium        REAL,\n    iron          REAL,\n    vitamin_c     REAL,\n    vitamin_a     REAL,\n    fiber         REAL,\n    pcnt_cal_carb REAL,\n    pcnt_cal_fat  REAL,\n    pcnt_cal_prot REAL,\n    calories      REAL,\n    foreign key (recipe_id) references Recipe(recipe_id)\n)"
            },
            {
                "name": "Quantity",
                "sql": "CREATE TABLE Quantity\n(\n    quantity_id   INTEGER\n            primary key,\n    recipe_id     INTEGER,\n    ingredient_id INTEGER,\n    max_qty       REAL,\n    min_qty       REAL,\n    unit          TEXT,\n    preparation   TEXT,\n    optional      TEXT,\n    foreign key (recipe_id) references Recipe(recipe_id),\n    foreign key (ingredient_id) references Ingredient(ingredient_id),\n    foreign key (recipe_id) references Nutrition(recipe_id)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "genes",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "cookbook",
            "image_and_language",
            "college_completion",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "movie_platform"
        ]
    },
    {
        "name": "world_development_indicators_ext",
        "tables": [
            {
                "name": "Country",
                "sql": "CREATE TABLE \"Country\"\n(\n    CountryCode                                TEXT not null\n        primary key,\n    ShortName                                  TEXT,\n    TableName                                  TEXT,\n    LongName                                   TEXT,\n    Alpha2Code                                 TEXT,\n    CurrencyUnit                               TEXT,\n    SpecialNotes                               TEXT,\n    Region                                     TEXT,\n    IncomeGroup                                TEXT,\n    Wb2Code                                    TEXT,\n    NationalAccountsBaseYear                   TEXT,\n    NationalAccountsReferenceYear              TEXT,\n    SnaPriceValuation                          TEXT,\n    LendingCategory                            TEXT,\n    OtherGroups                                TEXT,\n    SystemOfNationalAccounts                   TEXT,\n    AlternativeConversionFactor                TEXT,\n    PppSurveyYear                              TEXT,\n    BalanceOfPaymentsManualInUse               TEXT,\n    ExternalDebtReportingStatus                TEXT,\n    SystemOfTrade                              TEXT,\n    GovernmentAccountingConcept                TEXT,\n    ImfDataDisseminationStandard               TEXT,\n    LatestPopulationCensus                     TEXT,\n    LatestHouseholdSurvey                      TEXT,\n    SourceOfMostRecentIncomeAndExpenditureData TEXT,\n    VitalRegistrationComplete                  TEXT,\n    LatestAgriculturalCensus                   TEXT,\n    LatestIndustrialData                       INTEGER,\n    LatestTradeData                            INTEGER,\n    LatestWaterWithdrawalData                  INTEGER\n)"
            },
            {
                "name": "Series",
                "sql": "CREATE TABLE \"Series\"\n(\n    SeriesCode                       TEXT not null\n        primary key,\n    Topic                            TEXT,\n    IndicatorName                    TEXT,\n    ShortDefinition                  TEXT,\n    LongDefinition                   TEXT,\n    UnitOfMeasure                    TEXT,\n    Periodicity                      TEXT,\n    BasePeriod                       TEXT,\n    OtherNotes                       INTEGER,\n    AggregationMethod                TEXT,\n    LimitationsAndExceptions         TEXT,\n    NotesFromOriginalSource          TEXT,\n    GeneralComments                  TEXT,\n    Source                           TEXT,\n    StatisticalConceptAndMethodology TEXT,\n    DevelopmentRelevance             TEXT,\n    RelatedSourceLinks               TEXT,\n    OtherWebLinks                    INTEGER,\n    RelatedIndicators                INTEGER,\n    LicenseType                      TEXT\n)"
            },
            {
                "name": "CountryNotes",
                "sql": "CREATE TABLE CountryNotes\n(\n    Countrycode TEXT NOT NULL ,\n    Seriescode  TEXT NOT NULL ,\n    Description TEXT,\n    primary key (Countrycode, Seriescode),\n    FOREIGN KEY (Seriescode) REFERENCES Series(SeriesCode),\n    FOREIGN KEY (Countrycode) REFERENCES Country(CountryCode)\n)"
            },
            {
                "name": "Footnotes",
                "sql": "CREATE TABLE Footnotes\n(\n    Countrycode TEXT NOT NULL ,\n    Seriescode  TEXT NOT NULL ,\n    Year        TEXT,\n    Description TEXT,\n    primary key (Countrycode, Seriescode, Year),\n    FOREIGN KEY (Seriescode) REFERENCES Series(SeriesCode),\n    FOREIGN KEY (Countrycode) REFERENCES Country(CountryCode)\n)"
            },
            {
                "name": "Indicators",
                "sql": "CREATE TABLE Indicators\n(\n    CountryName   TEXT,\n    CountryCode   TEXT NOT NULL ,\n    IndicatorName TEXT,\n    IndicatorCode TEXT NOT NULL ,\n    Year          INTEGER NOT NULL ,\n    Value         INTEGER,\n    primary key (CountryCode, IndicatorCode, Year),\n    FOREIGN KEY (CountryCode) REFERENCES Country(CountryCode)\n)"
            },
            {
                "name": "SeriesNotes",
                "sql": "CREATE TABLE SeriesNotes\n(\n    Seriescode  TEXT not null ,\n    Year        TEXT not null ,\n    Description TEXT,\n    primary key (Seriescode, Year),\n    foreign key (Seriescode) references Series(SeriesCode)\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "lists",
                "sql": "CREATE TABLE \"lists\"\n(\n    user_id                     INTEGER\n        references lists_users (user_id),\n    list_id                     INTEGER not null\n        primary key,\n    list_title                  TEXT,\n    list_movie_number           INTEGER,\n    list_update_timestamp_utc   TEXT,\n    list_creation_timestamp_utc TEXT,\n    list_followers              INTEGER,\n    list_url                    TEXT,\n    list_comments               INTEGER,\n    list_description            TEXT,\n    list_cover_image_url        TEXT,\n    list_first_image_url        TEXT,\n    list_second_image_url       TEXT,\n    list_third_image_url        TEXT\n)"
            },
            {
                "name": "movies",
                "sql": "CREATE TABLE \"movies\"\n(\n    movie_id             INTEGER not null\n        primary key,\n    movie_title          TEXT,\n    movie_release_year   INTEGER,\n    movie_url            TEXT,\n    movie_title_language TEXT,\n    movie_popularity     INTEGER,\n    movie_image_url      TEXT,\n    director_id          TEXT,\n    director_name        TEXT,\n    director_url         TEXT\n)"
            },
            {
                "name": "ratings_users",
                "sql": "CREATE TABLE \"ratings_users\"\n(\n    user_id                 INTEGER\n        references lists_users (user_id),\n    rating_date_utc         TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER\n)"
            },
            {
                "name": "lists_users",
                "sql": "CREATE TABLE lists_users\n(\n    user_id                 INTEGER not null ,\n    list_id                 INTEGER not null ,\n    list_update_date_utc    TEXT,\n    list_creation_date_utc  TEXT,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_avatar_image_url   TEXT,\n    user_cover_image_url    TEXT,\n    user_eligible_for_trial TEXT,\n    user_has_payment_method TEXT,\n    primary key (user_id, list_id),\n    foreign key (list_id) references lists(list_id),\n    foreign key (user_id) references lists(user_id)\n)"
            },
            {
                "name": "ratings",
                "sql": "CREATE TABLE ratings\n(\n    movie_id                INTEGER,\n    rating_id               INTEGER,\n    rating_url              TEXT,\n    rating_score            INTEGER,\n    rating_timestamp_utc    TEXT,\n    critic                  TEXT,\n    critic_likes            INTEGER,\n    critic_comments         INTEGER,\n    user_id                 INTEGER,\n    user_trialist           INTEGER,\n    user_subscriber         INTEGER,\n    user_eligible_for_trial INTEGER,\n    user_has_payment_method INTEGER,\n    foreign key (movie_id) references movies(movie_id),\n    foreign key (user_id) references lists_users(user_id),\n    foreign key (rating_id) references ratings(rating_id),\n    foreign key (user_id) references ratings_users(user_id)\n)"
            }
        ],
        "original": [
            "world_development_indicators",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "movie_platform"
        ]
    },
    {
        "name": "app_store_ext",
        "tables": [
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "alignment",
                "sql": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)"
            },
            {
                "name": "attribute",
                "sql": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)"
            },
            {
                "name": "colour",
                "sql": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)"
            },
            {
                "name": "publisher",
                "sql": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)"
            },
            {
                "name": "race",
                "sql": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)"
            },
            {
                "name": "superhero",
                "sql": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
            },
            {
                "name": "hero_attribute",
                "sql": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
            },
            {
                "name": "superpower",
                "sql": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)"
            },
            {
                "name": "hero_power",
                "sql": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "cards",
                "sql": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)"
            },
            {
                "name": "foreign_data",
                "sql": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)"
            },
            {
                "name": "legalities",
                "sql": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "sets",
                "sql": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)"
            },
            {
                "name": "set_translations",
                "sql": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)"
            },
            {
                "name": "rulings",
                "sql": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "Examination",
                "sql": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Patient",
                "sql": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)"
            },
            {
                "name": "Laboratory",
                "sql": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "Question",
                "sql": "CREATE TABLE Question\n(\n    questiontext TEXT,\n    questionid   INTEGER\n        constraint Question_pk\n            primary key\n)"
            },
            {
                "name": "Survey",
                "sql": "CREATE TABLE Survey\n(\n    SurveyID    INTEGER\n        constraint Survey_pk\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Answer",
                "sql": "CREATE TABLE \"Answer\"\n(\n    AnswerText TEXT,\n    SurveyID   INTEGER\n        constraint Answer_Survey_SurveyID_fk\n            references Survey,\n    UserID     INTEGER,\n    QuestionID INTEGER\n        constraint Answer_Question_questionid_fk\n            references Question,\n    constraint Answer_pk\n        primary key (UserID, QuestionID)\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "incidents",
                "sql": "CREATE TABLE incidents\n(\n    case_number                TEXT  not null\n        primary key,\n    date                       DATE          not null,\n    location                   TEXT  not null,\n    subject_statuses           TEXT  not null,\n    subject_weapon             TEXT  not null,\n    subjects                   TEXT  not null,\n    subject_count              INTEGER           not null,\n    officers                  TEXT not null\n\n)"
            },
            {
                "name": "officers",
                "sql": "CREATE TABLE officers\n(\n    case_number TEXT not null,\n    race        TEXT         null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "subjects",
                "sql": "CREATE TABLE subjects\n(\n    case_number TEXT not null,\n    race        TEXT         not null,\n    gender      TEXT         not null,\n    last_name   TEXT not null,\n    first_name  TEXT null,\n    full_name   TEXT not null,\n    foreign key (case_number) references incidents (case_number)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "divisions",
                "sql": "CREATE TABLE divisions\n(\n    division TEXT not null\n        primary key,\n    name     TEXT,\n    country  TEXT\n)"
            },
            {
                "name": "matchs",
                "sql": "CREATE TABLE matchs\n(\n    Div      TEXT,\n    Date     DATE,\n    HomeTeam TEXT,\n    AwayTeam TEXT,\n    FTHG     INTEGER,\n    FTAG     INTEGER,\n    FTR      TEXT,\n    season   INTEGER,\n    foreign key (Div) references divisions(division)\n)"
            },
            {
                "name": "City",
                "sql": "CREATE TABLE `City` (\n  `ID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  `Name` TEXT NOT NULL DEFAULT '',\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `District` TEXT NOT NULL DEFAULT '',\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "Country",
                "sql": "CREATE TABLE `Country` (\n  `Code` TEXT NOT NULL DEFAULT '',\n  `Name` TEXT NOT NULL DEFAULT '',\n  `Continent` TEXT NOT NULL DEFAULT 'Asia',\n  `Region` TEXT NOT NULL DEFAULT '',\n  `SurfaceArea` REAL NOT NULL DEFAULT 0.00,\n  `IndepYear` INTEGER DEFAULT NULL,\n  `Population` INTEGER NOT NULL DEFAULT 0,\n  `LifeExpectancy` REAL DEFAULT NULL,\n  `GNP` REAL DEFAULT NULL,\n  `GNPOld` REAL DEFAULT NULL,\n  `LocalName` TEXT NOT NULL DEFAULT '',\n  `GovernmentForm` TEXT NOT NULL DEFAULT '',\n  `HeadOfState` TEXT DEFAULT NULL,\n  `Capital` INTEGER DEFAULT NULL,\n  `Code2` TEXT NOT NULL DEFAULT '',\n  PRIMARY KEY (`Code`)\n)"
            },
            {
                "name": "CountryLanguage",
                "sql": "CREATE TABLE `CountryLanguage` (\n  `CountryCode` TEXT NOT NULL DEFAULT '',\n  `Language` TEXT NOT NULL DEFAULT '',\n  `IsOfficial`TEXT NOT NULL DEFAULT 'F',\n  `Percentage` REAL NOT NULL DEFAULT 0.0,\n  PRIMARY KEY (`CountryCode`,`Language`),\n  FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "height_info",
                "sql": "CREATE TABLE height_info\n(\n    height_id      INTEGER\n            primary key,\n    height_in_cm   INTEGER,\n    height_in_inch TEXT\n)"
            },
            {
                "name": "weight_info",
                "sql": "CREATE TABLE weight_info\n(\n    weight_id     INTEGER\n            primary key,\n    weight_in_kg  INTEGER,\n    weight_in_lbs INTEGER\n)"
            },
            {
                "name": "PlayerInfo",
                "sql": "CREATE TABLE PlayerInfo\n(\n    ELITEID           INTEGER\n            primary key,\n    PlayerName        TEXT,\n    birthdate         TEXT,\n    birthyear         DATE,\n    birthmonth        INTEGER,\n    birthday          INTEGER,\n    birthplace        TEXT,\n    nation            TEXT,\n    height            INTEGER,\n    weight            INTEGER,\n    position_info     TEXT,\n    shoots            TEXT,\n    draftyear         INTEGER,\n    draftround        INTEGER,\n    overall           INTEGER,\n    overallby         TEXT,\n    CSS_rank          INTEGER,\n    sum_7yr_GP        INTEGER,\n    sum_7yr_TOI       INTEGER,\n    GP_greater_than_0 TEXT,\n    foreign key (height) references height_info(height_id),\n    foreign key (weight) references weight_info(weight_id)\n)"
            },
            {
                "name": "SeasonStatus",
                "sql": "CREATE TABLE SeasonStatus\n(\n    ELITEID   INTEGER,\n    SEASON    TEXT,\n    TEAM      TEXT,\n    LEAGUE    TEXT,\n    GAMETYPE  TEXT,\n    GP        INTEGER,\n    G         INTEGER,\n    A         INTEGER,\n    P         INTEGER,\n    PIM       INTEGER,\n    PLUSMINUS INTEGER,\n    foreign key (ELITEID) references PlayerInfo(ELITEID)\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "torrents",
                "sql": "CREATE TABLE \"torrents\"\n(\n    groupName     TEXT,\n    totalSnatched INTEGER,\n    artist        TEXT,\n    groupYear     INTEGER,\n    releaseType   TEXT,\n    groupId       INTEGER,\n    id            INTEGER\n        constraint torrents_pk\n            primary key\n)"
            },
            {
                "name": "tags",
                "sql": "CREATE TABLE \"tags\"\n(\n    \"index\" INTEGER\n        constraint tags_pk\n            primary key,\n    id      INTEGER\n        constraint tags_torrents_id_fk\n            references torrents,\n    tag     TEXT\n)"
            }
        ],
        "original": [
            "app_store",
            "toxicology",
            "student_club",
            "superhero",
            "debit_card_specializing",
            "card_games",
            "california_schools",
            "thrombosis_prediction",
            "mental_health_survey",
            "legislator",
            "airline",
            "shooting",
            "image_and_language",
            "college_completion",
            "european_football_1",
            "world",
            "restaurant",
            "trains",
            "ice_hockey_draft",
            "sales_in_weather",
            "menu",
            "music_tracker"
        ]
    },
    {
        "name": "movies_4_ext",
        "tables": [
            {
                "name": "country",
                "sql": "CREATE TABLE country\n(\n    country_id       INTEGER not null\n            primary key,\n    country_iso_code TEXT  default NULL,\n    country_name     TEXT default NULL\n)"
            },
            {
                "name": "department",
                "sql": "CREATE TABLE department\n(\n    department_id   INTEGER not null\n            primary key,\n    department_name TEXT default NULL\n)"
            },
            {
                "name": "gender",
                "sql": "CREATE TABLE gender\n(\n    gender_id INTEGER not null\n            primary key,\n    gender    TEXT default NULL\n)"
            },
            {
                "name": "genre",
                "sql": "CREATE TABLE genre\n(\n    genre_id   INTEGER not null\n            primary key,\n    genre_name TEXT default NULL\n)"
            },
            {
                "name": "keyword",
                "sql": "CREATE TABLE keyword\n(\n    keyword_id   INTEGER not null\n            primary key,\n    keyword_name TEXT default NULL\n)"
            },
            {
                "name": "language",
                "sql": "CREATE TABLE language\n(\n    language_id   INTEGER not null\n            primary key,\n    language_code TEXT  default NULL,\n    language_name TEXT default NULL\n)"
            },
            {
                "name": "language_role",
                "sql": "CREATE TABLE language_role\n(\n    role_id       INTEGER not null\n            primary key,\n    language_role TEXT default NULL\n)"
            },
            {
                "name": "movie",
                "sql": "CREATE TABLE movie\n(\n    movie_id    INTEGER not null\n            primary key,\n    title        TEXT  default NULL,\n    budget       INTEGER            default NULL,\n    homepage     TEXT  default NULL,\n    overview     TEXT  default NULL,\n    popularity   REAL default NULL,\n    release_date DATE           default NULL,\n    revenue      INTEGER     default NULL,\n    runtime      INTEGER           default NULL,\n    movie_status TEXT    default NULL,\n    tagline      TEXT  default NULL,\n    vote_average REAL  default NULL,\n    vote_count   INTEGER            default NULL\n)"
            },
            {
                "name": "movie_genres",
                "sql": "CREATE TABLE movie_genres\n(\n    movie_id INTEGER default NULL,\n    genre_id INTEGER default NULL,\n    foreign key (genre_id) references genre(genre_id),\n    foreign key (movie_id) references movie(movie_id)\n)"
            },
            {
                "name": "movie_languages",
                "sql": "CREATE TABLE movie_languages\n(\n    movie_id         INTEGER default NULL,\n    language_id      INTEGER default NULL,\n    language_role_id INTEGER default NULL,\n    foreign key (language_id) references language(language_id),\n    foreign key (movie_id) references movie(movie_id),\n    foreign key (language_role_id) references language_role(role_id)\n)"
            },
            {
                "name": "person",
                "sql": "CREATE TABLE person\n(\n    person_id   INTEGER not null\n            primary key,\n    person_name TEXT default NULL\n)"
            },
            {
                "name": "movie_crew",
                "sql": "CREATE TABLE movie_crew\n(\n    movie_id      INTEGER          default NULL,\n    person_id     INTEGER          default NULL,\n    department_id INTEGER          default NULL,\n    job           TEXT default NULL,\n    foreign key (department_id) references department(department_id),\n    foreign key (movie_id) references movie(movie_id),\n    foreign key (person_id) references person(person_id)\n)"
            },
            {
                "name": "production_company",
                "sql": "CREATE TABLE production_company\n(\n    company_id   INTEGER not null\n            primary key,\n    company_name TEXT default NULL\n)"
            },
            {
                "name": "production_country",
                "sql": "CREATE TABLE production_country\n(\n    movie_id   INTEGER default NULL,\n    country_id INTEGER default NULL,\n    foreign key (country_id) references country(country_id),\n    foreign key (movie_id) references movie(movie_id)\n)"
            },
            {
                "name": "movie_cast",
                "sql": "CREATE TABLE movie_cast\n(\n    movie_id       INTEGER          default NULL,\n    person_id      INTEGER          default NULL,\n    character_name TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    cast_order     INTEGER       default NULL,\n    foreign key (gender_id) references gender(gender_id),\n    foreign key (movie_id) references movie(movie_id),\n    foreign key (person_id) references person(person_id)\n)"
            },
            {
                "name": "movie_keywords",
                "sql": "CREATE TABLE \"movie_keywords\"\n(\n    movie_id   INTEGER default NULL\n        references movie,\n    keyword_id INTEGER default NULL\n        references keyword\n)"
            },
            {
                "name": "movie_company",
                "sql": "CREATE TABLE \"movie_company\"\n(\n    movie_id   INTEGER default NULL\n        references movie,\n    company_id INTEGER default NULL\n        references production_company\n)"
            },
            {
                "name": "atom",
                "sql": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "bond",
                "sql": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
            },
            {
                "name": "connected",
                "sql": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "molecule",
                "sql": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)"
            },
            {
                "name": "event",
                "sql": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)"
            },
            {
                "name": "major",
                "sql": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)"
            },
            {
                "name": "zip_code",
                "sql": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)"
            },
            {
                "name": "attendance",
                "sql": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "budget",
                "sql": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)"
            },
            {
                "name": "expense",
                "sql": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "income",
                "sql": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)"
            },
            {
                "name": "member",
                "sql": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
            },
            {
                "name": "customers",
                "sql": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)"
            },
            {
                "name": "gasstations",
                "sql": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)"
            },
            {
                "name": "products",
                "sql": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)"
            },
            {
                "name": "transactions_1k",
                "sql": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)"
            },
            {
                "name": "yearmonth",
                "sql": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)"
            },
            {
                "name": "frpm",
                "sql": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
            },
            {
                "name": "satscores",
                "sql": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)"
            },
            {
                "name": "schools",
                "sql": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
            },
            {
                "name": "current",
                "sql": "CREATE TABLE current\n(\n    ballotpedia_id      TEXT,\n    bioguide_id         TEXT,\n    birthday_bio        DATE,\n    cspan_id            REAL,\n    fec_id              TEXT,\n    first_name          TEXT,\n    gender_bio          TEXT,\n    google_entity_id_id TEXT,\n    govtrack_id         INTEGER,\n    house_history_id    REAL,\n    icpsr_id            REAL,\n    last_name           TEXT,\n    lis_id              TEXT,\n    maplight_id         REAL,\n    middle_name         TEXT,\n    nickname_name       TEXT,\n    official_full_name  TEXT,\n    opensecrets_id      TEXT,\n    religion_bio        TEXT,\n    suffix_name         TEXT,\n    thomas_id           INTEGER,\n    votesmart_id        REAL,\n    wikidata_id         TEXT,\n    wikipedia_id        TEXT,\n        primary key (bioguide_id, cspan_id)\n)"
            },
            {
                "name": "current-terms",
                "sql": "CREATE TABLE \"current-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT,\n    caucus             TEXT,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    primary key (bioguide, end),\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "historical",
                "sql": "CREATE TABLE historical\n(\n    ballotpedia_id             TEXT,\n    bioguide_id                TEXT\n            primary key,\n    bioguide_previous_id       TEXT,\n    birthday_bio               TEXT,\n    cspan_id                   TEXT,\n    fec_id                     TEXT,\n    first_name                 TEXT,\n    gender_bio                 TEXT,\n    google_entity_id_id        TEXT,\n    govtrack_id                INTEGER,\n    house_history_alternate_id TEXT,\n    house_history_id           REAL,\n    icpsr_id                   REAL,\n    last_name                  TEXT,\n    lis_id                     TEXT,\n    maplight_id                TEXT,\n    middle_name                TEXT,\n    nickname_name              TEXT,\n    official_full_name         TEXT,\n    opensecrets_id             TEXT,\n    religion_bio               TEXT,\n    suffix_name                TEXT,\n    thomas_id                  TEXT,\n    votesmart_id               TEXT,\n    wikidata_id                TEXT,\n    wikipedia_id               TEXT\n)"
            },
            {
                "name": "historical-terms",
                "sql": "CREATE TABLE \"historical-terms\"\n(\n    address            TEXT,\n    bioguide           TEXT\n            primary key,\n    chamber            TEXT,\n    class              REAL,\n    contact_form       TEXT,\n    district           REAL,\n    end                TEXT,\n    fax                TEXT,\n    last               TEXT,\n    middle             TEXT,\n    name               TEXT,\n    office             TEXT,\n    party              TEXT,\n    party_affiliations TEXT,\n    phone              TEXT,\n    relation           TEXT,\n    rss_url            TEXT,\n    start              TEXT,\n    state              TEXT,\n    state_rank         TEXT,\n    title              TEXT,\n    type               TEXT,\n    url                TEXT,\n    foreign key (bioguide) references historical(bioguide_id)\n)"
            },
            {
                "name": "social-media",
                "sql": "CREATE TABLE \"social-media\"\n(\n    bioguide     TEXT\n            primary key,\n    facebook     TEXT,\n    facebook_id  REAL,\n    govtrack     REAL,\n    instagram    TEXT,\n    instagram_id REAL,\n    thomas       INTEGER,\n    twitter      TEXT,\n    twitter_id   REAL,\n    youtube      TEXT,\n    youtube_id   TEXT,\n    foreign key (bioguide) references current(bioguide_id)\n)"
            },
            {
                "name": "Air Carriers",
                "sql": "CREATE TABLE \"Air Carriers\"\n(\n    Code        INTEGER\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airports",
                "sql": "CREATE TABLE Airports\n(\n    Code        TEXT\n            primary key,\n    Description TEXT\n)"
            },
            {
                "name": "Airlines",
                "sql": "CREATE TABLE Airlines\n(\n    FL_DATE               TEXT,\n    OP_CARRIER_AIRLINE_ID INTEGER,\n    TAIL_NUM              TEXT,\n    OP_CARRIER_FL_NUM     INTEGER,\n    ORIGIN_AIRPORT_ID     INTEGER,\n    ORIGIN_AIRPORT_SEQ_ID INTEGER,\n    ORIGIN_CITY_MARKET_ID INTEGER,\n    ORIGIN                TEXT,\n    DEST_AIRPORT_ID       INTEGER,\n    DEST_AIRPORT_SEQ_ID   INTEGER,\n    DEST_CITY_MARKET_ID   INTEGER,\n    DEST                  TEXT,\n    CRS_DEP_TIME          INTEGER,\n    DEP_TIME              INTEGER,\n    DEP_DELAY             INTEGER,\n    DEP_DELAY_NEW         INTEGER,\n    ARR_TIME              INTEGER,\n    ARR_DELAY             INTEGER,\n    ARR_DELAY_NEW         INTEGER,\n    CANCELLED             INTEGER,\n    CANCELLATION_CODE     TEXT,\n    CRS_ELAPSED_TIME      INTEGER,\n    ACTUAL_ELAPSED_TIME   INTEGER,\n    CARRIER_DELAY         INTEGER,\n    WEATHER_DELAY         INTEGER,\n    NAS_DELAY             INTEGER,\n    SECURITY_DELAY        INTEGER,\n    LATE_AIRCRAFT_DELAY   INTEGER,\n    FOREIGN KEY (ORIGIN) REFERENCES Airports(Code),\n    FOREIGN KEY (DEST) REFERENCES Airports(Code),\n    FOREIGN KEY (OP_CARRIER_AIRLINE_ID) REFERENCES \"Air Carriers\"(Code)\n)"
            },
            {
                "name": "ATT_CLASSES",
                "sql": "CREATE TABLE ATT_CLASSES\n(\n    ATT_CLASS_ID INTEGER default 0 not null\n        primary key,\n    ATT_CLASS    TEXT      not null\n)"
            },
            {
                "name": "OBJ_CLASSES",
                "sql": "CREATE TABLE OBJ_CLASSES\n(\n    OBJ_CLASS_ID INTEGER default 0 not null\n        primary key,\n    OBJ_CLASS    TEXT      not null\n)"
            },
            {
                "name": "IMG_OBJ",
                "sql": "CREATE TABLE IMG_OBJ\n(\n    IMG_ID        INTEGER default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ_CLASS_ID  INTEGER              null,\n    X             INTEGER              null,\n    Y             INTEGER             null,\n    W             INTEGER              null,\n    H             INTEGER              null,\n    primary key (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (OBJ_CLASS_ID) references OBJ_CLASSES (OBJ_CLASS_ID)\n)"
            },
            {
                "name": "IMG_OBJ_ATT",
                "sql": "CREATE TABLE IMG_OBJ_ATT\n(\n    IMG_ID        INTEGER default 0 not null,\n    ATT_CLASS_ID  INTEGER    default 0 not null,\n    OBJ_SAMPLE_ID INTEGER    default 0 not null,\n    primary key (IMG_ID, ATT_CLASS_ID, OBJ_SAMPLE_ID),\n    foreign key (ATT_CLASS_ID) references ATT_CLASSES (ATT_CLASS_ID),\n    foreign key (IMG_ID, OBJ_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "PRED_CLASSES",
                "sql": "CREATE TABLE PRED_CLASSES\n(\n    PRED_CLASS_ID INTEGER default 0 not null\n        primary key,\n    PRED_CLASS    TEXT     not null\n)"
            },
            {
                "name": "IMG_REL",
                "sql": "CREATE TABLE IMG_REL\n(\n    IMG_ID         INTEGER default 0 not null,\n    PRED_CLASS_ID  INTEGER    default 0 not null,\n    OBJ1_SAMPLE_ID INTEGER    default 0 not null,\n    OBJ2_SAMPLE_ID INTEGER   default 0 not null,\n    primary key (IMG_ID, PRED_CLASS_ID, OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID),\n    foreign key (PRED_CLASS_ID) references PRED_CLASSES (PRED_CLASS_ID),\n    foreign key (IMG_ID, OBJ1_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID),\n    foreign key (IMG_ID, OBJ2_SAMPLE_ID) references IMG_OBJ (IMG_ID, OBJ_SAMPLE_ID)\n)"
            },
            {
                "name": "awards_players",
                "sql": "CREATE TABLE awards_players\n(\n    playerID TEXT not null,\n    award    TEXT not null,\n    year     INTEGER          not null,\n    lgID     TEXT null,\n    note     TEXT null,\n    pos      TEXT null,\n    primary key (playerID, year, award),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "coaches",
                "sql": "CREATE TABLE coaches\n(\n    coachID     TEXT not null,\n    year        INTEGER          not null,\n    tmID        TEXT not null,\n    lgID        TEXT null,\n    stint       INTEGER          not null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    post_wins   INTEGER          null,\n    post_losses INTEGER          null,\n    primary key (coachID, year, tmID, stint),\n    foreign key (tmID, year) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "draft",
                "sql": "CREATE TABLE draft\n(\n    id             INTEGER default 0 not null\n        primary key,\n    draftYear      INTEGER           null,\n    draftRound     INTEGER           null,\n    draftSelection INTEGER           null,\n    draftOverall   INTEGER          null,\n    tmID           TEXT  null,\n    firstName      TEXT  null,\n    lastName       TEXT  null,\n    suffixName     TEXT  null,\n    playerID       TEXT  null,\n    draftFrom      TEXT  null,\n    lgID           TEXT  null,\n    foreign key (tmID, draftYear) references teams (tmID, year)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "player_allstar",
                "sql": "CREATE TABLE player_allstar\n(\n    playerID        TEXT not null,\n    last_name       TEXT null,\n    first_name      TEXT null,\n    season_id       INTEGER          not null,\n    conference      TEXT null,\n    league_id       TEXT null,\n    games_played    INTEGER          null,\n    minutes         INTEGER          null,\n    points          INTEGER          null,\n    o_rebounds      INTEGER          null,\n    d_rebounds      INTEGER          null,\n    rebounds        INTEGER          null,\n    assists         INTEGER          null,\n    steals          INTEGER          null,\n    blocks          INTEGER          null,\n    turnovers       INTEGER          null,\n    personal_fouls  INTEGER          null,\n    fg_attempted    INTEGER          null,\n    fg_made         INTEGER          null,\n    ft_attempted    INTEGER          null,\n    ft_made         INTEGER          null,\n    three_attempted INTEGER          null,\n    three_made      INTEGER          null,\n    primary key (playerID, season_id),\n    foreign key (playerID) references players (playerID)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "players",
                "sql": "CREATE TABLE players\n(\n    playerID      TEXT not null\n        primary key,\n    useFirst      TEXT null,\n    firstName     TEXT null,\n    middleName    TEXT null,\n    lastName      TEXT null,\n    nameGiven     TEXT null,\n    fullGivenName TEXT null,\n    nameSuffix    TEXT null,\n    nameNick      TEXT null,\n    pos           TEXT null,\n    firstseason   INTEGER          null,\n    lastseason    INTEGER         null,\n    height        REAL        null,\n    weight        INTEGER         null,\n    college       TEXT null,\n    collegeOther  TEXT null,\n    birthDate     DATE         null,\n    birthCity     TEXT null,\n    birthState    TEXT null,\n    birthCountry  TEXT null,\n    highSchool    TEXT null,\n    hsCity        TEXT null,\n    hsState       TEXT null,\n    hsCountry     TEXT null,\n    deathDate     DATE         null,\n    race          TEXT null\n)"
            },
            {
                "name": "teams",
                "sql": "CREATE TABLE teams\n(\n    year        INTEGER          not null,\n    lgID        TEXT null,\n    tmID        TEXT not null,\n    franchID    TEXT null,\n    confID      TEXT null,\n    divID       TEXT null,\n    `rank`      INTEGER          null,\n    confRank    INTEGER          null,\n    playoff     TEXT null,\n    name        TEXT null,\n    o_fgm       INTEGER          null,\n--     o_fga       int          null,\n    o_ftm       INTEGER          null,\n--     o_fta       int          null,\n--     o_3pm       int          null,\n--     o_3pa       int          null,\n--     o_oreb      int          null,\n--     o_dreb      int          null,\n--     o_reb       int          null,\n--     o_asts      int          null,\n--     o_pf        int          null,\n--     o_stl       int          null,\n--     o_to        int          null,\n--     o_blk       int          null,\n     o_pts       INTEGER          null,\n--     d_fgm       int          null,\n--     d_fga       int          null,\n--     d_ftm       int          null,\n--     d_fta       int          null,\n--     d_3pm       int          null,\n--     d_3pa       int          null,\n--     d_oreb      int          null,\n--     d_dreb      int          null,\n--     d_reb       int          null,\n--     d_asts      int          null,\n--     d_pf        int          null,\n--     d_stl       int          null,\n--     d_to        int          null,\n--     d_blk       int          null,\n     d_pts       INTEGER          null,\n--     o_tmRebound int          null,\n--     d_tmRebound int          null,\n    homeWon     INTEGER          null,\n    homeLost    INTEGER          null,\n    awayWon     INTEGER          null,\n    awayLost    INTEGER          null,\n--     neutWon     int          null,\n--     neutLoss    int          null,\n--     confWon     int          null,\n--     confLoss    int          null,\n--     divWon      int          null,\n--     divLoss     int          null,\n--     pace        int          null,\n    won         INTEGER          null,\n    lost        INTEGER          null,\n    games       INTEGER          null,\n--     min         int          null,\n    arena       TEXT null,\n--     attendance  int          null,\n--     bbtmID      varchar(255) null,\n    primary key (year, tmID)\n)"
            },
            {
                "name": "awards_coaches",
                "sql": "CREATE TABLE \"awards_coaches\"\n(\n    id      INTEGER\n        primary key autoincrement,\n    year    INTEGER,\n    coachID TEXT,\n    award   TEXT,\n    lgID    TEXT,\n    note    TEXT,\n    foreign key (coachID, year) references coaches (coachID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "players_teams",
                "sql": "CREATE TABLE \"players_teams\"\n(\n    id                 INTEGER\n        primary key autoincrement,\n    playerID           TEXT not null\n        references players\n            on update cascade on delete cascade,\n    year               INTEGER,\n    stint              INTEGER,\n    tmID               TEXT,\n    lgID               TEXT,\n    GP                 INTEGER,\n    GS                 INTEGER,\n    minutes            INTEGER,\n    points             INTEGER,\n    oRebounds          INTEGER,\n    dRebounds          INTEGER,\n    rebounds           INTEGER,\n    assists            INTEGER,\n    steals             INTEGER,\n    blocks             INTEGER,\n    turnovers          INTEGER,\n    PF                 INTEGER,\n    fgAttempted        INTEGER,\n    fgMade             INTEGER,\n    ftAttempted        INTEGER,\n    ftMade             INTEGER,\n    threeAttempted     INTEGER,\n    threeMade          INTEGER,\n    PostGP             INTEGER,\n    PostGS             INTEGER,\n    PostMinutes        INTEGER,\n    PostPoints         INTEGER,\n    PostoRebounds      INTEGER,\n    PostdRebounds      INTEGER,\n    PostRebounds       INTEGER,\n    PostAssists        INTEGER,\n    PostSteals         INTEGER,\n    PostBlocks         INTEGER,\n    PostTurnovers      INTEGER,\n    PostPF             INTEGER,\n    PostfgAttempted    INTEGER,\n    PostfgMade         INTEGER,\n    PostftAttempted    INTEGER,\n    PostftMade         INTEGER,\n    PostthreeAttempted INTEGER,\n    PostthreeMade      INTEGER,\n    note               TEXT,\n    foreign key (tmID, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "series_post",
                "sql": "CREATE TABLE \"series_post\"\n(\n    id         INTEGER\n        primary key autoincrement,\n    year       INTEGER,\n    round      TEXT,\n    series     TEXT,\n    tmIDWinner TEXT,\n    lgIDWinner TEXT,\n    tmIDLoser  TEXT,\n    lgIDLoser  TEXT,\n    W          INTEGER,\n    L          INTEGER,\n    foreign key (tmIDWinner, year) references teams (tmID, year)\n        on update cascade on delete cascade,\n    foreign key (tmIDLoser, year) references teams (tmID, year)\n        on update cascade on delete cascade\n)"
            },
            {
                "name": "institution_details",
                "sql": "CREATE TABLE institution_details\n(\n    unitid                               INTEGER\n        constraint institution_details_pk\n            primary key,\n    chronname                            TEXT,\n    city                                 TEXT,\n    state                                TEXT,\n    level                                TEXT,\n    control                              TEXT,\n    basic                                TEXT,\n    hbcu                                 TEXT,\n    flagship                             TEXT,\n    long_x                               REAL,\n    lat_y                                REAL,\n    site                                 TEXT,\n    student_count                        INTEGER,\n    awards_per_value                     REAL,\n    awards_per_state_value               REAL,\n    awards_per_natl_value                REAL,\n    exp_award_value                      INTEGER,\n    exp_award_state_value                INTEGER,\n    exp_award_natl_value                 INTEGER,\n    exp_award_percentile                 INTEGER,\n    ft_pct                               REAL,\n    fte_value                            INTEGER,\n    fte_percentile                       INTEGER,\n    med_sat_value                        TEXT,\n    med_sat_percentile                   TEXT,\n    aid_value                            INTEGER,\n    aid_percentile                       INTEGER,\n    endow_value                          TEXT,\n    endow_percentile                     TEXT,\n    grad_100_value                       REAL,\n    grad_100_percentile                  INTEGER,\n    grad_150_value                       REAL,\n    grad_150_percentile                  INTEGER,\n    pell_value                           REAL,\n    pell_percentile                      INTEGER,\n    retain_value                         REAL,\n    retain_percentile                    INTEGER,\n    ft_fac_value                         REAL,\n    ft_fac_percentile                    INTEGER,\n    vsa_year                             TEXT,\n    vsa_grad_after4_first                TEXT,\n    vsa_grad_elsewhere_after4_first      TEXT,\n    vsa_enroll_after4_first              TEXT,\n    vsa_enroll_elsewhere_after4_first    TEXT,\n    vsa_grad_after6_first                TEXT,\n    vsa_grad_elsewhere_after6_first      TEXT,\n    vsa_enroll_after6_first              TEXT,\n    vsa_enroll_elsewhere_after6_first    TEXT,\n    vsa_grad_after4_transfer             TEXT,\n    vsa_grad_elsewhere_after4_transfer   TEXT,\n    vsa_enroll_after4_transfer           TEXT,\n    vsa_enroll_elsewhere_after4_transfer TEXT,\n    vsa_grad_after6_transfer             TEXT,\n    vsa_grad_elsewhere_after6_transfer   TEXT,\n    vsa_enroll_after6_transfer           TEXT,\n    vsa_enroll_elsewhere_after6_transfer TEXT,\n    similar                              TEXT,\n    state_sector_ct                      INTEGER,\n    carnegie_ct                          INTEGER,\n    counted_pct                          TEXT,\n    nicknames                            TEXT,\n    cohort_size                          INTEGER\n)"
            },
            {
                "name": "institution_grads",
                "sql": "CREATE TABLE institution_grads\n(\n    unitid        INTEGER,\n    year          INTEGER,\n    gender        TEXT,\n    race          TEXT,\n    cohort        TEXT,\n    grad_cohort   TEXT,\n    grad_100      TEXT,\n    grad_150      TEXT,\n    grad_100_rate TEXT,\n    grad_150_rate TEXT,\n    foreign key (unitid) references institution_details(unitid)\n)"
            },
            {
                "name": "state_sector_grads",
                "sql": "CREATE TABLE state_sector_grads\n(\n    stateid        INTEGER,\n    state          TEXT,\n    state_abbr     TEXT,\n    control        TEXT,\n    level          TEXT,\n    year           INTEGER,\n    gender         TEXT,\n    race           TEXT,\n    cohort         TEXT,\n    grad_cohort    TEXT,\n    grad_100       TEXT,\n    grad_150       TEXT,\n    grad_100_rate  TEXT,\n    grad_150_rate  TEXT,\n    grad_cohort_ct INTEGER,\n    foreign key (state) references institution_details(state),\n    foreign key (stateid) references state_sector_details(stateid)\n)"
            },
            {
                "name": "state_sector_details",
                "sql": "CREATE TABLE \"state_sector_details\"\n(\n    stateid                INTEGER,\n    state                  TEXT\n        references institution_details (state),\n    state_post             TEXT,\n    level                  TEXT,\n    control                TEXT,\n    schools_count          INTEGER,\n    counted_pct            TEXT,\n    awards_per_state_value TEXT,\n    awards_per_natl_value  REAL,\n    exp_award_state_value  TEXT,\n    exp_award_natl_value   INTEGER,\n    state_appr_value       TEXT,\n    state_appr_rank        TEXT,\n    grad_rate_rank         TEXT,\n    awards_per_rank        TEXT,\n    primary key (stateid, level, control)\n)"
            },
            {
                "name": "geographic",
                "sql": "CREATE TABLE geographic\n(\n    city   TEXT not null\n        primary key,\n    county TEXT null,\n    region TEXT null\n)"
            },
            {
                "name": "generalinfo",
                "sql": "CREATE TABLE generalinfo\n(\n    id_restaurant INTEGER         not null\n        primary key,\n    label         TEXT  null,\n    food_type     TEXT  null,\n    city          TEXT  null,\n    review        REAL null,\n    foreign key (city) references geographic(city)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "location",
                "sql": "CREATE TABLE location\n(\n    id_restaurant INTEGER        not null\n        primary key,\n    street_num    INTEGER          null,\n    street_name   TEXT null,\n    city          TEXT null,\n    foreign key (city) references geographic (city)\n            on update cascade on delete cascade,\n    foreign key (id_restaurant) references generalinfo (id_restaurant)\n            on update cascade on delete cascade\n)"
            },
            {
                "name": "cars",
                "sql": "CREATE TABLE `cars` (\n  `id` INTEGER NOT NULL,\n  `train_id` INTEGER DEFAULT NULL,\n  `position` INTEGER DEFAULT NULL,\n  `shape` TEXT DEFAULT NULL,\n  `len`TEXT DEFAULT NULL,\n  `sides` TEXT DEFAULT NULL,\n  `roof` TEXT DEFAULT NULL,\n  `wheels` INTEGER DEFAULT NULL,\n  `load_shape` TEXT DEFAULT NULL,\n  `load_num` INTEGER DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
            },
            {
                "name": "trains",
                "sql": "CREATE TABLE `trains` (\n  `id` INTEGER NOT NULL,\n  `direction` TEXT DEFAULT NULL,\n  PRIMARY KEY (`id`)\n)"
            },
            {
                "name": "Method",
                "sql": "CREATE TABLE \"Method\"\n(\n    Id            INTEGER not null\n        primary key autoincrement,\n    Name          TEXT,\n    FullComment   TEXT,\n    Summary       TEXT,\n    ApiCalls      TEXT,\n    CommentIsXml  INTEGER,\n    SampledAt     INTEGER,\n    SolutionId    INTEGER,\n    Lang          TEXT,\n    NameTokenized TEXT\n)"
            },
            {
                "name": "MethodParameter",
                "sql": "CREATE TABLE \"MethodParameter\"\n(\n    Id       INTEGER not null\n        primary key autoincrement,\n    MethodId TEXT,\n    Type     TEXT,\n    Name     TEXT\n)"
            },
            {
                "name": "Repo",
                "sql": "CREATE TABLE Repo\n(\n    Id            INTEGER not null\n        primary key autoincrement,\n    Url           TEXT,\n    Stars         INTEGER,\n    Forks         INTEGER,\n    Watchers      INTEGER,\n    ProcessedTime INTEGER\n)"
            },
            {
                "name": "Solution",
                "sql": "CREATE TABLE Solution\n(\n    Id            INTEGER not null\n        primary key autoincrement,\n    RepoId        INTEGER,\n    Path          TEXT,\n    ProcessedTime INTEGER,\n    WasCompiled   INTEGER\n)"
            },
            {
                "name": "sales_in_weather",
                "sql": "CREATE TABLE sales_in_weather\n(\n    date      DATE,\n    store_nbr INTEGER,\n    item_nbr  INTEGER,\n    units     INTEGER,\n    primary key (store_nbr, date, item_nbr)\n)"
            },
            {
                "name": "weather",
                "sql": "CREATE TABLE weather\n(\n    station_nbr INTEGER,\n    date        DATE,\n    tmax        INTEGER,\n    tmin        INTEGER,\n    tavg        INTEGER,\n    depart      INTEGER,\n    dewpoint    INTEGER,\n    wetbulb     INTEGER,\n    heat        INTEGER,\n    cool        INTEGER,\n    sunrise     TEXT,\n    sunset      TEXT,\n    codesum     TEXT,\n    snowfall    REAL,\n    preciptotal REAL,\n    stnpressure REAL,\n    sealevel    REAL,\n    resultspeed REAL,\n    resultdir   INTEGER,\n    avgspeed    REAL,\n    primary key (station_nbr, date)\n)"
            },
            {
                "name": "relation",
                "sql": "CREATE TABLE relation\n(\n    store_nbr   INTEGER\n            primary key,\n    station_nbr INTEGER,\n    foreign key (store_nbr) references sales_in_weather(store_nbr),\n    foreign key (station_nbr) references weather(station_nbr)\n)"
            },
            {
                "name": "breweries",
                "sql": "CREATE TABLE breweries\n(\n    id    INTEGER          not null\n        primary key,\n    name  TEXT null,\n    city  TEXT null,\n    state TEXT null\n)"
            },
            {
                "name": "beers",
                "sql": "CREATE TABLE \"beers\"\n(\n    id         INTEGER not null\n        primary key,\n    brewery_id INTEGER not null\n        constraint beers_ibfk_1\n            references breweries,\n    abv        REAL,\n    ibu        REAL,\n    name       TEXT    not null,\n    style      TEXT,\n    ounces     REAL    not null\n)"
            },
            {
                "name": "Dish",
                "sql": "CREATE TABLE Dish\n(\n    id             INTEGER\n            primary key,\n    name           TEXT,\n    description    TEXT,\n    menus_appeared INTEGER,\n    times_appeared INTEGER,\n    first_appeared INTEGER,\n    last_appeared  INTEGER,\n    lowest_price   REAL,\n    highest_price  REAL\n)"
            },
            {
                "name": "Menu",
                "sql": "CREATE TABLE Menu\n(\n    id                   INTEGER\n            primary key,\n    name                 TEXT,\n    sponsor              TEXT,\n    event                TEXT,\n    venue                TEXT,\n    place                TEXT,\n    physical_description TEXT,\n    occasion             TEXT,\n    notes                TEXT,\n    call_number          TEXT,\n    keywords             TEXT,\n    language             TEXT,\n    date                 DATE,\n    location             TEXT,\n    location_type        TEXT,\n    currency             TEXT,\n    currency_symbol      TEXT,\n    status               TEXT,\n    page_count           INTEGER,\n    dish_count           INTEGER\n)"
            },
            {
                "name": "MenuPage",
                "sql": "CREATE TABLE MenuPage\n(\n    id          INTEGER\n            primary key,\n    menu_id     INTEGER,\n    page_number INTEGER,\n    image_id    REAL,\n    full_height INTEGER,\n    full_width  INTEGER,\n    uuid        TEXT,\n    foreign key (menu_id) references Menu(id)\n)"
            },
            {
                "name": "MenuItem",
                "sql": "CREATE TABLE MenuItem\n(\n    id           INTEGER\n            primary key,\n    menu_page_id INTEGER,\n    price        REAL,\n    high_price   REAL,\n    dish_id      INTEGER,\n    created_at   TEXT,\n    updated_at   TEXT,\n    xpos         REAL,\n    ypos         REAL,\n    foreign key (dish_id) references Dish(id),\n    foreign key (menu_page_id) references MenuPage(id)\n)"
            },
            {
                "name": "playstore",
                "sql": "CREATE TABLE \"playstore\"\n(\n    App              TEXT,\n    Category         TEXT,\n    Rating           REAL,\n    Reviews          INTEGER,\n    Size             TEXT,\n    Installs         TEXT,\n    Type             TEXT,\n    Price            TEXT,\n    \"Content Rating\" TEXT,\n    Genres           TEXT\n)"
            },
            {
                "name": "user_reviews",
                "sql": "CREATE TABLE \"user_reviews\"\n(\n    App                    TEXT\n        references \"playstore\" (App),\n    Translated_Review      TEXT,\n    Sentiment              TEXT,\n    Sentiment_Polarity     TEXT,\n    Sentiment_Subjectivity TEXT\n)"
            }
        ],
        "original": [
            "movies_4",
            "toxicology",
            "student_club",
            "debit_card_specializing",
            "california_schools",
            "legislator",
            "airline",
            "image_and_language",
            "professional_basketball",
            "college_completion",
            "restaurant",
            "trains",
            "codebase_comments",
            "sales_in_weather",
            "craftbeer",
            "menu",
            "app_store"
        ]
    }
]